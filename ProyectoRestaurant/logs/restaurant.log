2025-06-08 21:04:57.587 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:04:57.624 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:04:57.630 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:04:57.632 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:04:57.656 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:04:57.661 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:04:57.799 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:04:58.019 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:04:58.032 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:04:58.033 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:04:58.034 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:04:58.035 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:04:58.036 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:04:58.095 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - Starting application using Java 23.0.2 with PID 1120 (started by USUARIO in C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant)
2025-06-08 21:04:58.097 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-08 21:04:59.217 [JavaFX-Launcher] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-08 21:04:59.361 [JavaFX-Launcher] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 130 ms. Found 10 JPA repository interfaces.
2025-06-08 21:04:59.897 [JavaFX-Launcher] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@33909752
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/USUARIO/Documents/ProyectoRestaurantJava/ProyectoRestaurant/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		pe.edu.upeu.proyecto_restaurant.modulo.Categoria
		pe.edu.upeu.proyecto_restaurant.modulo.Cliente
		pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
		pe.edu.upeu.proyecto_restaurant.modulo.Empleado
		pe.edu.upeu.proyecto_restaurant.modulo.Factura
		pe.edu.upeu.proyecto_restaurant.modulo.Menu
		pe.edu.upeu.proyecto_restaurant.modulo.Mesa
		pe.edu.upeu.proyecto_restaurant.modulo.Pedido
		pe.edu.upeu.proyecto_restaurant.modulo.Producto
		pe.edu.upeu.proyecto_restaurant.modulo.Seccion]
	Mapping files names []
	Properties []
2025-06-08 21:04:59.912 [JavaFX-Launcher] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-06-08 21:04:59.914 [JavaFX-Launcher] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-06-08 21:05:00.000 [JavaFX-Launcher] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-08 21:05:00.002 [JavaFX-Launcher] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found
2025-06-08 21:05:00.039 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-06-08 21:05:00.040 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-06-08 21:05:00.042 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:05:00.043 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:05:00.045 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-06-08 21:05:00.048 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-06-08 21:05:00.049 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-06-08 21:05:00.051 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:05:00.053 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-06-08 21:05:00.054 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-06-08 21:05:00.055 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:05:00.057 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-06-08 21:05:00.067 [JavaFX-Launcher] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-06-08 21:05:00.069 [JavaFX-Launcher] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-08 21:05:00.186 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@34b67e31
2025-06-08 21:05:00.187 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@34b67e31
2025-06-08 21:05:00.187 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@34b67e31
2025-06-08 21:05:00.188 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@74035199
2025-06-08 21:05:00.188 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@74035199
2025-06-08 21:05:00.189 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7cba70e0
2025-06-08 21:05:00.189 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7cba70e0
2025-06-08 21:05:00.189 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@da947af
2025-06-08 21:05:00.189 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@da947af
2025-06-08 21:05:00.190 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@a69e7dd
2025-06-08 21:05:00.190 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@a69e7dd
2025-06-08 21:05:00.190 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@a69e7dd
2025-06-08 21:05:00.190 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6408f090
2025-06-08 21:05:00.191 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6408f090
2025-06-08 21:05:00.191 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6408f090
2025-06-08 21:05:00.192 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4b1aa181
2025-06-08 21:05:00.192 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4b1aa181
2025-06-08 21:05:00.193 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@c491372
2025-06-08 21:05:00.194 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@495b4a29
2025-06-08 21:05:00.195 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@495b4a29
2025-06-08 21:05:00.195 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6a74bfe2
2025-06-08 21:05:00.196 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@747c1d84
2025-06-08 21:05:00.196 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@30ea52fa
2025-06-08 21:05:00.197 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@30ea52fa
2025-06-08 21:05:00.197 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@30ea52fa
2025-06-08 21:05:00.198 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@23734ccc
2025-06-08 21:05:00.199 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@23734ccc
2025-06-08 21:05:00.199 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@23734ccc
2025-06-08 21:05:00.200 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6cb76cef
2025-06-08 21:05:00.201 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6cb76cef
2025-06-08 21:05:00.202 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6cb76cef
2025-06-08 21:05:00.202 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7833ccc0
2025-06-08 21:05:00.203 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7833ccc0
2025-06-08 21:05:00.203 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7833ccc0
2025-06-08 21:05:00.204 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1aac3cbe
2025-06-08 21:05:00.204 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1aac3cbe
2025-06-08 21:05:00.205 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1aac3cbe
2025-06-08 21:05:00.205 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2300160b
2025-06-08 21:05:00.206 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2300160b
2025-06-08 21:05:00.206 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7407d690
2025-06-08 21:05:00.206 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7407d690
2025-06-08 21:05:00.206 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@12b4511c
2025-06-08 21:05:00.206 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@12b4511c
2025-06-08 21:05:00.207 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@12b4511c
2025-06-08 21:05:00.207 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6906d638
2025-06-08 21:05:00.208 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4a95355d
2025-06-08 21:05:00.209 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a95355d
2025-06-08 21:05:00.209 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@ecc9c9
2025-06-08 21:05:00.210 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@30604479
2025-06-08 21:05:00.211 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@30604479
2025-06-08 21:05:00.212 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@30604479
2025-06-08 21:05:00.213 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6f08f35b
2025-06-08 21:05:00.214 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@c541c3a
2025-06-08 21:05:00.214 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6a903ef8
2025-06-08 21:05:00.215 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5861fc5f
2025-06-08 21:05:00.216 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5861fc5f
2025-06-08 21:05:00.216 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@70db5e23
2025-06-08 21:05:00.216 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@70db5e23
2025-06-08 21:05:00.217 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5cc239ce
2025-06-08 21:05:00.218 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@374eab50
2025-06-08 21:05:00.218 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@601a3ae2
2025-06-08 21:05:00.219 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4a1a5a84
2025-06-08 21:05:00.219 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@75b1640
2025-06-08 21:05:00.219 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@458d29d0
2025-06-08 21:05:00.219 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@74f1d6a9
2025-06-08 21:05:00.220 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@74f1d6a9
2025-06-08 21:05:00.220 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6ca76cc9
2025-06-08 21:05:00.220 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6ca76cc9
2025-06-08 21:05:00.221 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@33918e0b
2025-06-08 21:05:00.221 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@33918e0b
2025-06-08 21:05:00.222 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1ffee200
2025-06-08 21:05:00.223 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1ffee200
2025-06-08 21:05:00.223 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@65402bc8
2025-06-08 21:05:00.224 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@65402bc8
2025-06-08 21:05:00.225 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3256c28d
2025-06-08 21:05:00.226 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@d08e31a
2025-06-08 21:05:00.226 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@658eee59
2025-06-08 21:05:00.227 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@658eee59
2025-06-08 21:05:00.227 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1f4974b
2025-06-08 21:05:00.228 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5b27f52
2025-06-08 21:05:00.229 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4fe85ccd
2025-06-08 21:05:00.230 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5d068f4f
2025-06-08 21:05:00.231 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5d068f4f
2025-06-08 21:05:00.232 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@78ed056b
2025-06-08 21:05:00.232 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6e33bdcb
2025-06-08 21:05:00.233 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@63308af4
2025-06-08 21:05:00.234 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@63308af4
2025-06-08 21:05:00.234 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@a250d2a
2025-06-08 21:05:00.234 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@a250d2a
2025-06-08 21:05:00.235 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1a739758
2025-06-08 21:05:00.235 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1a739758
2025-06-08 21:05:00.236 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1a739758
2025-06-08 21:05:00.236 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@695dbc38
2025-06-08 21:05:00.237 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@695dbc38
2025-06-08 21:05:00.237 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@695dbc38
2025-06-08 21:05:00.238 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@eddfccd
2025-06-08 21:05:00.239 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2a7c77f8
2025-06-08 21:05:00.240 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2e44a2f3
2025-06-08 21:05:00.241 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2e44a2f3
2025-06-08 21:05:00.241 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4f1e0862
2025-06-08 21:05:00.242 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4f1e0862
2025-06-08 21:05:00.243 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4f1e0862
2025-06-08 21:05:00.244 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7c7da514
2025-06-08 21:05:00.244 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@35f7ded4
2025-06-08 21:05:00.245 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3eafb1a3
2025-06-08 21:05:00.246 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3eafb1a3
2025-06-08 21:05:00.246 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@14df30c
2025-06-08 21:05:00.246 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@14df30c
2025-06-08 21:05:00.247 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@14df30c
2025-06-08 21:05:00.247 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@1089b334
2025-06-08 21:05:00.247 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1089b334
2025-06-08 21:05:00.247 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1b03ce8f
2025-06-08 21:05:00.247 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1b03ce8f
2025-06-08 21:05:00.248 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@586256e5
2025-06-08 21:05:00.248 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@586256e5
2025-06-08 21:05:00.249 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@36590b76
2025-06-08 21:05:00.249 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@36590b76
2025-06-08 21:05:00.249 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@6b140e9a
2025-06-08 21:05:00.250 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6b140e9a
2025-06-08 21:05:00.250 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@6ee6c2c1
2025-06-08 21:05:00.251 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@24f97486
2025-06-08 21:05:00.251 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@5a05c9d4
2025-06-08 21:05:00.251 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@11ae6cd0
2025-06-08 21:05:00.252 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@498654ee
2025-06-08 21:05:00.257 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2e1e2e92
2025-06-08 21:05:00.258 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2e1e2e92
2025-06-08 21:05:00.260 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@4f9479e7
2025-06-08 21:05:00.261 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3baa6e00
2025-06-08 21:05:00.262 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7d8b7395
2025-06-08 21:05:00.262 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@12764a39
2025-06-08 21:05:00.263 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7ec142d1
2025-06-08 21:05:00.263 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@16f3f967
2025-06-08 21:05:00.263 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@30c227f7
2025-06-08 21:05:00.263 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@10c59454
2025-06-08 21:05:00.263 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@64669b57
2025-06-08 21:05:00.268 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@39d23132] into BootstrapContext; was [null]
2025-06-08 21:05:00.269 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@39d23132) [was null]
2025-06-08 21:05:00.270 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@533ec65d] into BootstrapContext; was [null]
2025-06-08 21:05:00.271 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@58ed212d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@38185c33]
2025-06-08 21:05:00.299 [JavaFX-Launcher] DEBUG o.h.j.b.i.PersistenceUnitInfoDescriptor - Pushing class transformers for PU named 'default' on loading classloader jdk.internal.loader.ClassLoaders$AppClassLoader@33909752
2025-06-08 21:05:00.614 [JavaFX-Launcher] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-08 21:05:00.615 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@39d23132]
2025-06-08 21:05:00.615 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@39d23132]
2025-06-08 21:05:00.675 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-08 21:05:00.804 [JavaFX-Launcher] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@458bd23f
2025-06-08 21:05:00.808 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-08 21:05:00.818 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : SQLite
	version : 3.46.0
	  major : 3
	  minor : 46
2025-06-08 21:05:00.819 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : SQLite JDBC
	version : 3.46.0.0
	  major : 3
	  minor : 46
2025-06-08 21:05:00.819 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2
2025-06-08 21:05:00.865 [JavaFX-Launcher] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.community.dialect.SQLiteDialect, version: 3.46
2025-06-08 21:05:00.871 [JavaFX-Launcher] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-06-08 21:05:00.873 [JavaFX-Launcher] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2025-06-08 21:05:00.896 [JavaFX-Launcher] DEBUG org.hibernate.orm.jdbc.lob - HHH10010005: Disabling contextual LOB creation as createClob() method threw error : java.sql.SQLFeatureNotSupportedException
2025-06-08 21:05:00.905 [JavaFX-Launcher] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 3.46
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-08 21:05:00.921 [JavaFX-Launcher] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(PRIMITIVE_ARRAY_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-06-08 21:05:00.923 [JavaFX-Launcher] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STRING_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-08 21:05:00.930 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-06-08 21:05:00.930 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:05:00.931 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:05:00.938 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:05:00.940 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:05:00.941 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:05:00.942 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:05:00.943 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:05:00.943 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:05:00.946 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:05:00.947 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:05:00.947 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:05:00.951 [JavaFX-Launcher] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3b110f7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@30570be2]
2025-06-08 21:05:01.015 [JavaFX-Launcher] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-06-08 21:05:01.068 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:05:01.081 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Categoria
2025-06-08 21:05:01.094 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Categoria on table categoria
2025-06-08 21:05:01.109 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:05:01.137 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_categoria')
2025-06-08 21:05:01.141 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:05:01.142 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:05:01.149 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCategoria with lazy=false
2025-06-08 21:05:01.153 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:idCategoria]
2025-06-08 21:05:01.164 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCategoria
2025-06-08 21:05:01.169 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.id_categoria
2025-06-08 21:05:01.170 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCategoria
2025-06-08 21:05:01.179 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_categoria)]), idCategoria, identity, , ...)
2025-06-08 21:05:01.181 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:05:01.182 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:05:01.182 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:estado]
2025-06-08 21:05:01.183 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:05:01.183 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.estado
2025-06-08 21:05:01.184 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:05:01.185 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:05:01.186 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:05:01.186 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:nombre]
2025-06-08 21:05:01.186 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:05:01.188 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.nombre
2025-06-08 21:05:01.189 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:05:01.192 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:05:01.200 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:05:01.201 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Cliente
2025-06-08 21:05:01.202 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Cliente on table cliente
2025-06-08 21:05:01.202 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:05:01.206 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_cliente')
2025-06-08 21:05:01.207 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:05:01.208 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:05:01.209 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCliente with lazy=false
2025-06-08 21:05:01.209 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:idCliente]
2025-06-08 21:05:01.210 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCliente
2025-06-08 21:05:01.211 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.id_cliente
2025-06-08 21:05:01.214 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCliente
2025-06-08 21:05:01.215 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_cliente)]), idCliente, identity, , ...)
2025-06-08 21:05:01.216 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='apellido')
2025-06-08 21:05:01.216 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property apellido with lazy=false
2025-06-08 21:05:01.217 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:apellido]
2025-06-08 21:05:01.217 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for apellido
2025-06-08 21:05:01.218 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.apellido
2025-06-08 21:05:01.218 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property apellido
2025-06-08 21:05:01.219 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cant_visitas')
2025-06-08 21:05:01.220 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantVisitas with lazy=false
2025-06-08 21:05:01.221 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:cantVisitas]
2025-06-08 21:05:01.222 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantVisitas
2025-06-08 21:05:01.222 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.cant_visitas
2025-06-08 21:05:01.222 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantVisitas
2025-06-08 21:05:01.225 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='dni')
2025-06-08 21:05:01.227 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property dni with lazy=false
2025-06-08 21:05:01.228 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:dni]
2025-06-08 21:05:01.229 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for dni
2025-06-08 21:05:01.230 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.dni
2025-06-08 21:05:01.231 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property dni
2025-06-08 21:05:01.231 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
2025-06-08 21:05:01.232 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-06-08 21:05:01.233 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:email]
2025-06-08 21:05:01.233 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email
2025-06-08 21:05:01.234 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.email
2025-06-08 21:05:01.235 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property email
2025-06-08 21:05:01.236 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:05:01.237 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:05:01.238 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:estado]
2025-06-08 21:05:01.239 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:05:01.240 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.estado
2025-06-08 21:05:01.241 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:05:01.242 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:05:01.243 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:05:01.243 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:nombre]
2025-06-08 21:05:01.244 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:05:01.245 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.nombre
2025-06-08 21:05:01.246 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:05:01.247 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='telefono')
2025-06-08 21:05:01.247 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property telefono with lazy=false
2025-06-08 21:05:01.248 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:telefono]
2025-06-08 21:05:01.248 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for telefono
2025-06-08 21:05:01.249 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.telefono
2025-06-08 21:05:01.249 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property telefono
2025-06-08 21:05:01.250 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:05:01.251 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:05:01.252 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name DetPedido
2025-06-08 21:05:01.253 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.DetPedido on table detalle_pedido
2025-06-08 21:05:01.254 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:05:01.265 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_detalle_pedido')
2025-06-08 21:05:01.266 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:05:01.267 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:05:01.268 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idDetallePedido with lazy=false
2025-06-08 21:05:01.268 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:idDetallePedido]
2025-06-08 21:05:01.269 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idDetallePedido
2025-06-08 21:05:01.269 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.id_detalle_pedido
2025-06-08 21:05:01.270 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idDetallePedido
2025-06-08 21:05:01.271 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_detalle_pedido)]), idDetallePedido, identity, , ...)
2025-06-08 21:05:01.273 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cantidad')
2025-06-08 21:05:01.275 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantidad with lazy=false
2025-06-08 21:05:01.275 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:cantidad]
2025-06-08 21:05:01.276 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantidad
2025-06-08 21:05:01.276 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.cantidad
2025-06-08 21:05:01.278 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantidad
2025-06-08 21:05:01.280 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:05:01.281 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:05:01.281 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:estado]
2025-06-08 21:05:01.283 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:05:01.283 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.estado
2025-06-08 21:05:01.284 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:05:01.290 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_factura',referencedColumn='id_factura')
2025-06-08 21:05:01.295 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:05:01.304 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property factura
2025-06-08 21:05:01.305 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='igv')
2025-06-08 21:05:01.306 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property igv with lazy=false
2025-06-08 21:05:01.307 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:igv]
2025-06-08 21:05:01.308 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for igv
2025-06-08 21:05:01.309 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.igv
2025-06-08 21:05:01.310 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property igv
2025-06-08 21:05:01.313 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:05:01.314 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:05:01.315 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:05:01.316 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio_unitario')
2025-06-08 21:05:01.317 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precioUnitario with lazy=false
2025-06-08 21:05:01.317 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:precioUnitario]
2025-06-08 21:05:01.318 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precioUnitario
2025-06-08 21:05:01.318 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.precio_unitario
2025-06-08 21:05:01.319 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property precioUnitario
2025-06-08 21:05:01.320 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_producto',referencedColumn='id_producto')
2025-06-08 21:05:01.321 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:05:01.322 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property producto
2025-06-08 21:05:01.324 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='subtotal')
2025-06-08 21:05:01.325 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property subtotal with lazy=false
2025-06-08 21:05:01.327 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:subtotal]
2025-06-08 21:05:01.329 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for subtotal
2025-06-08 21:05:01.331 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.subtotal
2025-06-08 21:05:01.331 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property subtotal
2025-06-08 21:05:01.333 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:05:01.334 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:05:01.334 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:total]
2025-06-08 21:05:01.335 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:05:01.336 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.total
2025-06-08 21:05:01.337 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:05:01.338 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:05:01.340 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:05:01.341 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Empleado
2025-06-08 21:05:01.343 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Empleado on table empleado
2025-06-08 21:05:01.345 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:05:01.350 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_empleado')
2025-06-08 21:05:01.353 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:05:01.354 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:05:01.357 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idEmpleado with lazy=false
2025-06-08 21:05:01.358 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:idEmpleado]
2025-06-08 21:05:01.360 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idEmpleado
2025-06-08 21:05:01.363 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.id_empleado
2025-06-08 21:05:01.363 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idEmpleado
2025-06-08 21:05:01.364 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_empleado)]), idEmpleado, identity, , ...)
2025-06-08 21:05:01.365 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:05:01.366 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:05:01.366 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:estado]
2025-06-08 21:05:01.367 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:05:01.368 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.estado
2025-06-08 21:05:01.369 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:05:01.370 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:05:01.371 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:05:01.371 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:nombre]
2025-06-08 21:05:01.372 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:05:01.372 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.nombre
2025-06-08 21:05:01.374 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:05:01.375 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password')
2025-06-08 21:05:01.376 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-06-08 21:05:01.376 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:password]
2025-06-08 21:05:01.379 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password
2025-06-08 21:05:01.380 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.password
2025-06-08 21:05:01.381 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property password
2025-06-08 21:05:01.382 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='rol')
2025-06-08 21:05:01.382 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property rol with lazy=false
2025-06-08 21:05:01.383 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:rol]
2025-06-08 21:05:01.383 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for rol
2025-06-08 21:05:01.384 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.rol
2025-06-08 21:05:01.385 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property rol
2025-06-08 21:05:01.386 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='usuario')
2025-06-08 21:05:01.387 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property usuario with lazy=false
2025-06-08 21:05:01.388 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:usuario]
2025-06-08 21:05:01.389 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for usuario
2025-06-08 21:05:01.390 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.usuario
2025-06-08 21:05:01.391 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property usuario
2025-06-08 21:05:01.392 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:05:01.395 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:05:01.396 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Factura
2025-06-08 21:05:01.397 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Factura on table factura
2025-06-08 21:05:01.397 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:05:01.403 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_factura')
2025-06-08 21:05:01.403 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:05:01.404 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:05:01.405 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idFactura with lazy=false
2025-06-08 21:05:01.406 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:idFactura]
2025-06-08 21:05:01.407 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idFactura
2025-06-08 21:05:01.408 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.id_factura
2025-06-08 21:05:01.408 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idFactura
2025-06-08 21:05:01.410 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_factura)]), idFactura, identity, , ...)
2025-06-08 21:05:01.412 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_cliente',referencedColumn='id_cliente')
2025-06-08 21:05:01.413 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:05:01.414 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cliente
2025-06-08 21:05:01.416 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='codigo')
2025-06-08 21:05:01.417 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codigo with lazy=false
2025-06-08 21:05:01.417 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:codigo]
2025-06-08 21:05:01.418 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codigo
2025-06-08 21:05:01.418 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.codigo
2025-06-08 21:05:01.419 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property codigo
2025-06-08 21:05:01.420 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:05:01.421 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:05:01.422 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:estado]
2025-06-08 21:05:01.424 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:05:01.425 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.estado
2025-06-08 21:05:01.426 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:05:01.428 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fecha_emision')
2025-06-08 21:05:01.429 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaEmision with lazy=false
2025-06-08 21:05:01.430 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:fechaEmision]
2025-06-08 21:05:01.431 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaEmision
2025-06-08 21:05:01.431 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.fecha_emision
2025-06-08 21:05:01.432 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaEmision
2025-06-08 21:05:01.433 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='igv')
2025-06-08 21:05:01.434 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property igv with lazy=false
2025-06-08 21:05:01.435 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:igv]
2025-06-08 21:05:01.436 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for igv
2025-06-08 21:05:01.437 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.igv
2025-06-08 21:05:01.438 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property igv
2025-06-08 21:05:01.441 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:05:01.442 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:05:01.444 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:05:01.446 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='subtotal')
2025-06-08 21:05:01.446 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property subtotal with lazy=false
2025-06-08 21:05:01.447 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:subtotal]
2025-06-08 21:05:01.448 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for subtotal
2025-06-08 21:05:01.448 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.subtotal
2025-06-08 21:05:01.448 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property subtotal
2025-06-08 21:05:01.449 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:05:01.450 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:05:01.450 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:total]
2025-06-08 21:05:01.451 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:05:01.451 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.total
2025-06-08 21:05:01.452 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:05:01.453 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:05:01.455 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:05:01.456 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Menu
2025-06-08 21:05:01.457 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Menu on table menu
2025-06-08 21:05:01.459 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:05:01.462 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_menu')
2025-06-08 21:05:01.463 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:05:01.463 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:05:01.464 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idMenu with lazy=false
2025-06-08 21:05:01.465 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Menu:idMenu]
2025-06-08 21:05:01.465 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idMenu
2025-06-08 21:05:01.466 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: menu.id_menu
2025-06-08 21:05:01.466 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idMenu
2025-06-08 21:05:01.467 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_menu)]), idMenu, identity, , ...)
2025-06-08 21:05:01.468 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cod_pedido')
2025-06-08 21:05:01.468 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codPedido with lazy=false
2025-06-08 21:05:01.469 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Menu:codPedido]
2025-06-08 21:05:01.469 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codPedido
2025-06-08 21:05:01.470 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: menu.cod_pedido
2025-06-08 21:05:01.471 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property codPedido
2025-06-08 21:05:01.472 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:05:01.473 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:05:01.474 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:05:01.476 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_producto',referencedColumn='id_producto')
2025-06-08 21:05:01.477 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:05:01.478 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property producto
2025-06-08 21:05:01.479 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:05:01.481 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:05:01.481 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Mesa
2025-06-08 21:05:01.482 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Mesa on table mesa
2025-06-08 21:05:01.483 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:05:01.486 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_mesa')
2025-06-08 21:05:01.487 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:05:01.488 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:05:01.488 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idMesa with lazy=false
2025-06-08 21:05:01.489 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:idMesa]
2025-06-08 21:05:01.490 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idMesa
2025-06-08 21:05:01.491 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.id_mesa
2025-06-08 21:05:01.491 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idMesa
2025-06-08 21:05:01.492 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_mesa)]), idMesa, identity, , ...)
2025-06-08 21:05:01.494 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='capacidad')
2025-06-08 21:05:01.495 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property capacidad with lazy=false
2025-06-08 21:05:01.496 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:capacidad]
2025-06-08 21:05:01.496 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for capacidad
2025-06-08 21:05:01.497 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.capacidad
2025-06-08 21:05:01.497 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property capacidad
2025-06-08 21:05:01.498 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='detalle')
2025-06-08 21:05:01.499 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property detalle with lazy=false
2025-06-08 21:05:01.499 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:detalle]
2025-06-08 21:05:01.500 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for detalle
2025-06-08 21:05:01.502 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.detalle
2025-06-08 21:05:01.502 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property detalle
2025-06-08 21:05:01.503 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:05:01.504 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:05:01.504 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:estado]
2025-06-08 21:05:01.505 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:05:01.506 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.estado
2025-06-08 21:05:01.507 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:05:01.509 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='numero')
2025-06-08 21:05:01.510 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property numero with lazy=false
2025-06-08 21:05:01.511 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:numero]
2025-06-08 21:05:01.512 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for numero
2025-06-08 21:05:01.513 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.numero
2025-06-08 21:05:01.514 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property numero
2025-06-08 21:05:01.515 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:05:01.517 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:05:01.519 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Pedido
2025-06-08 21:05:01.522 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Pedido on table pedido
2025-06-08 21:05:01.523 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:05:01.528 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_pedido')
2025-06-08 21:05:01.529 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:05:01.530 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:05:01.531 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idPedido with lazy=false
2025-06-08 21:05:01.531 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:idPedido]
2025-06-08 21:05:01.532 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idPedido
2025-06-08 21:05:01.532 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.id_pedido
2025-06-08 21:05:01.533 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idPedido
2025-06-08 21:05:01.533 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_pedido)]), idPedido, identity, , ...)
2025-06-08 21:05:01.535 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cant_pedidos')
2025-06-08 21:05:01.536 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantPedidos with lazy=false
2025-06-08 21:05:01.536 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:cantPedidos]
2025-06-08 21:05:01.537 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantPedidos
2025-06-08 21:05:01.537 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.cant_pedidos
2025-06-08 21:05:01.538 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantPedidos
2025-06-08 21:05:01.539 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_cliente',referencedColumn='id_cliente')
2025-06-08 21:05:01.540 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:05:01.546 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cliente
2025-06-08 21:05:01.548 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_empleado',referencedColumn='id_empleado')
2025-06-08 21:05:01.548 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:05:01.549 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property empleado
2025-06-08 21:05:01.551 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:05:01.551 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:05:01.552 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:estado]
2025-06-08 21:05:01.553 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:05:01.553 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.estado
2025-06-08 21:05:01.554 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:05:01.555 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fecha_hora')
2025-06-08 21:05:01.556 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaHora with lazy=false
2025-06-08 21:05:01.557 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:fechaHora]
2025-06-08 21:05:01.558 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaHora
2025-06-08 21:05:01.560 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.fecha_hora
2025-06-08 21:05:01.560 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaHora
2025-06-08 21:05:01.562 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_mesa',referencedColumn='id_mesa')
2025-06-08 21:05:01.563 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:05:01.563 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property mesa
2025-06-08 21:05:01.564 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:05:01.565 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:05:01.565 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:total]
2025-06-08 21:05:01.565 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:05:01.566 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.total
2025-06-08 21:05:01.566 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:05:01.567 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:05:01.568 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:05:01.569 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Producto
2025-06-08 21:05:01.569 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Producto on table producto
2025-06-08 21:05:01.570 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:05:01.573 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_producto')
2025-06-08 21:05:01.574 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:05:01.574 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:05:01.575 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idProducto with lazy=false
2025-06-08 21:05:01.575 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:idProducto]
2025-06-08 21:05:01.576 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idProducto
2025-06-08 21:05:01.576 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.id_producto
2025-06-08 21:05:01.578 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idProducto
2025-06-08 21:05:01.578 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_producto)]), idProducto, identity, , ...)
2025-06-08 21:05:01.578 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_categoria',referencedColumn='id_categoria')
2025-06-08 21:05:01.579 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:05:01.579 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property categoria
2025-06-08 21:05:01.579 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='descripcion')
2025-06-08 21:05:01.580 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property descripcion with lazy=false
2025-06-08 21:05:01.580 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:descripcion]
2025-06-08 21:05:01.581 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for descripcion
2025-06-08 21:05:01.581 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.descripcion
2025-06-08 21:05:01.581 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property descripcion
2025-06-08 21:05:01.582 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:05:01.582 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:05:01.583 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:estado]
2025-06-08 21:05:01.583 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:05:01.583 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.estado
2025-06-08 21:05:01.584 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:05:01.584 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:05:01.585 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:05:01.586 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:nombre]
2025-06-08 21:05:01.586 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:05:01.586 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.nombre
2025-06-08 21:05:01.587 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:05:01.587 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio')
2025-06-08 21:05:01.588 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precio with lazy=false
2025-06-08 21:05:01.588 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:precio]
2025-06-08 21:05:01.588 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precio
2025-06-08 21:05:01.588 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.precio
2025-06-08 21:05:01.589 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property precio
2025-06-08 21:05:01.589 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_seccion',referencedColumn='id_seccion')
2025-06-08 21:05:01.590 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:05:01.591 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property seccion
2025-06-08 21:05:01.592 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='stock')
2025-06-08 21:05:01.593 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property stock with lazy=false
2025-06-08 21:05:01.593 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:stock]
2025-06-08 21:05:01.593 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for stock
2025-06-08 21:05:01.594 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.stock
2025-06-08 21:05:01.594 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property stock
2025-06-08 21:05:01.595 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:05:01.596 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:05:01.597 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Seccion
2025-06-08 21:05:01.598 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Seccion on table seccion
2025-06-08 21:05:01.598 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:05:01.601 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_seccion')
2025-06-08 21:05:01.601 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:05:01.602 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:05:01.603 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idSeccion with lazy=false
2025-06-08 21:05:01.603 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:idSeccion]
2025-06-08 21:05:01.604 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idSeccion
2025-06-08 21:05:01.605 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.id_seccion
2025-06-08 21:05:01.605 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idSeccion
2025-06-08 21:05:01.606 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_seccion)]), idSeccion, identity, , ...)
2025-06-08 21:05:01.606 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='detalle')
2025-06-08 21:05:01.607 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property detalle with lazy=false
2025-06-08 21:05:01.608 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:detalle]
2025-06-08 21:05:01.608 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for detalle
2025-06-08 21:05:01.609 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.detalle
2025-06-08 21:05:01.610 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property detalle
2025-06-08 21:05:01.610 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:05:01.611 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:05:01.611 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:estado]
2025-06-08 21:05:01.612 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:05:01.613 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.estado
2025-06-08 21:05:01.613 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:05:01.614 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:05:01.616 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idCategoria
2025-06-08 21:05:01.617 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:05:01.618 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:05:01.618 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idCliente
2025-06-08 21:05:01.618 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apellido
2025-06-08 21:05:01.619 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantVisitas
2025-06-08 21:05:01.619 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for dni
2025-06-08 21:05:01.619 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-06-08 21:05:01.619 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:05:01.620 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:05:01.620 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for telefono
2025-06-08 21:05:01.620 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idDetallePedido
2025-06-08 21:05:01.620 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantidad
2025-06-08 21:05:01.621 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:05:01.621 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for igv
2025-06-08 21:05:01.621 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precioUnitario
2025-06-08 21:05:01.621 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for subtotal
2025-06-08 21:05:01.621 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:05:01.622 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idEmpleado
2025-06-08 21:05:01.622 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:05:01.623 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:05:01.623 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-06-08 21:05:01.623 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for rol
2025-06-08 21:05:01.624 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for usuario
2025-06-08 21:05:01.624 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idFactura
2025-06-08 21:05:01.625 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codigo
2025-06-08 21:05:01.625 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:05:01.626 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaEmision
2025-06-08 21:05:01.626 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for igv
2025-06-08 21:05:01.627 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for subtotal
2025-06-08 21:05:01.627 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:05:01.627 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idMenu
2025-06-08 21:05:01.627 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codPedido
2025-06-08 21:05:01.628 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idMesa
2025-06-08 21:05:01.628 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for capacidad
2025-06-08 21:05:01.628 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for detalle
2025-06-08 21:05:01.628 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:05:01.629 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for numero
2025-06-08 21:05:01.629 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idPedido
2025-06-08 21:05:01.629 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantPedidos
2025-06-08 21:05:01.630 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:05:01.630 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaHora
2025-06-08 21:05:01.630 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:05:01.630 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idProducto
2025-06-08 21:05:01.631 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for descripcion
2025-06-08 21:05:01.631 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:05:01.631 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:05:01.631 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precio
2025-06-08 21:05:01.631 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for stock
2025-06-08 21:05:01.631 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idSeccion
2025-06-08 21:05:01.632 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for detalle
2025-06-08 21:05:01.632 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:05:01.640 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_categoria] to be non-null as it is part of the primary key for table [categoria]
2025-06-08 21:05:01.640 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_cliente] to be non-null as it is part of the primary key for table [cliente]
2025-06-08 21:05:01.641 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_detalle_pedido] to be non-null as it is part of the primary key for table [detalle_pedido]
2025-06-08 21:05:01.641 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_empleado] to be non-null as it is part of the primary key for table [empleado]
2025-06-08 21:05:01.642 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_factura] to be non-null as it is part of the primary key for table [factura]
2025-06-08 21:05:01.642 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_menu] to be non-null as it is part of the primary key for table [menu]
2025-06-08 21:05:01.642 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_mesa] to be non-null as it is part of the primary key for table [mesa]
2025-06-08 21:05:01.643 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_pedido] to be non-null as it is part of the primary key for table [pedido]
2025-06-08 21:05:01.643 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_producto] to be non-null as it is part of the primary key for table [producto]
2025-06-08 21:05:01.644 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_seccion] to be non-null as it is part of the primary key for table [seccion]
2025-06-08 21:05:01.935 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2025-06-08 21:05:01.997 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:05:01.998 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=23, javafx.runtime.version=21.0.1+6, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@3aeec68e, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.community.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant\target\classes;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter\3.5.0\spring-boot-starter-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot\3.5.0\spring-boot-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-context\6.2.7\spring-context-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-expression\6.2.7\spring-expression-6.2.7.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-observation\1.15.0\micrometer-observation-1.15.0.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-commons\1.15.0\micrometer-commons-1.15.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.5.0\spring-boot-autoconfigure-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.5.0\spring-boot-starter-logging-3.5.0.jar;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\USUARIO\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-core\6.2.7\spring-core-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jcl\6.2.7\spring-jcl-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\yaml\snakeyaml\2.4\snakeyaml-2.4.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.5.0\spring-boot-starter-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.5.0\spring-boot-starter-jdbc-3.5.0.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jdbc\6.2.7\spring-jdbc-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-core\6.6.15.Final\hibernate-core-6.6.15.Final.jar;C:\Users\USUARIO\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\USUARIO\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\USUARIO\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\USUARIO\.m2\repository\net\bytebuddy\byte-buddy\1.17.5\byte-buddy-1.17.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\USUARIO\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\USUARIO\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-jpa\3.5.0\spring-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-commons\3.5.0\spring-data-commons-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-orm\6.2.7\spring-orm-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aop\6.2.7\spring-aop-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-tx\6.2.7\spring-tx-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-beans\6.2.7\spring-beans-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aspects\6.2.7\spring-aspects-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\USUARIO\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\USUARIO\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-community-dialects\6.4.4.Final\hibernate-community-dialects-6.4.4.Final.jar;C:\Users\USUARIO\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\USUARIO\.m2\repository\org\xerial\sqlite-jdbc\3.46.0.0\sqlite-jdbc-3.46.0.0.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\USUARIO\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.0\jackson-annotations-2.17.0.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.2.Final\hibernate-validator-7.0.2.Final.jar;C:\Users\USUARIO\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-fxml\21.0.1\javafx-fxml-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-fxml\21.0.1\javafx-fxml-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-swing\21.0.1\javafx-swing-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-swing\21.0.1\javafx-swing-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\bootstrapfx\bootstrapfx-core\0.2.4\bootstrapfx-core-0.2.4.jar;C:\Users\USUARIO\.m2\repository\io\github\mkpaz\atlantafx-base\2.0.0\atlantafx-base-2.0.0.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-javafx\12.3.1\ikonli-javafx-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-core\12.3.1\ikonli-core-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-fontawesome5-pack\12.3.1\ikonli-fontawesome5-pack-12.3.1.jar;C:\Users\USUARIO\.m2\repository\net\sf\jasperreports\jasperreports\6.20.0\jasperreports-6.20.0.jar;C:\Users\USUARIO\.m2\repository\commons-beanutils\commons-beanutils\1.9.4\commons-beanutils-1.9.4.jar;C:\Users\USUARIO\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\USUARIO\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\USUARIO\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-collections4\4.2\commons-collections4-4.2.jar;C:\Users\USUARIO\.m2\repository\com\lowagie\itext\2.1.7.js10\itext-2.1.7.js10.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcprov-jdk15on\1.70\bcprov-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcutil-jdk15on\1.70\bcutil-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jcommon\1.0.23\jcommon-1.0.23.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jfreechart\1.0.19\jfreechart-1.0.19.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\jdt\ecj\3.21.0\ecj-3.21.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.19.0\jackson-core-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.19.0\jackson-databind-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-xml\2.19.0\jackson-dataformat-xml-2.19.0.jar;C:\Users\USUARIO\.m2\repository\org\codehaus\woodstox\stax2-api\4.2.2\stax2-api-4.2.2.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\woodstox\woodstox-core\7.1.0\woodstox-core-7.1.0.jar;C:\Users\USUARIO\.m2\repository\win\zqxu\jrviewer-fx\0.1.1\jrviewer-fx-0.1.1.jar;C:\Users\USUARIO\.m2\repository\jakarta\el\jakarta.el-api\4.0.0\jakarta.el-api-4.0.0.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jakarta.el\4.0.2\jakarta.el-4.0.2.jar;C:\Users\USUARIO\.m2\repository\com\miglayout\miglayout\3.7.4\miglayout-3.7.4.jar;C:\Users\USUARIO\.m2\repository\org\apache\groovy\groovy\4.0.6\groovy-4.0.6.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml\5.2.3\poi-ooxml-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi\5.2.3\poi-5.2.3.jar;C:\Users\USUARIO\.m2\repository\commons-codec\commons-codec\1.18.0\commons-codec-1.18.0.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-math3\3.6.1\commons-math3-3.6.1.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\SparseBitSet\1.2\SparseBitSet-1.2.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml-lite\5.2.3\poi-ooxml-lite-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\xmlbeans\xmlbeans\5.1.1\xmlbeans-5.1.1.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-compress\1.21\commons-compress-1.21.jar;C:\Users\USUARIO\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\USUARIO\.m2\repository\com\github\virtuald\curvesapi\1.07\curvesapi-1.07.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar, LOGBACK_ROLLINGPOLICY_MAX_FILE_SIZE=10485760, java.vm.vendor=Oracle Corporation, LOG_PATH=logs/, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Bogota, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, javafx.version=21.0.1, os.name=Windows 11, java.vm.specification.version=23, APPLICATION_NAME=ProyectoRestaurant, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=MX, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk-23\bin, sun.java.command=pe.edu.upeu.proyecto_restaurant.AppRestaurant, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.use_sql_comments=true, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@619cac2d, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\USUARIO, user.language=es, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-23, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7-58, user.name=USUARIO, stdout.encoding=cp850, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, FILE_LOG_PATTERN=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, LOG_FILE=logs/restaurant.log, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\USUARIO\AppData\Local\Temp\, java.version=23.0.2, LOGBACK_ROLLINGPOLICY_CLEAN_HISTORY_ON_START=false, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=1120, sun.os.patch.level=, CONSOLE_LOG_CHARSET=IBM850, LOGBACK_ROLLINGPOLICY_MAX_HISTORY=30, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@77bb0f3, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-23\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;c:\Users\USUARIO\AppData\Local\Programs\cursor\resources\app\bin;C:\Users\USUARIO\AppData\Local\Programs\Python\Python313\Scripts\;C:\Users\USUARIO\AppData\Local\Programs\Python\Launcher\;C:\Users\USUARIO\AppData\Local\Microsoft\WindowsApps;C:\Users\USUARIO\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\USUARIO\AppData\Roaming\npm;C:\flutter\bin;C:\Users\USUARIO\AppData\Local\Programs\Python\Python313\;C:\ffpmg\bin;C:\Users\USUARIO\Downloads\apache-maven-3.9.9\bin;C:\Users\USUARIO\AppData\Local\GitHubDesktop\bin;C:\Users\USUARIO\AppData\Local\Microsoft\WinGet\Packages\Schniz.fnm_Microsoft.Winget.Source_8wekyb3d8bbwe;C:\Users\USUARIO\AppData\Local\Programs\cursor\resources\app\bin;., stderr.encoding=cp850, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=23.0.2+7-58, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), CONSOLE_LOG_PATTERN=%d{HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{36}) - %msg%n, java.class.version=67.0, LOGGED_APPLICATION_NAME=[ProyectoRestaurant] , LOGBACK_ROLLINGPOLICY_TOTAL_SIZE_CAP=104857600}
2025-06-08 21:05:02.003 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-06-08 21:05:02.012 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:05:02.013 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:05:02.013 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:05:02.014 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:05:02.014 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:05:02.015 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:05:02.015 [JavaFX-Launcher] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:05:02.018 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:05:02.019 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:05:02.019 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:05:02.020 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:05:02.020 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:05:02.020 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:05:02.023 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:05:02.023 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:05:02.082 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:05:02.083 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:05:02.087 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:05:02.087 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:05:02.093 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:05:02.093 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:05:02.098 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:05:02.098 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:05:02.101 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:05:02.101 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:05:02.105 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:05:02.106 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:05:02.110 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:05:02.110 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:05:02.113 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:05:02.113 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:05:02.115 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:05:02.116 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:05:02.119 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:05:02.171 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-06-08 21:05:02.172 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-06-08 21:05:02.174 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-06-08 21:05:02.176 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-06-08 21:05:02.178 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@74b71e6f] under count; prior registration was null
2025-06-08 21:05:02.181 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5e6afe58] under every; prior registration was null
2025-06-08 21:05:02.181 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7eca9dc7] under any; prior registration was null
2025-06-08 21:05:02.182 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-06-08 21:05:02.183 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-06-08 21:05:02.183 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-06-08 21:05:02.183 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-06-08 21:05:02.183 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-06-08 21:05:02.184 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-06-08 21:05:02.184 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-06-08 21:05:02.184 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-06-08 21:05:02.184 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-06-08 21:05:02.185 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-06-08 21:05:02.185 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-06-08 21:05:02.185 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-06-08 21:05:02.186 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-06-08 21:05:02.186 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-06-08 21:05:02.186 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-06-08 21:05:02.187 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-06-08 21:05:02.187 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-06-08 21:05:02.190 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@175f9e85] under sinh; prior registration was null
2025-06-08 21:05:02.190 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b376684] under cosh; prior registration was null
2025-06-08 21:05:02.191 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9e84199] under tanh; prior registration was null
2025-06-08 21:05:02.191 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4675c7be] under pi; prior registration was null
2025-06-08 21:05:02.192 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2db5d243] under log; prior registration was null
2025-06-08 21:05:02.193 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-06-08 21:05:02.193 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-06-08 21:05:02.194 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-06-08 21:05:02.194 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-06-08 21:05:02.195 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-06-08 21:05:02.196 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-06-08 21:05:02.196 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-06-08 21:05:02.196 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-06-08 21:05:02.197 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-06-08 21:05:02.197 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-06-08 21:05:02.198 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-06-08 21:05:02.198 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-06-08 21:05:02.199 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@15a29956] under position; prior registration was null
2025-06-08 21:05:02.201 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@12137346] under overlay; prior registration was null
2025-06-08 21:05:02.202 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@650e7803] under trim; prior registration was null
2025-06-08 21:05:02.204 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@51cd5612] under cast; prior registration was null
2025-06-08 21:05:02.204 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58bddba] under collate; prior registration was null
2025-06-08 21:05:02.206 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3651fb3b] under extract; prior registration was null
2025-06-08 21:05:02.206 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-06-08 21:05:02.207 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-06-08 21:05:02.208 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@bdb0a8d] under ifnull; prior registration was null
2025-06-08 21:05:02.208 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-06-08 21:05:02.209 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-06-08 21:05:02.210 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@5b1c3152] under pad; prior registration was null
2025-06-08 21:05:02.211 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@763927d] under str; prior registration was null
2025-06-08 21:05:02.215 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@367e5450] under format; prior registration was null
2025-06-08 21:05:02.216 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@486ee79e] under timestampadd; prior registration was null
2025-06-08 21:05:02.218 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@538848f3] under timestampdiff; prior registration was null
2025-06-08 21:05:02.219 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-06-08 21:05:02.219 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-06-08 21:05:02.220 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5810ad32] under current_date; prior registration was null
2025-06-08 21:05:02.221 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@751ef27b] under current_time; prior registration was null
2025-06-08 21:05:02.221 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7f392f84] under current_timestamp; prior registration was null
2025-06-08 21:05:02.221 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-06-08 21:05:02.221 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-06-08 21:05:02.222 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-06-08 21:05:02.223 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4312dcb0] under local_date; prior registration was null
2025-06-08 21:05:02.223 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1eb680dd] under local_time; prior registration was null
2025-06-08 21:05:02.224 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1c39245a] under local_datetime; prior registration was null
2025-06-08 21:05:02.224 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2a4a6d56] under offset_datetime; prior registration was null
2025-06-08 21:05:02.224 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-06-08 21:05:02.224 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-06-08 21:05:02.225 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-06-08 21:05:02.225 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-06-08 21:05:02.225 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7fe8c3f3] under instant; prior registration was null
2025-06-08 21:05:02.225 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-06-08 21:05:02.226 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@40abbfa3] under sql; prior registration was null
2025-06-08 21:05:02.227 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b92cc1] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-06-08 21:05:02.227 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@626fa464] under left; prior registration was NamedSqmFunctionTemplate(left)
2025-06-08 21:05:02.228 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@33ba182a] under right; prior registration was NamedSqmFunctionTemplate(right)
2025-06-08 21:05:02.229 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ef1ff59] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-06-08 21:05:02.229 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(length)] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-06-08 21:05:02.230 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-06-08 21:05:02.230 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under least; prior registration was NamedSqmFunctionTemplate(least)
2025-06-08 21:05:02.230 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under greatest; prior registration was NamedSqmFunctionTemplate(greatest)
2025-06-08 21:05:02.230 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-06-08 21:05:02.231 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-06-08 21:05:02.232 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@4612cfce] under trunc; prior registration was null
2025-06-08 21:05:02.233 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-06-08 21:05:02.233 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2db5d243
2025-06-08 21:05:02.234 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-06-08 21:05:02.234 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-06-08 21:05:02.234 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-06-08 21:05:02.234 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-06-08 21:05:02.235 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2025-06-08 21:05:02.235 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : chr -> char
2025-06-08 21:05:02.236 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@47adebbf] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-06-08 21:05:02.236 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@25392b70] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2025-06-08 21:05:02.237 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1fe4ee31] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2025-06-08 21:05:02.237 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(strftime)] under format; prior registration was org.hibernate.dialect.function.FormatFunction@367e5450
2025-06-08 21:05:02.237 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-06-08 21:05:02.238 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-06-08 21:05:02.239 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-06-08 21:05:02.240 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-06-08 21:05:02.240 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-06-08 21:05:02.240 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-06-08 21:05:02.241 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@2f909001] under listagg; prior registration was null
2025-06-08 21:05:02.244 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg)
2025-06-08 21:05:02.245 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-06-08 21:05:02.246 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2025-06-08 21:05:02.246 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-06-08 21:05:02.247 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-06-08 21:05:02.247 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-06-08 21:05:02.248 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg)
2025-06-08 21:05:02.248 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type)
2025-06-08 21:05:02.248 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-06-08 21:05:02.248 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg)
2025-06-08 21:05:02.249 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-06-08 21:05:02.249 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-06-08 21:05:02.249 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-06-08 21:05:02.250 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-06-08 21:05:02.250 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2025-06-08 21:05:02.250 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-06-08 21:05:02.250 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-06-08 21:05:02.250 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-06-08 21:05:02.251 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date
2025-06-08 21:05:02.251 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time
2025-06-08 21:05:02.251 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp
2025-06-08 21:05:02.252 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date
2025-06-08 21:05:02.252 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant
2025-06-08 21:05:02.252 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time
2025-06-08 21:05:02.253 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp
2025-06-08 21:05:02.253 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-06-08 21:05:02.253 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-06-08 21:05:02.254 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-06-08 21:05:02.254 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2025-06-08 21:05:02.254 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-06-08 21:05:02.254 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-06-08 21:05:02.255 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value
2025-06-08 21:05:02.255 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg)
2025-06-08 21:05:02.255 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-06-08 21:05:02.256 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-06-08 21:05:02.256 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-06-08 21:05:02.256 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant
2025-06-08 21:05:02.257 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-06-08 21:05:02.257 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value
2025-06-08 21:05:02.257 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-06-08 21:05:02.258 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-06-08 21:05:02.258 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-06-08 21:05:02.258 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-06-08 21:05:02.259 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-06-08 21:05:02.259 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-06-08 21:05:02.259 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date
2025-06-08 21:05:02.260 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime
2025-06-08 21:05:02.260 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time
2025-06-08 21:05:02.260 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date
2025-06-08 21:05:02.260 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime
2025-06-08 21:05:02.261 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time
2025-06-08 21:05:02.261 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(pattern, string[, start])
2025-06-08 21:05:02.262 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-06-08 21:05:02.262 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string)
2025-06-08 21:05:02.263 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding])
2025-06-08 21:05:02.264 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-06-08 21:05:02.264 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg)
2025-06-08 21:05:02.265 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg)
2025-06-08 21:05:02.265 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-06-08 21:05:02.265 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-06-08 21:05:02.266 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1)
2025-06-08 21:05:02.268 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-06-08 21:05:02.269 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-06-08 21:05:02.269 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2025-06-08 21:05:02.269 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-06-08 21:05:02.270 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi
2025-06-08 21:05:02.270 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-06-08 21:05:02.270 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-06-08 21:05:02.270 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-06-08 21:05:02.270 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-06-08 21:05:02.271 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-06-08 21:05:02.271 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-06-08 21:05:02.271 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number()
2025-06-08 21:05:02.271 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding])
2025-06-08 21:05:02.272 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-06-08 21:05:02.272 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-06-08 21:05:02.272 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-06-08 21:05:02.272 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-06-08 21:05:02.273 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql
2025-06-08 21:05:02.273 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-06-08 21:05:02.273 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg)
2025-06-08 21:05:02.273 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-06-08 21:05:02.273 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-06-08 21:05:02.274 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg)
2025-06-08 21:05:02.274 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-06-08 21:05:02.274 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-06-08 21:05:02.275 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-06-08 21:05:02.275 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-06-08 21:05:02.275 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-06-08 21:05:02.275 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... )
2025-06-08 21:05:02.276 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... )
2025-06-08 21:05:02.276 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string)
2025-06-08 21:05:02.282 [JavaFX-Launcher] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048)
2025-06-08 21:05:02.351 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:05:02.353 [JavaFX-Launcher] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-06-08 21:05:02.421 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.427 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.432 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.432 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.433 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:05:02.433 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:05:02.628 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Factura]: private accessor [cliente]
2025-06-08 21:05:02.635 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.636 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.662 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:05:02.662 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:05:02.685 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Empleado]: private accessor [estado]
2025-06-08 21:05:02.686 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:05:02.686 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:05:02.707 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Seccion]: private accessor [detalle]
2025-06-08 21:05:02.710 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:05:02.711 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:05:02.732 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Cliente]: private accessor [apellido]
2025-06-08 21:05:02.733 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.734 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.734 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.734 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.735 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:05:02.735 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:05:02.756 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Menu]: private accessor [codPedido]
2025-06-08 21:05:02.757 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.759 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.761 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.761 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.762 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.762 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.763 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.763 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.763 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:05:02.764 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:05:02.784 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido]: private accessor [cantidad]
2025-06-08 21:05:02.785 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.786 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.786 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.788 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.788 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.789 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.789 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.790 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:05:02.790 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:05:02.807 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Producto]: private accessor [categoria]
2025-06-08 21:05:02.808 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.809 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.810 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:05:02.811 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:05:02.830 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Categoria]: private accessor [estado]
2025-06-08 21:05:02.831 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:05:02.832 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:05:02.848 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Mesa]: private accessor [capacidad]
2025-06-08 21:05:02.849 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.850 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.850 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.851 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.851 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.851 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.852 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:05:02.852 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:05:02.868 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Pedido]: private accessor [cantPedidos]
2025-06-08 21:05:02.868 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.869 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.869 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:05:02.897 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks
2025-06-08 21:05:02.897 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente]
2025-06-08 21:05:02.901 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido]
2025-06-08 21:05:02.902 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Factura) `staticFetchableList` generator
2025-06-08 21:05:02.903 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Empleado) `staticFetchableList` generator
2025-06-08 21:05:02.903 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Seccion) `staticFetchableList` generator
2025-06-08 21:05:02.903 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Cliente) `staticFetchableList` generator
2025-06-08 21:05:02.903 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido]
2025-06-08 21:05:02.904 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto]
2025-06-08 21:05:02.905 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Menu) `staticFetchableList` generator
2025-06-08 21:05:02.905 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura]
2025-06-08 21:05:02.906 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido]
2025-06-08 21:05:02.906 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto]
2025-06-08 21:05:02.907 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.DetPedido) `staticFetchableList` generator
2025-06-08 21:05:02.907 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria]
2025-06-08 21:05:02.908 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion]
2025-06-08 21:05:02.909 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Producto) `staticFetchableList` generator
2025-06-08 21:05:02.909 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Categoria) `staticFetchableList` generator
2025-06-08 21:05:02.909 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Mesa) `staticFetchableList` generator
2025-06-08 21:05:02.909 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente]
2025-06-08 21:05:02.909 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado]
2025-06-08 21:05:02.909 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa]
2025-06-08 21:05:02.909 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Pedido) `staticFetchableList` generator
2025-06-08 21:05:02.996 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2025-06-08 21:05:02.999 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Factura)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura] 
2025-06-08 21:05:03.011 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@401e17e2] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente] 
2025-06-08 21:05:03.014 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:05:03.019 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@14406006] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido] 
2025-06-08 21:05:03.020 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:05:03.021 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3e3f6c8f] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente] 
2025-06-08 21:05:03.021 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:05:03.022 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@72e9d3cf] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado] 
2025-06-08 21:05:03.023 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:05:03.024 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2e5949b5] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa] 
2025-06-08 21:05:03.024 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:05:03.033 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.cantVisitas]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.email]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.nombre]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.telefono]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.codigo]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.fechaEmision]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.igv]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.rol]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.subtotal]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.total]

2025-06-08 21:05:03.038 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (f1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura) {
          primaryTableReference : factura as f1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente) {
              primaryTableReference : cliente as c1_0
            }
            left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido) {
              primaryTableReference : pedido as p1_0
              TableGroupJoins {
                left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente) {
                  primaryTableReference : cliente as c2_0
                }
                left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado) {
                  primaryTableReference : empleado as e1_0
                }
                left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa) {
                  primaryTableReference : mesa as m1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:05:03.052 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:05:03.053 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Factura */ select id_factura from factura where id_factura=?
2025-06-08 21:05:03.053 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Factura */insert into factura (id_cliente,codigo,estado,fecha_emision,igv,id_pedido,subtotal,total) values (?,?,?,?,?,?,?,?)
2025-06-08 21:05:03.054 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Factura */update factura set id_cliente=?,codigo=?,estado=?,fecha_emision=?,igv=?,id_pedido=?,subtotal=?,total=? where id_factura=?
2025-06-08 21:05:03.054 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Factura */delete from factura where id_factura=?
2025-06-08 21:05:03.055 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:05:03.055 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:05:03.056 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.rol]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.usuario]

2025-06-08 21:05:03.057 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:05:03.058 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:05:03.059 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Empleado */ select id_empleado from empleado where id_empleado=?
2025-06-08 21:05:03.060 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */insert into empleado (estado,nombre,password,rol,usuario) values (?,?,?,?,?)
2025-06-08 21:05:03.060 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */update empleado set estado=?,nombre=?,password=?,rol=?,usuario=? where id_empleado=?
2025-06-08 21:05:03.061 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */delete from empleado where id_empleado=?
2025-06-08 21:05:03.061 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:05:03.061 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Seccion)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] 
2025-06-08 21:05:03.062 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Seccion]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion.detalle]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion.estado]

2025-06-08 21:05:03.062 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Seccion) {
          primaryTableReference : seccion as s1_0
        }
      }
    }

2025-06-08 21:05:03.063 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:05:03.063 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Seccion */ select id_seccion from seccion where id_seccion=?
2025-06-08 21:05:03.063 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */insert into seccion (detalle,estado) values (?,?)
2025-06-08 21:05:03.063 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */update seccion set detalle=?,estado=? where id_seccion=?
2025-06-08 21:05:03.063 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */delete from seccion where id_seccion=?
2025-06-08 21:05:03.064 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:05:03.065 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Cliente)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] 
2025-06-08 21:05:03.066 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Cliente]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.cantVisitas]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.email]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.nombre]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.telefono]

2025-06-08 21:05:03.066 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Cliente) {
          primaryTableReference : cliente as c1_0
        }
      }
    }

2025-06-08 21:05:03.067 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:05:03.067 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Cliente */ select id_cliente from cliente where id_cliente=?
2025-06-08 21:05:03.067 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */insert into cliente (apellido,cant_visitas,dni,email,estado,nombre,telefono) values (?,?,?,?,?,?,?)
2025-06-08 21:05:03.067 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */update cliente set apellido=?,cant_visitas=?,dni=?,email=?,estado=?,nombre=?,telefono=? where id_cliente=?
2025-06-08 21:05:03.068 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */delete from cliente where id_cliente=?
2025-06-08 21:05:03.068 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:05:03.068 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Menu)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu] 
2025-06-08 21:05:03.068 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@77dabe8] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido] 
2025-06-08 21:05:03.069 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:05:03.069 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5220adf4] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente] 
2025-06-08 21:05:03.070 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:05:03.071 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5d46d41d] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado] 
2025-06-08 21:05:03.072 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:05:03.072 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@30ede43c] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa] 
2025-06-08 21:05:03.073 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m2_0
2025-06-08 21:05:03.074 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5aa53b22] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto] 
2025-06-08 21:05:03.075 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p2_0
2025-06-08 21:05:03.076 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@dbd628f] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria] 
2025-06-08 21:05:03.076 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:05:03.077 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6630a919] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion] 
2025-06-08 21:05:03.077 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:05:03.078 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.codPedido]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.rol]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.total]
 |  \-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.descripcion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.precio]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion.detalle]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.stock]

2025-06-08 21:05:03.079 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu) {
          primaryTableReference : menu as m1_0
          TableGroupJoins {
            left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido) {
              primaryTableReference : pedido as p1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente) {
                  primaryTableReference : cliente as c1_0
                }
                left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado) {
                  primaryTableReference : empleado as e1_0
                }
                left  join LazyTableGroup (m2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa) {
                  primaryTableReference : mesa as m2_0
                }
              }
            }
            left  join LazyTableGroup (p2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto) {
              primaryTableReference : producto as p2_0
              TableGroupJoins {
                left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria) {
                  primaryTableReference : categoria as c2_0
                }
                left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion) {
                  primaryTableReference : seccion as s1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:05:03.080 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:05:03.081 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Menu */ select id_menu from menu where id_menu=?
2025-06-08 21:05:03.081 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Menu */insert into menu (cod_pedido,id_pedido,id_producto) values (?,?,?)
2025-06-08 21:05:03.081 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Menu */update menu set cod_pedido=?,id_pedido=?,id_producto=? where id_menu=?
2025-06-08 21:05:03.081 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Menu */delete from menu where id_menu=?
2025-06-08 21:05:03.082 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : dp1_0
2025-06-08 21:05:03.082 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.DetPedido)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] 
2025-06-08 21:05:03.083 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4aac2dca] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura] 
2025-06-08 21:05:03.084 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2025-06-08 21:05:03.084 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2c63870a] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente] 
2025-06-08 21:05:03.085 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:05:03.085 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4f788bfe] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido] 
2025-06-08 21:05:03.086 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:05:03.086 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6d961bb3] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente] 
2025-06-08 21:05:03.087 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:05:03.088 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@46ffb9b6] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado] 
2025-06-08 21:05:03.088 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:05:03.089 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@76143db4] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa] 
2025-06-08 21:05:03.090 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:05:03.091 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7d387ff3] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido] 
2025-06-08 21:05:03.093 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p2_0
2025-06-08 21:05:03.094 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@f6d8e4] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente] 
2025-06-08 21:05:03.095 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c3_0
2025-06-08 21:05:03.095 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3f83d81] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado] 
2025-06-08 21:05:03.096 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e2_0
2025-06-08 21:05:03.096 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@77b4ec91] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa] 
2025-06-08 21:05:03.097 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m2_0
2025-06-08 21:05:03.097 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@110fbdc1] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto] 
2025-06-08 21:05:03.098 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p3_0
2025-06-08 21:05:03.098 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@270866fc] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria] 
2025-06-08 21:05:03.099 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c4_0
2025-06-08 21:05:03.100 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@655e53a9] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion] 
2025-06-08 21:05:03.100 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:05:03.101 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.cantidad]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.estado]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.telefono]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.codigo]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.fechaEmision]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.igv]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cantPedidos]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.apellido]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.cantVisitas]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.dni]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.email]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.estado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.nombre]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.telefono]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.estado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.nombre]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.password]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.rol]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.usuario]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.fechaHora]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.capacidad]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.detalle]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.estado]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.numero]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.total]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.subtotal]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.igv]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.rol]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.precioUnitario]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.descripcion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.precio]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion.detalle]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.stock]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.subtotal]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.total]

2025-06-08 21:05:03.102 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (dp1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido) {
          primaryTableReference : detalle_pedido as dp1_0
          TableGroupJoins {
            left  join LazyTableGroup (f1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura) {
              primaryTableReference : factura as f1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente) {
                  primaryTableReference : cliente as c1_0
                }
                left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido) {
                  primaryTableReference : pedido as p1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente) {
                      primaryTableReference : cliente as c2_0
                    }
                    left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado) {
                      primaryTableReference : empleado as e1_0
                    }
                    left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa) {
                      primaryTableReference : mesa as m1_0
                    }
                  }
                }
              }
            }
             join LazyTableGroup (p2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido) {
              primaryTableReference : pedido as p2_0
              TableGroupJoins {
                left  join LazyTableGroup (c3 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente) {
                  primaryTableReference : cliente as c3_0
                }
                left  join LazyTableGroup (e2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado) {
                  primaryTableReference : empleado as e2_0
                }
                left  join LazyTableGroup (m2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa) {
                  primaryTableReference : mesa as m2_0
                }
              }
            }
             join LazyTableGroup (p3 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto) {
              primaryTableReference : producto as p3_0
              TableGroupJoins {
                left  join LazyTableGroup (c4 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria) {
                  primaryTableReference : categoria as c4_0
                }
                left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion) {
                  primaryTableReference : seccion as s1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:05:03.104 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:05:03.104 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */ select id_detalle_pedido from detalle_pedido where id_detalle_pedido=?
2025-06-08 21:05:03.104 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */insert into detalle_pedido (cantidad,estado,id_factura,igv,id_pedido,precio_unitario,id_producto,subtotal,total) values (?,?,?,?,?,?,?,?,?)
2025-06-08 21:05:03.104 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */update detalle_pedido set cantidad=?,estado=?,id_factura=?,igv=?,id_pedido=?,precio_unitario=?,id_producto=?,subtotal=?,total=? where id_detalle_pedido=?
2025-06-08 21:05:03.105 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */delete from detalle_pedido where id_detalle_pedido=?
2025-06-08 21:05:03.105 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:05:03.106 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Producto)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto] 
2025-06-08 21:05:03.106 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5953a928] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria] 
2025-06-08 21:05:03.107 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:05:03.108 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3d880b78] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion] 
2025-06-08 21:05:03.108 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:05:03.110 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.descripcion]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.precio]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion.detalle]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.stock]

2025-06-08 21:05:03.110 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto) {
          primaryTableReference : producto as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria) {
              primaryTableReference : categoria as c1_0
            }
            left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion) {
              primaryTableReference : seccion as s1_0
            }
          }
        }
      }
    }

2025-06-08 21:05:03.111 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:05:03.111 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Producto */ select id_producto from producto where id_producto=?
2025-06-08 21:05:03.111 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Producto */insert into producto (id_categoria,descripcion,estado,nombre,precio,id_seccion,stock) values (?,?,?,?,?,?,?)
2025-06-08 21:05:03.112 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Producto */update producto set id_categoria=?,descripcion=?,estado=?,nombre=?,precio=?,id_seccion=?,stock=? where id_producto=?
2025-06-08 21:05:03.112 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Producto */delete from producto where id_producto=?
2025-06-08 21:05:03.112 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:05:03.112 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Categoria)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] 
2025-06-08 21:05:03.113 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Categoria]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Categoria.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Categoria.nombre]

2025-06-08 21:05:03.113 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Categoria) {
          primaryTableReference : categoria as c1_0
        }
      }
    }

2025-06-08 21:05:03.114 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:05:03.114 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Categoria */ select id_categoria from categoria where id_categoria=?
2025-06-08 21:05:03.114 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */insert into categoria (estado,nombre) values (?,?)
2025-06-08 21:05:03.115 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */update categoria set estado=?,nombre=? where id_categoria=?
2025-06-08 21:05:03.115 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */delete from categoria where id_categoria=?
2025-06-08 21:05:03.115 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:05:03.116 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Mesa)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] 
2025-06-08 21:05:03.117 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Mesa]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.capacidad]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.detalle]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.numero]

2025-06-08 21:05:03.117 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Mesa) {
          primaryTableReference : mesa as m1_0
        }
      }
    }

2025-06-08 21:05:03.118 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:05:03.118 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Mesa */ select id_mesa from mesa where id_mesa=?
2025-06-08 21:05:03.118 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */insert into mesa (capacidad,detalle,estado,numero) values (?,?,?,?)
2025-06-08 21:05:03.118 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */update mesa set capacidad=?,detalle=?,estado=?,numero=? where id_mesa=?
2025-06-08 21:05:03.118 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */delete from mesa where id_mesa=?
2025-06-08 21:05:03.119 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:05:03.119 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Pedido)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] 
2025-06-08 21:05:03.120 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@51eff07d] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente] 
2025-06-08 21:05:03.121 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:05:03.122 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1ddc1937] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado] 
2025-06-08 21:05:03.122 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:05:03.123 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@d4faa3b] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa] 
2025-06-08 21:05:03.124 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:05:03.125 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cantPedidos]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.cantVisitas]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.email]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.nombre]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.telefono]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.password]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.rol]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.usuario]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.fechaHora]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.capacidad]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.detalle]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.numero]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.total]

2025-06-08 21:05:03.126 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido) {
          primaryTableReference : pedido as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente) {
              primaryTableReference : cliente as c1_0
            }
            left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado) {
              primaryTableReference : empleado as e1_0
            }
            left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa) {
              primaryTableReference : mesa as m1_0
            }
          }
        }
      }
    }

2025-06-08 21:05:03.127 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:05:03.127 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Pedido */ select id_pedido from pedido where id_pedido=?
2025-06-08 21:05:03.127 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */insert into pedido (cant_pedidos,id_cliente,id_empleado,estado,fecha_hora,id_mesa,total) values (?,?,?,?,?,?,?)
2025-06-08 21:05:03.127 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */update pedido set cant_pedidos=?,id_cliente=?,id_empleado=?,estado=?,fecha_hora=?,id_mesa=?,total=? where id_pedido=?
2025-06-08 21:05:03.128 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */delete from pedido where id_pedido=?
2025-06-08 21:05:03.166 [JavaFX-Launcher] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-08 21:05:03.168 [JavaFX-Launcher] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3b110f7] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4b2568f6]
2025-06-08 21:05:03.170 [JavaFX-Launcher] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries
2025-06-08 21:05:03.170 [JavaFX-Launcher] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries
2025-06-08 21:05:03.230 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : categoria
2025-06-08 21:05:03.231 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : cliente
2025-06-08 21:05:03.231 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : detalle_pedido
2025-06-08 21:05:03.232 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : empleado
2025-06-08 21:05:03.232 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : factura
2025-06-08 21:05:03.233 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : menu
2025-06-08 21:05:03.233 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : mesa
2025-06-08 21:05:03.234 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : pedido
2025-06-08 21:05:03.234 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : producto
2025-06-08 21:05:03.235 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : seccion
2025-06-08 21:05:03.238 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@18f0126a
2025-06-08 21:05:03.239 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 954c42c5-94e3-4e0b-bb33-d5c7d1a87cfe (<unnamed>)
2025-06-08 21:05:03.239 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-06-08 21:05:03.240 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory
2025-06-08 21:05:03.241 [JavaFX-Launcher] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-08 21:05:03.482 [JavaFX-Launcher] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2025-06-08 21:05:03.694 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy105.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:38)
	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:05:03.752 [JavaFX-Launcher] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-08 21:05:03.759 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy105.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:38)
	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:05:03.982 [JavaFX-Launcher] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:05:03.986 [JavaFX-Launcher] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-06-08 21:05:03.987 [JavaFX-Launcher] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-06-08 21:05:03.990 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:05:03.990 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-06-08 21:05:03.991 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:05:03.992 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:05:03.993 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:05:03.993 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:05:03.993 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:05:03.996 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:05:03.998 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:05:03.999 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:05:03.999 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:05:04.000 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:05:04.000 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:05:04.254 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - Started application in 7.271 seconds (process running for 8.39)
2025-06-08 21:05:04.714 [JavaFX-Launcher] INFO  p.e.u.p.ProyectoRestaurantApplication - === LISTADO DE EMPLEADOS ===
2025-06-08 21:05:04.730 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-08 21:05:04.730 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - begin
2025-06-08 21:05:04.839 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:05:04.840 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1))] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:05:04.856 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1)]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1).estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1).nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1).password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1).rol]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1).usuario]

2025-06-08 21:05:04.857 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1)) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:05:04.873 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:05:04.879 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id_empleado,
        e1_0.estado,
        e1_0.nombre,
        e1_0.password,
        e1_0.rol,
        e1_0.usuario 
    from
        empleado e1_0
2025-06-08 21:05:04.900 [JavaFX-Launcher] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1) -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1))@173450089 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:05:04.927 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - committing
2025-06-08 21:05:04.929 [JavaFX-Launcher] INFO  p.e.u.p.service.EmpleadoService - Total empleados encontrados: 3
2025-06-08 21:05:04.930 [JavaFX-Launcher] DEBUG p.e.u.p.service.EmpleadoService - Empleado: Empleado(idEmpleado=1, nombre=admin-juan, usuario=admin, password=123, estado=activo, rol=admin)
2025-06-08 21:05:04.931 [JavaFX-Launcher] DEBUG p.e.u.p.service.EmpleadoService - Empleado: Empleado(idEmpleado=2, nombre=caj-carlos, usuario=caj, password=123, estado=activo, rol=cajero)
2025-06-08 21:05:04.931 [JavaFX-Launcher] DEBUG p.e.u.p.service.EmpleadoService - Empleado: Empleado(idEmpleado=3, nombre=jhon, usuario=cont, password=123, estado=activo, rol=contador)
2025-06-08 21:05:04.931 [JavaFX-Launcher] INFO  p.e.u.p.ProyectoRestaurantApplication - ===========================
2025-06-08 21:05:11.620 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Intentando autenticar usuario: admin
2025-06-08 21:05:11.621 [JavaFX Application Thread] INFO  p.e.u.p.service.EmpleadoService - Iniciando proceso de login para usuario: admin
2025-06-08 21:05:11.622 [JavaFX Application Thread] DEBUG p.e.u.p.service.EmpleadoService - Password length: 3
2025-06-08 21:05:11.657 [JavaFX Application Thread] DEBUG org.hibernate.orm.query.plan.cache - Creating and caching NativeQuery ParameterInterpretation - ParameterInterpretationImpl (SELECT e.* FROM empleado e WHERE e.usuario = ?) : {
    
}
2025-06-08 21:05:11.769 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:05:11.771 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    /* dynamic native SQL query */ SELECT
        e.* 
    FROM
        empleado e 
    WHERE
        e.usuario = ?
2025-06-08 21:05:11.787 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Disallowing positional selections : SELECT e.* FROM empleado e WHERE e.usuario = :usuariox
2025-06-08 21:05:11.795 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado)@618655750 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:05:11.804 [JavaFX Application Thread] DEBUG p.e.u.p.service.EmpleadoService - Empleado encontrado: Empleado(idEmpleado=1, nombre=admin-juan, usuario=admin, password=123, estado=activo, rol=admin)
2025-06-08 21:05:11.805 [JavaFX Application Thread] INFO  p.e.u.p.service.EmpleadoService - Rol del empleado: 'admin' (sin trim)
2025-06-08 21:05:11.805 [JavaFX Application Thread] INFO  p.e.u.p.service.EmpleadoService - Rol del empleado (después de trim y toLowerCase): 'admin'
2025-06-08 21:05:11.809 [JavaFX Application Thread] DEBUG org.hibernate.orm.query.plan.cache - Creating and caching NativeQuery ParameterInterpretation - ParameterInterpretationImpl (SELECT e.* FROM empleado e WHERE e.usuario = ? AND e.password = ?) : {
    ,
    
}
2025-06-08 21:05:11.813 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:05:11.814 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    /* dynamic native SQL query */ SELECT
        e.* 
    FROM
        empleado e 
    WHERE
        e.usuario = ? 
        AND e.password = ?
2025-06-08 21:05:11.816 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Disallowing positional selections : SELECT e.* FROM empleado e WHERE e.usuario = :usuario AND e.password = :password
2025-06-08 21:05:11.818 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado)@1107494857 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:05:11.821 [JavaFX Application Thread] INFO  p.e.u.p.service.EmpleadoService - Login exitoso para el usuario: admin con rol: admin
2025-06-08 21:05:11.822 [JavaFX Application Thread] INFO  p.e.u.p.control.ControlLogin - Autenticación exitosa para el empleado: admin-juan con rol: admin
2025-06-08 21:05:11.825 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Procesando rol: 'admin'
2025-06-08 21:05:11.826 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Cargando vista: /views/admMenu.fxml
2025-06-08 21:05:12.071 [JavaFX Application Thread] INFO  p.e.u.p.control.ControlMenu - Inicializando ControlMenu
2025-06-08 21:05:12.075 [JavaFX Application Thread] ERROR p.e.u.p.control.ControlLogin - Error al cargar la interfaz:
javafx.fxml.LoadException: 
/C:/Users/USUARIO/Documents/ProyectoRestaurantJava/ProyectoRestaurant/target/classes/views/admMenu.fxml

	at javafx.fxml.FXMLLoader.constructLoadException(FXMLLoader.java:2722)
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2692)
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563)
	at javafx.fxml.FXMLLoader.load(FXMLLoader.java:2531)
	at pe.edu.upeu.proyecto_restaurant.control.ControlLogin.login(ControlLogin.java:97)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270)
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84)
	at javafx.fxml.FXMLLoader$MethodHandler.invoke(FXMLLoader.java:1853)
	at javafx.fxml.FXMLLoader$ControllerMethodEventHandler.handle(FXMLLoader.java:1726)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:232)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:189)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8875)
	at javafx.scene.control.Button.fire(Button.java:203)
	at javafx.scene.control.skin.ButtonSkin.lambda$new$0(ButtonSkin.java:71)
	at com.sun.javafx.scene.KeyboardShortcutsHandler.processAccelerators(KeyboardShortcutsHandler.java:383)
	at com.sun.javafx.scene.KeyboardShortcutsHandler.dispatchBubblingEvent(KeyboardShortcutsHandler.java:163)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene.processKeyEvent(Scene.java:2194)
	at javafx.scene.Scene$ScenePeerListener.keyEvent(Scene.java:2715)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$KeyEventNotification.run(GlassViewEventHandler.java:218)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$KeyEventNotification.run(GlassViewEventHandler.java:150)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleKeyEvent$1(GlassViewEventHandler.java:250)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleKeyEvent(GlassViewEventHandler.java:249)
	at com.sun.glass.ui.View.handleKeyEvent(View.java:542)
	at com.sun.glass.ui.View.notifyKey(View.java:966)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:115)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270)
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84)
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688)
	... 51 common frames omitted
Caused by: java.lang.NullPointerException: Cannot invoke "javafx.scene.control.TableColumn.setCellValueFactory(javafx.util.Callback)" because "this.colNombrePlato" is null
	at pe.edu.upeu.proyecto_restaurant.control.ControlMenu.initialize(ControlMenu.java:52)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	... 58 common frames omitted
2025-06-08 21:05:12.081 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Mostrando mensaje de error: Error al cargar la interfaz: 
/C:/Users/USUARIO/Documents/ProyectoRestaurantJava/ProyectoRestaurant/target/classes/views/admMenu.fxml

2025-06-08 21:05:15.804 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Intentando autenticar usuario: admin
2025-06-08 21:05:15.804 [JavaFX Application Thread] INFO  p.e.u.p.service.EmpleadoService - Iniciando proceso de login para usuario: admin
2025-06-08 21:05:15.805 [JavaFX Application Thread] DEBUG p.e.u.p.service.EmpleadoService - Password length: 3
2025-06-08 21:05:15.806 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:05:15.807 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    /* dynamic native SQL query */ SELECT
        e.* 
    FROM
        empleado e 
    WHERE
        e.usuario = ?
2025-06-08 21:05:15.809 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Disallowing positional selections : SELECT e.* FROM empleado e WHERE e.usuario = :usuariox
2025-06-08 21:05:15.810 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado)@1688782615 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:05:15.813 [JavaFX Application Thread] DEBUG p.e.u.p.service.EmpleadoService - Empleado encontrado: Empleado(idEmpleado=1, nombre=admin-juan, usuario=admin, password=123, estado=activo, rol=admin)
2025-06-08 21:05:15.814 [JavaFX Application Thread] INFO  p.e.u.p.service.EmpleadoService - Rol del empleado: 'admin' (sin trim)
2025-06-08 21:05:15.815 [JavaFX Application Thread] INFO  p.e.u.p.service.EmpleadoService - Rol del empleado (después de trim y toLowerCase): 'admin'
2025-06-08 21:05:15.817 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:05:15.817 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    /* dynamic native SQL query */ SELECT
        e.* 
    FROM
        empleado e 
    WHERE
        e.usuario = ? 
        AND e.password = ?
2025-06-08 21:05:15.821 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Disallowing positional selections : SELECT e.* FROM empleado e WHERE e.usuario = :usuario AND e.password = :password
2025-06-08 21:05:15.824 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado)@1599262229 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:05:15.826 [JavaFX Application Thread] INFO  p.e.u.p.service.EmpleadoService - Login exitoso para el usuario: admin con rol: admin
2025-06-08 21:05:15.826 [JavaFX Application Thread] INFO  p.e.u.p.control.ControlLogin - Autenticación exitosa para el empleado: admin-juan con rol: admin
2025-06-08 21:05:15.827 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Procesando rol: 'admin'
2025-06-08 21:05:15.827 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Cargando vista: /views/admMenu.fxml
2025-06-08 21:05:15.897 [JavaFX Application Thread] INFO  p.e.u.p.control.ControlMenu - Inicializando ControlMenu
2025-06-08 21:05:15.899 [JavaFX Application Thread] ERROR p.e.u.p.control.ControlLogin - Error al cargar la interfaz:
javafx.fxml.LoadException: 
/C:/Users/USUARIO/Documents/ProyectoRestaurantJava/ProyectoRestaurant/target/classes/views/admMenu.fxml

	at javafx.fxml.FXMLLoader.constructLoadException(FXMLLoader.java:2722)
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2692)
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563)
	at javafx.fxml.FXMLLoader.load(FXMLLoader.java:2531)
	at pe.edu.upeu.proyecto_restaurant.control.ControlLogin.login(ControlLogin.java:97)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270)
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84)
	at javafx.fxml.FXMLLoader$MethodHandler.invoke(FXMLLoader.java:1853)
	at javafx.fxml.FXMLLoader$ControllerMethodEventHandler.handle(FXMLLoader.java:1726)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:232)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:189)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8875)
	at javafx.scene.control.Button.fire(Button.java:203)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:207)
	at com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:232)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:189)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3984)
	at javafx.scene.Scene.processMouseEvent(Scene.java:1890)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2708)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:551)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:115)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270)
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84)
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688)
	... 57 common frames omitted
Caused by: java.lang.NullPointerException: Cannot invoke "javafx.scene.control.TableColumn.setCellValueFactory(javafx.util.Callback)" because "this.colNombrePlato" is null
	at pe.edu.upeu.proyecto_restaurant.control.ControlMenu.initialize(ControlMenu.java:52)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	... 64 common frames omitted
2025-06-08 21:05:15.903 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Mostrando mensaje de error: Error al cargar la interfaz: 
/C:/Users/USUARIO/Documents/ProyectoRestaurantJava/ProyectoRestaurant/target/classes/views/admMenu.fxml

2025-06-08 21:05:34.406 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Intentando autenticar usuario: admin
2025-06-08 21:05:34.406 [JavaFX Application Thread] INFO  p.e.u.p.service.EmpleadoService - Iniciando proceso de login para usuario: admin
2025-06-08 21:05:34.406 [JavaFX Application Thread] DEBUG p.e.u.p.service.EmpleadoService - Password length: 3
2025-06-08 21:05:34.407 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:05:34.408 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    /* dynamic native SQL query */ SELECT
        e.* 
    FROM
        empleado e 
    WHERE
        e.usuario = ?
2025-06-08 21:05:34.409 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Disallowing positional selections : SELECT e.* FROM empleado e WHERE e.usuario = :usuariox
2025-06-08 21:05:34.410 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado)@733132928 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:05:34.411 [JavaFX Application Thread] DEBUG p.e.u.p.service.EmpleadoService - Empleado encontrado: Empleado(idEmpleado=1, nombre=admin-juan, usuario=admin, password=123, estado=activo, rol=admin)
2025-06-08 21:05:34.412 [JavaFX Application Thread] INFO  p.e.u.p.service.EmpleadoService - Rol del empleado: 'admin' (sin trim)
2025-06-08 21:05:34.412 [JavaFX Application Thread] INFO  p.e.u.p.service.EmpleadoService - Rol del empleado (después de trim y toLowerCase): 'admin'
2025-06-08 21:05:34.413 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:05:34.414 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    /* dynamic native SQL query */ SELECT
        e.* 
    FROM
        empleado e 
    WHERE
        e.usuario = ? 
        AND e.password = ?
2025-06-08 21:05:34.415 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Disallowing positional selections : SELECT e.* FROM empleado e WHERE e.usuario = :usuario AND e.password = :password
2025-06-08 21:05:34.416 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado)@2054302036 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:05:34.418 [JavaFX Application Thread] INFO  p.e.u.p.service.EmpleadoService - Login exitoso para el usuario: admin con rol: admin
2025-06-08 21:05:34.418 [JavaFX Application Thread] INFO  p.e.u.p.control.ControlLogin - Autenticación exitosa para el empleado: admin-juan con rol: admin
2025-06-08 21:05:34.418 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Procesando rol: 'admin'
2025-06-08 21:05:34.418 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Cargando vista: /views/admMenu.fxml
2025-06-08 21:05:34.459 [JavaFX Application Thread] INFO  p.e.u.p.control.ControlMenu - Inicializando ControlMenu
2025-06-08 21:05:34.460 [JavaFX Application Thread] ERROR p.e.u.p.control.ControlLogin - Error al cargar la interfaz:
javafx.fxml.LoadException: 
/C:/Users/USUARIO/Documents/ProyectoRestaurantJava/ProyectoRestaurant/target/classes/views/admMenu.fxml

	at javafx.fxml.FXMLLoader.constructLoadException(FXMLLoader.java:2722)
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2692)
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563)
	at javafx.fxml.FXMLLoader.load(FXMLLoader.java:2531)
	at pe.edu.upeu.proyecto_restaurant.control.ControlLogin.login(ControlLogin.java:97)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270)
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84)
	at javafx.fxml.FXMLLoader$MethodHandler.invoke(FXMLLoader.java:1853)
	at javafx.fxml.FXMLLoader$ControllerMethodEventHandler.handle(FXMLLoader.java:1726)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:232)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:189)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8875)
	at javafx.scene.control.Button.fire(Button.java:203)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:207)
	at com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:232)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:189)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3984)
	at javafx.scene.Scene.processMouseEvent(Scene.java:1890)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2708)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:551)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:115)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270)
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84)
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688)
	... 57 common frames omitted
Caused by: java.lang.NullPointerException: Cannot invoke "javafx.scene.control.TableColumn.setCellValueFactory(javafx.util.Callback)" because "this.colNombrePlato" is null
	at pe.edu.upeu.proyecto_restaurant.control.ControlMenu.initialize(ControlMenu.java:52)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	... 64 common frames omitted
2025-06-08 21:05:34.463 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Mostrando mensaje de error: Error al cargar la interfaz: 
/C:/Users/USUARIO/Documents/ProyectoRestaurantJava/ProyectoRestaurant/target/classes/views/admMenu.fxml

2025-06-08 21:05:36.379 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Intentando autenticar usuario: admin
2025-06-08 21:05:36.380 [JavaFX Application Thread] INFO  p.e.u.p.service.EmpleadoService - Iniciando proceso de login para usuario: admin
2025-06-08 21:05:36.381 [JavaFX Application Thread] DEBUG p.e.u.p.service.EmpleadoService - Password length: 3
2025-06-08 21:05:36.382 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:05:36.383 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    /* dynamic native SQL query */ SELECT
        e.* 
    FROM
        empleado e 
    WHERE
        e.usuario = ?
2025-06-08 21:05:36.384 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Disallowing positional selections : SELECT e.* FROM empleado e WHERE e.usuario = :usuariox
2025-06-08 21:05:36.385 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado)@1990696869 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:05:36.386 [JavaFX Application Thread] DEBUG p.e.u.p.service.EmpleadoService - Empleado encontrado: Empleado(idEmpleado=1, nombre=admin-juan, usuario=admin, password=123, estado=activo, rol=admin)
2025-06-08 21:05:36.387 [JavaFX Application Thread] INFO  p.e.u.p.service.EmpleadoService - Rol del empleado: 'admin' (sin trim)
2025-06-08 21:05:36.387 [JavaFX Application Thread] INFO  p.e.u.p.service.EmpleadoService - Rol del empleado (después de trim y toLowerCase): 'admin'
2025-06-08 21:05:36.388 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:05:36.389 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    /* dynamic native SQL query */ SELECT
        e.* 
    FROM
        empleado e 
    WHERE
        e.usuario = ? 
        AND e.password = ?
2025-06-08 21:05:36.391 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Disallowing positional selections : SELECT e.* FROM empleado e WHERE e.usuario = :usuario AND e.password = :password
2025-06-08 21:05:36.392 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado)@656651275 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:05:36.393 [JavaFX Application Thread] INFO  p.e.u.p.service.EmpleadoService - Login exitoso para el usuario: admin con rol: admin
2025-06-08 21:05:36.394 [JavaFX Application Thread] INFO  p.e.u.p.control.ControlLogin - Autenticación exitosa para el empleado: admin-juan con rol: admin
2025-06-08 21:05:36.394 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Procesando rol: 'admin'
2025-06-08 21:05:36.394 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Cargando vista: /views/admMenu.fxml
2025-06-08 21:05:36.443 [JavaFX Application Thread] INFO  p.e.u.p.control.ControlMenu - Inicializando ControlMenu
2025-06-08 21:05:36.443 [JavaFX Application Thread] ERROR p.e.u.p.control.ControlLogin - Error al cargar la interfaz:
javafx.fxml.LoadException: 
/C:/Users/USUARIO/Documents/ProyectoRestaurantJava/ProyectoRestaurant/target/classes/views/admMenu.fxml

	at javafx.fxml.FXMLLoader.constructLoadException(FXMLLoader.java:2722)
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2692)
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563)
	at javafx.fxml.FXMLLoader.load(FXMLLoader.java:2531)
	at pe.edu.upeu.proyecto_restaurant.control.ControlLogin.login(ControlLogin.java:97)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270)
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84)
	at javafx.fxml.FXMLLoader$MethodHandler.invoke(FXMLLoader.java:1853)
	at javafx.fxml.FXMLLoader$ControllerMethodEventHandler.handle(FXMLLoader.java:1726)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:232)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:189)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8875)
	at javafx.scene.control.Button.fire(Button.java:203)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:207)
	at com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:232)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:189)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3984)
	at javafx.scene.Scene.processMouseEvent(Scene.java:1890)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2708)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:551)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:115)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270)
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84)
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688)
	... 57 common frames omitted
Caused by: java.lang.NullPointerException: Cannot invoke "javafx.scene.control.TableColumn.setCellValueFactory(javafx.util.Callback)" because "this.colNombrePlato" is null
	at pe.edu.upeu.proyecto_restaurant.control.ControlMenu.initialize(ControlMenu.java:52)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	... 64 common frames omitted
2025-06-08 21:05:36.446 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Mostrando mensaje de error: Error al cargar la interfaz: 
/C:/Users/USUARIO/Documents/ProyectoRestaurantJava/ProyectoRestaurant/target/classes/views/admMenu.fxml

2025-06-08 21:05:38.651 [JavaFX Application Thread] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-08 21:05:38.655 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing
2025-06-08 21:05:38.657 [JavaFX Application Thread] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@55b8a81] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4b2568f6]
2025-06-08 21:05:38.658 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2025-06-08 21:05:38.660 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2025-06-08 21:05:38.661 [JavaFX Application Thread] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-08 21:05:38.706 [JavaFX Application Thread] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-08 21:07:28.579 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:07:28.582 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:07:28.583 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:07:28.585 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:07:28.596 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:07:28.598 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:07:28.634 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:07:28.839 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:07:28.853 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:07:28.854 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:07:28.856 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:07:28.857 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:07:28.858 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:07:28.972 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - Starting application using Java 23.0.2 with PID 11028 (started by USUARIO in C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant)
2025-06-08 21:07:28.975 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-08 21:07:29.945 [JavaFX-Launcher] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-08 21:07:30.075 [JavaFX-Launcher] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 114 ms. Found 10 JPA repository interfaces.
2025-06-08 21:07:30.622 [JavaFX-Launcher] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@33909752
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/USUARIO/Documents/ProyectoRestaurantJava/ProyectoRestaurant/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		pe.edu.upeu.proyecto_restaurant.modulo.Categoria
		pe.edu.upeu.proyecto_restaurant.modulo.Cliente
		pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
		pe.edu.upeu.proyecto_restaurant.modulo.Empleado
		pe.edu.upeu.proyecto_restaurant.modulo.Factura
		pe.edu.upeu.proyecto_restaurant.modulo.Menu
		pe.edu.upeu.proyecto_restaurant.modulo.Mesa
		pe.edu.upeu.proyecto_restaurant.modulo.Pedido
		pe.edu.upeu.proyecto_restaurant.modulo.Producto
		pe.edu.upeu.proyecto_restaurant.modulo.Seccion]
	Mapping files names []
	Properties []
2025-06-08 21:07:30.631 [JavaFX-Launcher] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-06-08 21:07:30.634 [JavaFX-Launcher] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-06-08 21:07:30.699 [JavaFX-Launcher] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-08 21:07:30.702 [JavaFX-Launcher] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found
2025-06-08 21:07:30.729 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-06-08 21:07:30.730 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-06-08 21:07:30.732 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:07:30.732 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:07:30.734 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-06-08 21:07:30.736 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-06-08 21:07:30.738 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-06-08 21:07:30.739 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:07:30.741 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-06-08 21:07:30.742 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-06-08 21:07:30.743 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:07:30.744 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-06-08 21:07:30.754 [JavaFX-Launcher] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-06-08 21:07:30.757 [JavaFX-Launcher] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-08 21:07:30.861 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@72164c62
2025-06-08 21:07:30.862 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@72164c62
2025-06-08 21:07:30.862 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@72164c62
2025-06-08 21:07:30.863 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@19023677
2025-06-08 21:07:30.863 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@19023677
2025-06-08 21:07:30.864 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@47b6da92
2025-06-08 21:07:30.864 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@47b6da92
2025-06-08 21:07:30.864 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@34b67e31
2025-06-08 21:07:30.865 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@34b67e31
2025-06-08 21:07:30.865 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@74035199
2025-06-08 21:07:30.866 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@74035199
2025-06-08 21:07:30.866 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@74035199
2025-06-08 21:07:30.867 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@7cba70e0
2025-06-08 21:07:30.868 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7cba70e0
2025-06-08 21:07:30.868 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@7cba70e0
2025-06-08 21:07:30.868 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@da947af
2025-06-08 21:07:30.868 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@da947af
2025-06-08 21:07:30.869 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@a69e7dd
2025-06-08 21:07:30.869 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6408f090
2025-06-08 21:07:30.869 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6408f090
2025-06-08 21:07:30.870 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4b1aa181
2025-06-08 21:07:30.870 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@c491372
2025-06-08 21:07:30.870 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@495b4a29
2025-06-08 21:07:30.871 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@495b4a29
2025-06-08 21:07:30.871 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@495b4a29
2025-06-08 21:07:30.871 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6a74bfe2
2025-06-08 21:07:30.872 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@6a74bfe2
2025-06-08 21:07:30.873 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6a74bfe2
2025-06-08 21:07:30.873 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@747c1d84
2025-06-08 21:07:30.874 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@747c1d84
2025-06-08 21:07:30.874 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@747c1d84
2025-06-08 21:07:30.875 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@30ea52fa
2025-06-08 21:07:30.875 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@30ea52fa
2025-06-08 21:07:30.875 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@30ea52fa
2025-06-08 21:07:30.876 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@23734ccc
2025-06-08 21:07:30.876 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@23734ccc
2025-06-08 21:07:30.877 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@23734ccc
2025-06-08 21:07:30.877 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6cb76cef
2025-06-08 21:07:30.878 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6cb76cef
2025-06-08 21:07:30.878 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7833ccc0
2025-06-08 21:07:30.878 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7833ccc0
2025-06-08 21:07:30.879 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@1aac3cbe
2025-06-08 21:07:30.879 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@1aac3cbe
2025-06-08 21:07:30.879 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1aac3cbe
2025-06-08 21:07:30.879 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2300160b
2025-06-08 21:07:30.880 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7407d690
2025-06-08 21:07:30.880 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7407d690
2025-06-08 21:07:30.881 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@12b4511c
2025-06-08 21:07:30.882 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6906d638
2025-06-08 21:07:30.886 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6906d638
2025-06-08 21:07:30.887 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6906d638
2025-06-08 21:07:30.888 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4a95355d
2025-06-08 21:07:30.889 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@ecc9c9
2025-06-08 21:07:30.889 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@30604479
2025-06-08 21:07:30.890 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6f08f35b
2025-06-08 21:07:30.890 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6f08f35b
2025-06-08 21:07:30.891 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@c541c3a
2025-06-08 21:07:30.892 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@c541c3a
2025-06-08 21:07:30.893 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6a903ef8
2025-06-08 21:07:30.894 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5861fc5f
2025-06-08 21:07:30.894 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@70db5e23
2025-06-08 21:07:30.895 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5cc239ce
2025-06-08 21:07:30.895 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@374eab50
2025-06-08 21:07:30.896 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@601a3ae2
2025-06-08 21:07:30.896 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4a1a5a84
2025-06-08 21:07:30.897 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4a1a5a84
2025-06-08 21:07:30.898 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@75b1640
2025-06-08 21:07:30.898 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@75b1640
2025-06-08 21:07:30.898 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@458d29d0
2025-06-08 21:07:30.899 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@458d29d0
2025-06-08 21:07:30.900 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@74f1d6a9
2025-06-08 21:07:30.900 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@74f1d6a9
2025-06-08 21:07:30.901 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6ca76cc9
2025-06-08 21:07:30.902 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6ca76cc9
2025-06-08 21:07:30.903 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@33918e0b
2025-06-08 21:07:30.904 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1ffee200
2025-06-08 21:07:30.905 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@65402bc8
2025-06-08 21:07:30.905 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@65402bc8
2025-06-08 21:07:30.906 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3256c28d
2025-06-08 21:07:30.906 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@d08e31a
2025-06-08 21:07:30.907 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@658eee59
2025-06-08 21:07:30.907 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1f4974b
2025-06-08 21:07:30.907 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1f4974b
2025-06-08 21:07:30.908 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5b27f52
2025-06-08 21:07:30.908 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4fe85ccd
2025-06-08 21:07:30.908 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5d068f4f
2025-06-08 21:07:30.909 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5d068f4f
2025-06-08 21:07:30.910 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@78ed056b
2025-06-08 21:07:30.910 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@78ed056b
2025-06-08 21:07:30.911 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6e33bdcb
2025-06-08 21:07:30.912 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6e33bdcb
2025-06-08 21:07:30.912 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6e33bdcb
2025-06-08 21:07:30.913 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@63308af4
2025-06-08 21:07:30.914 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@63308af4
2025-06-08 21:07:30.914 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@63308af4
2025-06-08 21:07:30.915 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@a250d2a
2025-06-08 21:07:30.916 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@695dbc38
2025-06-08 21:07:30.917 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@eddfccd
2025-06-08 21:07:30.918 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@eddfccd
2025-06-08 21:07:30.919 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2cb3fc61
2025-06-08 21:07:30.919 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2cb3fc61
2025-06-08 21:07:30.921 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2cb3fc61
2025-06-08 21:07:30.921 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2a7c77f8
2025-06-08 21:07:30.921 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2e44a2f3
2025-06-08 21:07:30.922 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4f1e0862
2025-06-08 21:07:30.922 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4f1e0862
2025-06-08 21:07:30.922 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7c7da514
2025-06-08 21:07:30.922 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7c7da514
2025-06-08 21:07:30.923 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7c7da514
2025-06-08 21:07:30.923 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@35f7ded4
2025-06-08 21:07:30.923 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@35f7ded4
2025-06-08 21:07:30.923 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3eafb1a3
2025-06-08 21:07:30.924 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3eafb1a3
2025-06-08 21:07:30.924 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@14df30c
2025-06-08 21:07:30.925 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@14df30c
2025-06-08 21:07:30.925 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1089b334
2025-06-08 21:07:30.926 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1089b334
2025-06-08 21:07:30.927 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@1b03ce8f
2025-06-08 21:07:30.927 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1b03ce8f
2025-06-08 21:07:30.928 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@586256e5
2025-06-08 21:07:30.928 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@36590b76
2025-06-08 21:07:30.929 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@6b140e9a
2025-06-08 21:07:30.929 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@6ee6c2c1
2025-06-08 21:07:30.930 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@24f97486
2025-06-08 21:07:30.935 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@58ee93c5
2025-06-08 21:07:30.936 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@58ee93c5
2025-06-08 21:07:30.938 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@122cdcc1
2025-06-08 21:07:30.940 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3acf850d
2025-06-08 21:07:30.941 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7073ec39
2025-06-08 21:07:30.941 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4f9479e7
2025-06-08 21:07:30.941 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3baa6e00
2025-06-08 21:07:30.942 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7d8b7395
2025-06-08 21:07:30.942 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@12764a39
2025-06-08 21:07:30.943 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7ec142d1
2025-06-08 21:07:30.943 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@16f3f967
2025-06-08 21:07:30.949 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4c7673de] into BootstrapContext; was [null]
2025-06-08 21:07:30.950 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4c7673de) [was null]
2025-06-08 21:07:30.951 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@2675a5a2] into BootstrapContext; was [null]
2025-06-08 21:07:30.952 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@178ef370] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3ffd1b12]
2025-06-08 21:07:30.979 [JavaFX-Launcher] DEBUG o.h.j.b.i.PersistenceUnitInfoDescriptor - Pushing class transformers for PU named 'default' on loading classloader jdk.internal.loader.ClassLoaders$AppClassLoader@33909752
2025-06-08 21:07:31.218 [JavaFX-Launcher] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-08 21:07:31.219 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4c7673de]
2025-06-08 21:07:31.219 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4c7673de]
2025-06-08 21:07:31.258 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-08 21:07:31.402 [JavaFX-Launcher] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@586e5dc8
2025-06-08 21:07:31.405 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-08 21:07:31.414 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : SQLite
	version : 3.46.0
	  major : 3
	  minor : 46
2025-06-08 21:07:31.415 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : SQLite JDBC
	version : 3.46.0.0
	  major : 3
	  minor : 46
2025-06-08 21:07:31.416 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2
2025-06-08 21:07:31.457 [JavaFX-Launcher] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.community.dialect.SQLiteDialect, version: 3.46
2025-06-08 21:07:31.462 [JavaFX-Launcher] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-06-08 21:07:31.463 [JavaFX-Launcher] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2025-06-08 21:07:31.482 [JavaFX-Launcher] DEBUG org.hibernate.orm.jdbc.lob - HHH10010005: Disabling contextual LOB creation as createClob() method threw error : java.sql.SQLFeatureNotSupportedException
2025-06-08 21:07:31.489 [JavaFX-Launcher] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 3.46
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-08 21:07:31.506 [JavaFX-Launcher] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(PRIMITIVE_ARRAY_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-06-08 21:07:31.507 [JavaFX-Launcher] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STRING_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-08 21:07:31.514 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-06-08 21:07:31.515 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:07:31.515 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:07:31.525 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:07:31.526 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:07:31.526 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:07:31.527 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:07:31.528 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:07:31.528 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:07:31.531 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:07:31.531 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:07:31.532 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:07:31.535 [JavaFX-Launcher] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36e0a6ad] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7b06cdc5]
2025-06-08 21:07:31.594 [JavaFX-Launcher] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-06-08 21:07:31.641 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:07:31.656 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Categoria
2025-06-08 21:07:31.671 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Categoria on table categoria
2025-06-08 21:07:31.692 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:07:31.726 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_categoria')
2025-06-08 21:07:31.730 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:07:31.731 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:07:31.740 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCategoria with lazy=false
2025-06-08 21:07:31.753 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:idCategoria]
2025-06-08 21:07:31.763 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCategoria
2025-06-08 21:07:31.773 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.id_categoria
2025-06-08 21:07:31.775 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCategoria
2025-06-08 21:07:31.782 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_categoria)]), idCategoria, identity, , ...)
2025-06-08 21:07:31.785 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:07:31.786 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:07:31.787 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:estado]
2025-06-08 21:07:31.787 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:07:31.788 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.estado
2025-06-08 21:07:31.789 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:07:31.790 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:07:31.790 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:07:31.791 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:nombre]
2025-06-08 21:07:31.792 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:07:31.792 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.nombre
2025-06-08 21:07:31.793 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:07:31.795 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:07:31.804 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:07:31.804 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Cliente
2025-06-08 21:07:31.805 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Cliente on table cliente
2025-06-08 21:07:31.805 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:07:31.808 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_cliente')
2025-06-08 21:07:31.809 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:07:31.809 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:07:31.810 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCliente with lazy=false
2025-06-08 21:07:31.811 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:idCliente]
2025-06-08 21:07:31.811 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCliente
2025-06-08 21:07:31.812 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.id_cliente
2025-06-08 21:07:31.812 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCliente
2025-06-08 21:07:31.813 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_cliente)]), idCliente, identity, , ...)
2025-06-08 21:07:31.814 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='apellido')
2025-06-08 21:07:31.814 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property apellido with lazy=false
2025-06-08 21:07:31.815 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:apellido]
2025-06-08 21:07:31.815 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for apellido
2025-06-08 21:07:31.817 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.apellido
2025-06-08 21:07:31.818 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property apellido
2025-06-08 21:07:31.842 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cant_visitas')
2025-06-08 21:07:31.843 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantVisitas with lazy=false
2025-06-08 21:07:31.844 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:cantVisitas]
2025-06-08 21:07:31.844 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantVisitas
2025-06-08 21:07:31.845 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.cant_visitas
2025-06-08 21:07:31.845 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantVisitas
2025-06-08 21:07:31.848 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='dni')
2025-06-08 21:07:31.849 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property dni with lazy=false
2025-06-08 21:07:31.849 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:dni]
2025-06-08 21:07:31.851 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for dni
2025-06-08 21:07:31.852 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.dni
2025-06-08 21:07:31.853 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property dni
2025-06-08 21:07:31.854 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
2025-06-08 21:07:31.855 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-06-08 21:07:31.855 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:email]
2025-06-08 21:07:31.855 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email
2025-06-08 21:07:31.856 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.email
2025-06-08 21:07:31.856 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property email
2025-06-08 21:07:31.857 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:07:31.858 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:07:31.858 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:estado]
2025-06-08 21:07:31.859 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:07:31.859 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.estado
2025-06-08 21:07:31.860 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:07:31.861 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:07:31.861 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:07:31.861 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:nombre]
2025-06-08 21:07:31.862 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:07:31.862 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.nombre
2025-06-08 21:07:31.862 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:07:31.863 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='telefono')
2025-06-08 21:07:31.863 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property telefono with lazy=false
2025-06-08 21:07:31.864 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:telefono]
2025-06-08 21:07:31.864 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for telefono
2025-06-08 21:07:31.865 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.telefono
2025-06-08 21:07:31.865 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property telefono
2025-06-08 21:07:31.867 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:07:31.868 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:07:31.869 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name DetPedido
2025-06-08 21:07:31.870 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.DetPedido on table detalle_pedido
2025-06-08 21:07:31.871 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:07:31.880 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_detalle_pedido')
2025-06-08 21:07:31.881 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:07:31.881 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:07:31.882 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idDetallePedido with lazy=false
2025-06-08 21:07:31.882 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:idDetallePedido]
2025-06-08 21:07:31.883 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idDetallePedido
2025-06-08 21:07:31.884 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.id_detalle_pedido
2025-06-08 21:07:31.885 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idDetallePedido
2025-06-08 21:07:31.886 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_detalle_pedido)]), idDetallePedido, identity, , ...)
2025-06-08 21:07:31.886 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cantidad')
2025-06-08 21:07:31.887 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantidad with lazy=false
2025-06-08 21:07:31.887 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:cantidad]
2025-06-08 21:07:31.888 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantidad
2025-06-08 21:07:31.888 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.cantidad
2025-06-08 21:07:31.888 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantidad
2025-06-08 21:07:31.889 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:07:31.889 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:07:31.890 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:estado]
2025-06-08 21:07:31.890 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:07:31.890 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.estado
2025-06-08 21:07:31.891 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:07:31.894 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_factura',referencedColumn='id_factura')
2025-06-08 21:07:31.896 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:07:31.903 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property factura
2025-06-08 21:07:31.904 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='igv')
2025-06-08 21:07:31.905 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property igv with lazy=false
2025-06-08 21:07:31.906 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:igv]
2025-06-08 21:07:31.906 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for igv
2025-06-08 21:07:31.907 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.igv
2025-06-08 21:07:31.907 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property igv
2025-06-08 21:07:31.908 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:07:31.909 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:07:31.909 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:07:31.910 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio_unitario')
2025-06-08 21:07:31.911 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precioUnitario with lazy=false
2025-06-08 21:07:31.911 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:precioUnitario]
2025-06-08 21:07:31.912 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precioUnitario
2025-06-08 21:07:31.912 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.precio_unitario
2025-06-08 21:07:31.913 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property precioUnitario
2025-06-08 21:07:31.913 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_producto',referencedColumn='id_producto')
2025-06-08 21:07:31.914 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:07:31.914 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property producto
2025-06-08 21:07:31.915 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='subtotal')
2025-06-08 21:07:31.915 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property subtotal with lazy=false
2025-06-08 21:07:31.916 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:subtotal]
2025-06-08 21:07:31.918 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for subtotal
2025-06-08 21:07:31.919 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.subtotal
2025-06-08 21:07:31.920 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property subtotal
2025-06-08 21:07:31.920 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:07:31.921 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:07:31.921 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:total]
2025-06-08 21:07:31.922 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:07:31.922 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.total
2025-06-08 21:07:31.922 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:07:31.924 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:07:31.925 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:07:31.926 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Empleado
2025-06-08 21:07:31.926 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Empleado on table empleado
2025-06-08 21:07:31.927 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:07:31.930 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_empleado')
2025-06-08 21:07:31.931 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:07:31.931 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:07:31.932 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idEmpleado with lazy=false
2025-06-08 21:07:31.933 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:idEmpleado]
2025-06-08 21:07:31.934 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idEmpleado
2025-06-08 21:07:31.935 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.id_empleado
2025-06-08 21:07:31.936 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idEmpleado
2025-06-08 21:07:31.936 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_empleado)]), idEmpleado, identity, , ...)
2025-06-08 21:07:31.937 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:07:31.938 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:07:31.938 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:estado]
2025-06-08 21:07:31.938 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:07:31.939 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.estado
2025-06-08 21:07:31.939 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:07:31.939 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:07:31.940 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:07:31.940 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:nombre]
2025-06-08 21:07:31.941 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:07:31.941 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.nombre
2025-06-08 21:07:31.942 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:07:31.943 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password')
2025-06-08 21:07:31.943 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-06-08 21:07:31.944 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:password]
2025-06-08 21:07:31.944 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password
2025-06-08 21:07:31.945 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.password
2025-06-08 21:07:31.946 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property password
2025-06-08 21:07:31.947 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='rol')
2025-06-08 21:07:31.947 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property rol with lazy=false
2025-06-08 21:07:31.948 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:rol]
2025-06-08 21:07:31.948 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for rol
2025-06-08 21:07:31.949 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.rol
2025-06-08 21:07:31.950 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property rol
2025-06-08 21:07:31.952 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='usuario')
2025-06-08 21:07:31.953 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property usuario with lazy=false
2025-06-08 21:07:31.954 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:usuario]
2025-06-08 21:07:31.955 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for usuario
2025-06-08 21:07:31.955 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.usuario
2025-06-08 21:07:31.955 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property usuario
2025-06-08 21:07:31.956 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:07:31.957 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:07:31.958 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Factura
2025-06-08 21:07:31.959 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Factura on table factura
2025-06-08 21:07:31.960 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:07:31.964 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_factura')
2025-06-08 21:07:31.965 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:07:31.965 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:07:31.966 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idFactura with lazy=false
2025-06-08 21:07:31.967 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:idFactura]
2025-06-08 21:07:31.967 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idFactura
2025-06-08 21:07:31.968 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.id_factura
2025-06-08 21:07:31.969 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idFactura
2025-06-08 21:07:31.970 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_factura)]), idFactura, identity, , ...)
2025-06-08 21:07:31.970 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_cliente',referencedColumn='id_cliente')
2025-06-08 21:07:31.971 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:07:31.972 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cliente
2025-06-08 21:07:31.973 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='codigo')
2025-06-08 21:07:31.974 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codigo with lazy=false
2025-06-08 21:07:31.974 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:codigo]
2025-06-08 21:07:31.974 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codigo
2025-06-08 21:07:31.975 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.codigo
2025-06-08 21:07:31.976 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property codigo
2025-06-08 21:07:31.977 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:07:31.977 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:07:31.978 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:estado]
2025-06-08 21:07:31.978 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:07:31.979 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.estado
2025-06-08 21:07:31.979 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:07:31.980 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fecha_emision')
2025-06-08 21:07:31.980 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaEmision with lazy=false
2025-06-08 21:07:31.981 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:fechaEmision]
2025-06-08 21:07:31.981 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaEmision
2025-06-08 21:07:31.982 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.fecha_emision
2025-06-08 21:07:31.983 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaEmision
2025-06-08 21:07:31.984 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='igv')
2025-06-08 21:07:31.984 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property igv with lazy=false
2025-06-08 21:07:31.985 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:igv]
2025-06-08 21:07:31.986 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for igv
2025-06-08 21:07:31.987 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.igv
2025-06-08 21:07:31.987 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property igv
2025-06-08 21:07:31.988 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:07:31.989 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:07:31.990 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:07:31.990 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='subtotal')
2025-06-08 21:07:31.991 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property subtotal with lazy=false
2025-06-08 21:07:31.992 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:subtotal]
2025-06-08 21:07:31.992 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for subtotal
2025-06-08 21:07:31.992 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.subtotal
2025-06-08 21:07:31.993 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property subtotal
2025-06-08 21:07:31.993 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:07:31.994 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:07:31.994 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:total]
2025-06-08 21:07:31.994 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:07:31.995 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.total
2025-06-08 21:07:31.995 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:07:31.997 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:07:32.002 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:07:32.003 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Menu
2025-06-08 21:07:32.004 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Menu on table menu
2025-06-08 21:07:32.004 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:07:32.007 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_menu')
2025-06-08 21:07:32.008 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:07:32.008 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:07:32.008 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idMenu with lazy=false
2025-06-08 21:07:32.009 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Menu:idMenu]
2025-06-08 21:07:32.009 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idMenu
2025-06-08 21:07:32.010 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: menu.id_menu
2025-06-08 21:07:32.010 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idMenu
2025-06-08 21:07:32.011 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_menu)]), idMenu, identity, , ...)
2025-06-08 21:07:32.011 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cod_pedido')
2025-06-08 21:07:32.011 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codPedido with lazy=false
2025-06-08 21:07:32.012 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Menu:codPedido]
2025-06-08 21:07:32.012 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codPedido
2025-06-08 21:07:32.012 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: menu.cod_pedido
2025-06-08 21:07:32.012 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property codPedido
2025-06-08 21:07:32.013 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:07:32.013 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:07:32.013 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:07:32.014 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_producto',referencedColumn='id_producto')
2025-06-08 21:07:32.015 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:07:32.015 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property producto
2025-06-08 21:07:32.016 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:07:32.017 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:07:32.018 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Mesa
2025-06-08 21:07:32.019 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Mesa on table mesa
2025-06-08 21:07:32.019 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:07:32.022 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_mesa')
2025-06-08 21:07:32.022 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:07:32.022 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:07:32.023 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idMesa with lazy=false
2025-06-08 21:07:32.023 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:idMesa]
2025-06-08 21:07:32.023 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idMesa
2025-06-08 21:07:32.024 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.id_mesa
2025-06-08 21:07:32.024 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idMesa
2025-06-08 21:07:32.025 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_mesa)]), idMesa, identity, , ...)
2025-06-08 21:07:32.025 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='capacidad')
2025-06-08 21:07:32.026 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property capacidad with lazy=false
2025-06-08 21:07:32.026 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:capacidad]
2025-06-08 21:07:32.026 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for capacidad
2025-06-08 21:07:32.026 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.capacidad
2025-06-08 21:07:32.026 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property capacidad
2025-06-08 21:07:32.027 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='detalle')
2025-06-08 21:07:32.027 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property detalle with lazy=false
2025-06-08 21:07:32.027 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:detalle]
2025-06-08 21:07:32.027 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for detalle
2025-06-08 21:07:32.027 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.detalle
2025-06-08 21:07:32.027 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property detalle
2025-06-08 21:07:32.028 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:07:32.028 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:07:32.029 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:estado]
2025-06-08 21:07:32.029 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:07:32.029 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.estado
2025-06-08 21:07:32.030 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:07:32.031 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='numero')
2025-06-08 21:07:32.031 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property numero with lazy=false
2025-06-08 21:07:32.031 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:numero]
2025-06-08 21:07:32.031 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for numero
2025-06-08 21:07:32.032 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.numero
2025-06-08 21:07:32.032 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property numero
2025-06-08 21:07:32.033 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:07:32.034 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:07:32.035 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Pedido
2025-06-08 21:07:32.036 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Pedido on table pedido
2025-06-08 21:07:32.036 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:07:32.039 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_pedido')
2025-06-08 21:07:32.039 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:07:32.040 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:07:32.040 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idPedido with lazy=false
2025-06-08 21:07:32.040 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:idPedido]
2025-06-08 21:07:32.040 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idPedido
2025-06-08 21:07:32.040 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.id_pedido
2025-06-08 21:07:32.041 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idPedido
2025-06-08 21:07:32.041 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_pedido)]), idPedido, identity, , ...)
2025-06-08 21:07:32.041 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cant_pedidos')
2025-06-08 21:07:32.042 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantPedidos with lazy=false
2025-06-08 21:07:32.042 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:cantPedidos]
2025-06-08 21:07:32.042 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantPedidos
2025-06-08 21:07:32.043 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.cant_pedidos
2025-06-08 21:07:32.043 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantPedidos
2025-06-08 21:07:32.043 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_cliente',referencedColumn='id_cliente')
2025-06-08 21:07:32.044 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:07:32.044 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cliente
2025-06-08 21:07:32.044 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_empleado',referencedColumn='id_empleado')
2025-06-08 21:07:32.045 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:07:32.045 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property empleado
2025-06-08 21:07:32.046 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:07:32.046 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:07:32.046 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:estado]
2025-06-08 21:07:32.046 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:07:32.047 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.estado
2025-06-08 21:07:32.047 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:07:32.047 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fecha_hora')
2025-06-08 21:07:32.048 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaHora with lazy=false
2025-06-08 21:07:32.048 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:fechaHora]
2025-06-08 21:07:32.048 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaHora
2025-06-08 21:07:32.048 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.fecha_hora
2025-06-08 21:07:32.048 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaHora
2025-06-08 21:07:32.049 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_mesa',referencedColumn='id_mesa')
2025-06-08 21:07:32.049 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:07:32.050 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property mesa
2025-06-08 21:07:32.051 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:07:32.052 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:07:32.052 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:total]
2025-06-08 21:07:32.053 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:07:32.053 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.total
2025-06-08 21:07:32.053 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:07:32.054 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:07:32.055 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:07:32.055 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Producto
2025-06-08 21:07:32.055 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Producto on table producto
2025-06-08 21:07:32.056 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:07:32.057 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_producto')
2025-06-08 21:07:32.058 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:07:32.058 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:07:32.059 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idProducto with lazy=false
2025-06-08 21:07:32.059 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:idProducto]
2025-06-08 21:07:32.059 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idProducto
2025-06-08 21:07:32.059 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.id_producto
2025-06-08 21:07:32.060 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idProducto
2025-06-08 21:07:32.060 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_producto)]), idProducto, identity, , ...)
2025-06-08 21:07:32.060 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_categoria',referencedColumn='id_categoria')
2025-06-08 21:07:32.060 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:07:32.060 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property categoria
2025-06-08 21:07:32.061 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='descripcion')
2025-06-08 21:07:32.061 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property descripcion with lazy=false
2025-06-08 21:07:32.061 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:descripcion]
2025-06-08 21:07:32.062 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for descripcion
2025-06-08 21:07:32.062 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.descripcion
2025-06-08 21:07:32.062 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property descripcion
2025-06-08 21:07:32.063 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:07:32.063 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:07:32.063 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:estado]
2025-06-08 21:07:32.063 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:07:32.063 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.estado
2025-06-08 21:07:32.064 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:07:32.064 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:07:32.065 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:07:32.065 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:nombre]
2025-06-08 21:07:32.065 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:07:32.066 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.nombre
2025-06-08 21:07:32.066 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:07:32.067 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio')
2025-06-08 21:07:32.068 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precio with lazy=false
2025-06-08 21:07:32.068 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:precio]
2025-06-08 21:07:32.068 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precio
2025-06-08 21:07:32.069 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.precio
2025-06-08 21:07:32.069 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property precio
2025-06-08 21:07:32.069 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_seccion',referencedColumn='id_seccion')
2025-06-08 21:07:32.070 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:07:32.070 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property seccion
2025-06-08 21:07:32.071 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='stock')
2025-06-08 21:07:32.071 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property stock with lazy=false
2025-06-08 21:07:32.071 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:stock]
2025-06-08 21:07:32.072 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for stock
2025-06-08 21:07:32.072 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.stock
2025-06-08 21:07:32.072 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property stock
2025-06-08 21:07:32.073 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:07:32.074 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:07:32.075 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Seccion
2025-06-08 21:07:32.075 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Seccion on table seccion
2025-06-08 21:07:32.076 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:07:32.078 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_seccion')
2025-06-08 21:07:32.079 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:07:32.079 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:07:32.079 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idSeccion with lazy=false
2025-06-08 21:07:32.080 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:idSeccion]
2025-06-08 21:07:32.080 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idSeccion
2025-06-08 21:07:32.080 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.id_seccion
2025-06-08 21:07:32.081 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idSeccion
2025-06-08 21:07:32.081 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_seccion)]), idSeccion, identity, , ...)
2025-06-08 21:07:32.082 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='detalle')
2025-06-08 21:07:32.083 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property detalle with lazy=false
2025-06-08 21:07:32.083 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:detalle]
2025-06-08 21:07:32.084 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for detalle
2025-06-08 21:07:32.085 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.detalle
2025-06-08 21:07:32.086 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property detalle
2025-06-08 21:07:32.087 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:07:32.087 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:07:32.087 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:estado]
2025-06-08 21:07:32.088 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:07:32.088 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.estado
2025-06-08 21:07:32.088 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:07:32.089 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:07:32.091 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idCategoria
2025-06-08 21:07:32.093 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:07:32.094 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:07:32.094 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idCliente
2025-06-08 21:07:32.095 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apellido
2025-06-08 21:07:32.095 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantVisitas
2025-06-08 21:07:32.096 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for dni
2025-06-08 21:07:32.096 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-06-08 21:07:32.097 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:07:32.097 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:07:32.097 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for telefono
2025-06-08 21:07:32.098 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idDetallePedido
2025-06-08 21:07:32.098 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantidad
2025-06-08 21:07:32.099 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:07:32.100 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for igv
2025-06-08 21:07:32.101 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precioUnitario
2025-06-08 21:07:32.102 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for subtotal
2025-06-08 21:07:32.102 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:07:32.103 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idEmpleado
2025-06-08 21:07:32.103 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:07:32.104 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:07:32.104 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-06-08 21:07:32.104 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for rol
2025-06-08 21:07:32.105 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for usuario
2025-06-08 21:07:32.105 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idFactura
2025-06-08 21:07:32.106 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codigo
2025-06-08 21:07:32.106 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:07:32.106 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaEmision
2025-06-08 21:07:32.107 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for igv
2025-06-08 21:07:32.107 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for subtotal
2025-06-08 21:07:32.107 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:07:32.107 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idMenu
2025-06-08 21:07:32.108 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codPedido
2025-06-08 21:07:32.108 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idMesa
2025-06-08 21:07:32.108 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for capacidad
2025-06-08 21:07:32.109 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for detalle
2025-06-08 21:07:32.109 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:07:32.109 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for numero
2025-06-08 21:07:32.110 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idPedido
2025-06-08 21:07:32.110 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantPedidos
2025-06-08 21:07:32.110 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:07:32.111 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaHora
2025-06-08 21:07:32.111 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:07:32.112 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idProducto
2025-06-08 21:07:32.112 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for descripcion
2025-06-08 21:07:32.112 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:07:32.112 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:07:32.113 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precio
2025-06-08 21:07:32.113 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for stock
2025-06-08 21:07:32.114 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idSeccion
2025-06-08 21:07:32.114 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for detalle
2025-06-08 21:07:32.115 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:07:32.127 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_categoria] to be non-null as it is part of the primary key for table [categoria]
2025-06-08 21:07:32.128 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_cliente] to be non-null as it is part of the primary key for table [cliente]
2025-06-08 21:07:32.128 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_detalle_pedido] to be non-null as it is part of the primary key for table [detalle_pedido]
2025-06-08 21:07:32.129 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_empleado] to be non-null as it is part of the primary key for table [empleado]
2025-06-08 21:07:32.129 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_factura] to be non-null as it is part of the primary key for table [factura]
2025-06-08 21:07:32.129 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_menu] to be non-null as it is part of the primary key for table [menu]
2025-06-08 21:07:32.130 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_mesa] to be non-null as it is part of the primary key for table [mesa]
2025-06-08 21:07:32.130 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_pedido] to be non-null as it is part of the primary key for table [pedido]
2025-06-08 21:07:32.130 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_producto] to be non-null as it is part of the primary key for table [producto]
2025-06-08 21:07:32.131 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_seccion] to be non-null as it is part of the primary key for table [seccion]
2025-06-08 21:07:32.438 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2025-06-08 21:07:32.477 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:07:32.478 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=23, javafx.runtime.version=21.0.1+6, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@1b08143a, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.community.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant\target\classes;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter\3.5.0\spring-boot-starter-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot\3.5.0\spring-boot-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-context\6.2.7\spring-context-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-expression\6.2.7\spring-expression-6.2.7.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-observation\1.15.0\micrometer-observation-1.15.0.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-commons\1.15.0\micrometer-commons-1.15.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.5.0\spring-boot-autoconfigure-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.5.0\spring-boot-starter-logging-3.5.0.jar;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\USUARIO\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-core\6.2.7\spring-core-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jcl\6.2.7\spring-jcl-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\yaml\snakeyaml\2.4\snakeyaml-2.4.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.5.0\spring-boot-starter-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.5.0\spring-boot-starter-jdbc-3.5.0.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jdbc\6.2.7\spring-jdbc-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-core\6.6.15.Final\hibernate-core-6.6.15.Final.jar;C:\Users\USUARIO\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\USUARIO\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\USUARIO\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\USUARIO\.m2\repository\net\bytebuddy\byte-buddy\1.17.5\byte-buddy-1.17.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\USUARIO\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\USUARIO\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-jpa\3.5.0\spring-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-commons\3.5.0\spring-data-commons-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-orm\6.2.7\spring-orm-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aop\6.2.7\spring-aop-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-tx\6.2.7\spring-tx-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-beans\6.2.7\spring-beans-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aspects\6.2.7\spring-aspects-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\USUARIO\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\USUARIO\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-community-dialects\6.4.4.Final\hibernate-community-dialects-6.4.4.Final.jar;C:\Users\USUARIO\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\USUARIO\.m2\repository\org\xerial\sqlite-jdbc\3.46.0.0\sqlite-jdbc-3.46.0.0.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\USUARIO\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.0\jackson-annotations-2.17.0.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.2.Final\hibernate-validator-7.0.2.Final.jar;C:\Users\USUARIO\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-fxml\21.0.1\javafx-fxml-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-fxml\21.0.1\javafx-fxml-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-swing\21.0.1\javafx-swing-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-swing\21.0.1\javafx-swing-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\bootstrapfx\bootstrapfx-core\0.2.4\bootstrapfx-core-0.2.4.jar;C:\Users\USUARIO\.m2\repository\io\github\mkpaz\atlantafx-base\2.0.0\atlantafx-base-2.0.0.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-javafx\12.3.1\ikonli-javafx-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-core\12.3.1\ikonli-core-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-fontawesome5-pack\12.3.1\ikonli-fontawesome5-pack-12.3.1.jar;C:\Users\USUARIO\.m2\repository\net\sf\jasperreports\jasperreports\6.20.0\jasperreports-6.20.0.jar;C:\Users\USUARIO\.m2\repository\commons-beanutils\commons-beanutils\1.9.4\commons-beanutils-1.9.4.jar;C:\Users\USUARIO\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\USUARIO\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\USUARIO\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-collections4\4.2\commons-collections4-4.2.jar;C:\Users\USUARIO\.m2\repository\com\lowagie\itext\2.1.7.js10\itext-2.1.7.js10.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcprov-jdk15on\1.70\bcprov-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcutil-jdk15on\1.70\bcutil-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jcommon\1.0.23\jcommon-1.0.23.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jfreechart\1.0.19\jfreechart-1.0.19.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\jdt\ecj\3.21.0\ecj-3.21.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.19.0\jackson-core-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.19.0\jackson-databind-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-xml\2.19.0\jackson-dataformat-xml-2.19.0.jar;C:\Users\USUARIO\.m2\repository\org\codehaus\woodstox\stax2-api\4.2.2\stax2-api-4.2.2.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\woodstox\woodstox-core\7.1.0\woodstox-core-7.1.0.jar;C:\Users\USUARIO\.m2\repository\win\zqxu\jrviewer-fx\0.1.1\jrviewer-fx-0.1.1.jar;C:\Users\USUARIO\.m2\repository\jakarta\el\jakarta.el-api\4.0.0\jakarta.el-api-4.0.0.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jakarta.el\4.0.2\jakarta.el-4.0.2.jar;C:\Users\USUARIO\.m2\repository\com\miglayout\miglayout\3.7.4\miglayout-3.7.4.jar;C:\Users\USUARIO\.m2\repository\org\apache\groovy\groovy\4.0.6\groovy-4.0.6.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml\5.2.3\poi-ooxml-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi\5.2.3\poi-5.2.3.jar;C:\Users\USUARIO\.m2\repository\commons-codec\commons-codec\1.18.0\commons-codec-1.18.0.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-math3\3.6.1\commons-math3-3.6.1.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\SparseBitSet\1.2\SparseBitSet-1.2.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml-lite\5.2.3\poi-ooxml-lite-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\xmlbeans\xmlbeans\5.1.1\xmlbeans-5.1.1.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-compress\1.21\commons-compress-1.21.jar;C:\Users\USUARIO\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\USUARIO\.m2\repository\com\github\virtuald\curvesapi\1.07\curvesapi-1.07.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar, LOGBACK_ROLLINGPOLICY_MAX_FILE_SIZE=10485760, java.vm.vendor=Oracle Corporation, LOG_PATH=logs/, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Bogota, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, javafx.version=21.0.1, os.name=Windows 11, java.vm.specification.version=23, APPLICATION_NAME=ProyectoRestaurant, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=MX, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk-23\bin, sun.java.command=pe.edu.upeu.proyecto_restaurant.AppRestaurant, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.use_sql_comments=true, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@150e61ec, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\USUARIO, user.language=es, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-23, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7-58, user.name=USUARIO, stdout.encoding=cp850, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, FILE_LOG_PATTERN=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, LOG_FILE=logs/restaurant.log, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\USUARIO\AppData\Local\Temp\, java.version=23.0.2, LOGBACK_ROLLINGPOLICY_CLEAN_HISTORY_ON_START=false, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=11028, sun.os.patch.level=, CONSOLE_LOG_CHARSET=IBM850, LOGBACK_ROLLINGPOLICY_MAX_HISTORY=30, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@60c6ce8d, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-23\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;c:\Users\USUARIO\AppData\Local\Programs\cursor\resources\app\bin;C:\Users\USUARIO\AppData\Local\Programs\Python\Python313\Scripts\;C:\Users\USUARIO\AppData\Local\Programs\Python\Launcher\;C:\Users\USUARIO\AppData\Local\Microsoft\WindowsApps;C:\Users\USUARIO\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\USUARIO\AppData\Roaming\npm;C:\flutter\bin;C:\Users\USUARIO\AppData\Local\Programs\Python\Python313\;C:\ffpmg\bin;C:\Users\USUARIO\Downloads\apache-maven-3.9.9\bin;C:\Users\USUARIO\AppData\Local\GitHubDesktop\bin;C:\Users\USUARIO\AppData\Local\Microsoft\WinGet\Packages\Schniz.fnm_Microsoft.Winget.Source_8wekyb3d8bbwe;C:\Users\USUARIO\AppData\Local\Programs\cursor\resources\app\bin;., stderr.encoding=cp850, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=23.0.2+7-58, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), CONSOLE_LOG_PATTERN=%d{HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{36}) - %msg%n, java.class.version=67.0, LOGGED_APPLICATION_NAME=[ProyectoRestaurant] , LOGBACK_ROLLINGPOLICY_TOTAL_SIZE_CAP=104857600}
2025-06-08 21:07:32.482 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-06-08 21:07:32.489 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:07:32.489 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:07:32.490 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:07:32.490 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:07:32.491 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:07:32.491 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:07:32.492 [JavaFX-Launcher] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:07:32.493 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:07:32.494 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:07:32.495 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:07:32.495 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:07:32.495 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:07:32.495 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:07:32.496 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:07:32.497 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:07:32.537 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:07:32.537 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:07:32.542 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:07:32.542 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:07:32.546 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:07:32.546 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:07:32.551 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:07:32.552 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:07:32.555 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:07:32.556 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:07:32.563 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:07:32.563 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:07:32.567 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:07:32.568 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:07:32.571 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:07:32.572 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:07:32.574 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:07:32.574 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:07:32.577 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:07:32.615 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-06-08 21:07:32.615 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-06-08 21:07:32.617 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-06-08 21:07:32.618 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-06-08 21:07:32.620 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@e62e5e9] under count; prior registration was null
2025-06-08 21:07:32.623 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@dc5a8aa] under every; prior registration was null
2025-06-08 21:07:32.624 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@53ccfe97] under any; prior registration was null
2025-06-08 21:07:32.624 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-06-08 21:07:32.624 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-06-08 21:07:32.625 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-06-08 21:07:32.625 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-06-08 21:07:32.625 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-06-08 21:07:32.625 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-06-08 21:07:32.625 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-06-08 21:07:32.626 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-06-08 21:07:32.626 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-06-08 21:07:32.626 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-06-08 21:07:32.627 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-06-08 21:07:32.627 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-06-08 21:07:32.627 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-06-08 21:07:32.627 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-06-08 21:07:32.627 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-06-08 21:07:32.627 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-06-08 21:07:32.627 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-06-08 21:07:32.629 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3cb20ec4] under sinh; prior registration was null
2025-06-08 21:07:32.630 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1584fd36] under cosh; prior registration was null
2025-06-08 21:07:32.630 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ebc3ddf] under tanh; prior registration was null
2025-06-08 21:07:32.631 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@175f9e85] under pi; prior registration was null
2025-06-08 21:07:32.631 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b376684] under log; prior registration was null
2025-06-08 21:07:32.632 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-06-08 21:07:32.632 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-06-08 21:07:32.632 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-06-08 21:07:32.633 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-06-08 21:07:32.633 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-06-08 21:07:32.634 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-06-08 21:07:32.634 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-06-08 21:07:32.635 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-06-08 21:07:32.635 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-06-08 21:07:32.635 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-06-08 21:07:32.636 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-06-08 21:07:32.637 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-06-08 21:07:32.638 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@7f72e57e] under position; prior registration was null
2025-06-08 21:07:32.640 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@101e87c2] under overlay; prior registration was null
2025-06-08 21:07:32.641 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@76d7c651] under trim; prior registration was null
2025-06-08 21:07:32.643 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@248e0382] under cast; prior registration was null
2025-06-08 21:07:32.643 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@17e37e99] under collate; prior registration was null
2025-06-08 21:07:32.644 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@9106c24] under extract; prior registration was null
2025-06-08 21:07:32.644 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-06-08 21:07:32.644 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-06-08 21:07:32.645 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3caad099] under ifnull; prior registration was null
2025-06-08 21:07:32.645 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-06-08 21:07:32.645 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-06-08 21:07:32.646 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@619f3d77] under pad; prior registration was null
2025-06-08 21:07:32.647 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@43f0dbc3] under str; prior registration was null
2025-06-08 21:07:32.649 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@76849744] under format; prior registration was null
2025-06-08 21:07:32.650 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6412db6c] under timestampadd; prior registration was null
2025-06-08 21:07:32.652 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@343755f3] under timestampdiff; prior registration was null
2025-06-08 21:07:32.653 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-06-08 21:07:32.653 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-06-08 21:07:32.654 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5d1e17bc] under current_date; prior registration was null
2025-06-08 21:07:32.654 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49d87eb2] under current_time; prior registration was null
2025-06-08 21:07:32.654 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49cebb28] under current_timestamp; prior registration was null
2025-06-08 21:07:32.655 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-06-08 21:07:32.655 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-06-08 21:07:32.655 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-06-08 21:07:32.655 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5810ad32] under local_date; prior registration was null
2025-06-08 21:07:32.655 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@751ef27b] under local_time; prior registration was null
2025-06-08 21:07:32.655 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7f392f84] under local_datetime; prior registration was null
2025-06-08 21:07:32.655 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4312dcb0] under offset_datetime; prior registration was null
2025-06-08 21:07:32.656 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-06-08 21:07:32.656 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-06-08 21:07:32.656 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-06-08 21:07:32.656 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-06-08 21:07:32.656 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1eb680dd] under instant; prior registration was null
2025-06-08 21:07:32.656 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-06-08 21:07:32.657 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@55f214bb] under sql; prior registration was null
2025-06-08 21:07:32.657 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ce1ab] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-06-08 21:07:32.657 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@79651c27] under left; prior registration was NamedSqmFunctionTemplate(left)
2025-06-08 21:07:32.657 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40abbfa3] under right; prior registration was NamedSqmFunctionTemplate(right)
2025-06-08 21:07:32.658 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b92cc1] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-06-08 21:07:32.658 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(length)] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-06-08 21:07:32.658 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-06-08 21:07:32.658 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under least; prior registration was NamedSqmFunctionTemplate(least)
2025-06-08 21:07:32.658 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under greatest; prior registration was NamedSqmFunctionTemplate(greatest)
2025-06-08 21:07:32.659 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-06-08 21:07:32.659 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-06-08 21:07:32.661 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@468a4141] under trunc; prior registration was null
2025-06-08 21:07:32.661 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-06-08 21:07:32.662 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b376684
2025-06-08 21:07:32.662 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-06-08 21:07:32.662 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-06-08 21:07:32.662 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-06-08 21:07:32.663 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-06-08 21:07:32.663 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2025-06-08 21:07:32.663 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : chr -> char
2025-06-08 21:07:32.664 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@52061e04] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-06-08 21:07:32.664 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1755a640] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2025-06-08 21:07:32.665 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@17913a3c] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2025-06-08 21:07:32.665 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(strftime)] under format; prior registration was org.hibernate.dialect.function.FormatFunction@76849744
2025-06-08 21:07:32.665 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-06-08 21:07:32.666 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-06-08 21:07:32.666 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-06-08 21:07:32.666 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-06-08 21:07:32.667 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-06-08 21:07:32.667 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-06-08 21:07:32.669 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@29e284a0] under listagg; prior registration was null
2025-06-08 21:07:32.671 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg)
2025-06-08 21:07:32.672 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-06-08 21:07:32.672 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2025-06-08 21:07:32.673 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-06-08 21:07:32.673 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-06-08 21:07:32.673 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-06-08 21:07:32.674 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg)
2025-06-08 21:07:32.674 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type)
2025-06-08 21:07:32.674 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-06-08 21:07:32.674 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg)
2025-06-08 21:07:32.674 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-06-08 21:07:32.675 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-06-08 21:07:32.675 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-06-08 21:07:32.675 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-06-08 21:07:32.675 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2025-06-08 21:07:32.675 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-06-08 21:07:32.675 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-06-08 21:07:32.676 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-06-08 21:07:32.676 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date
2025-06-08 21:07:32.676 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time
2025-06-08 21:07:32.676 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp
2025-06-08 21:07:32.676 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date
2025-06-08 21:07:32.676 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant
2025-06-08 21:07:32.677 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time
2025-06-08 21:07:32.677 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp
2025-06-08 21:07:32.677 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-06-08 21:07:32.677 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-06-08 21:07:32.678 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-06-08 21:07:32.678 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2025-06-08 21:07:32.679 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-06-08 21:07:32.679 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-06-08 21:07:32.679 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value
2025-06-08 21:07:32.680 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg)
2025-06-08 21:07:32.680 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-06-08 21:07:32.680 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-06-08 21:07:32.680 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-06-08 21:07:32.680 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant
2025-06-08 21:07:32.680 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-06-08 21:07:32.681 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value
2025-06-08 21:07:32.681 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-06-08 21:07:32.681 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-06-08 21:07:32.681 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-06-08 21:07:32.681 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-06-08 21:07:32.681 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-06-08 21:07:32.682 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-06-08 21:07:32.682 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date
2025-06-08 21:07:32.682 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime
2025-06-08 21:07:32.683 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time
2025-06-08 21:07:32.683 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date
2025-06-08 21:07:32.683 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime
2025-06-08 21:07:32.684 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time
2025-06-08 21:07:32.684 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(pattern, string[, start])
2025-06-08 21:07:32.684 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-06-08 21:07:32.685 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string)
2025-06-08 21:07:32.685 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding])
2025-06-08 21:07:32.686 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-06-08 21:07:32.686 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg)
2025-06-08 21:07:32.687 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg)
2025-06-08 21:07:32.687 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-06-08 21:07:32.688 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-06-08 21:07:32.688 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1)
2025-06-08 21:07:32.688 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-06-08 21:07:32.688 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-06-08 21:07:32.688 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2025-06-08 21:07:32.689 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-06-08 21:07:32.689 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi
2025-06-08 21:07:32.689 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-06-08 21:07:32.689 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-06-08 21:07:32.689 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-06-08 21:07:32.689 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-06-08 21:07:32.690 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-06-08 21:07:32.690 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-06-08 21:07:32.690 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number()
2025-06-08 21:07:32.690 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding])
2025-06-08 21:07:32.690 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-06-08 21:07:32.690 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-06-08 21:07:32.690 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-06-08 21:07:32.690 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-06-08 21:07:32.691 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql
2025-06-08 21:07:32.691 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-06-08 21:07:32.691 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg)
2025-06-08 21:07:32.691 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-06-08 21:07:32.691 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-06-08 21:07:32.691 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg)
2025-06-08 21:07:32.691 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-06-08 21:07:32.692 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-06-08 21:07:32.692 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-06-08 21:07:32.692 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-06-08 21:07:32.692 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-06-08 21:07:32.692 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... )
2025-06-08 21:07:32.692 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... )
2025-06-08 21:07:32.692 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string)
2025-06-08 21:07:32.699 [JavaFX-Launcher] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048)
2025-06-08 21:07:32.767 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:07:32.769 [JavaFX-Launcher] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-06-08 21:07:32.840 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:32.845 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:32.852 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:32.853 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:32.853 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:07:32.853 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:07:33.017 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Factura]: private accessor [cliente]
2025-06-08 21:07:33.021 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.021 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.046 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:07:33.047 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:07:33.068 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Empleado]: private accessor [estado]
2025-06-08 21:07:33.070 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:07:33.070 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:07:33.085 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Seccion]: private accessor [detalle]
2025-06-08 21:07:33.087 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:07:33.088 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:07:33.111 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Cliente]: private accessor [apellido]
2025-06-08 21:07:33.112 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.113 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.113 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.113 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.114 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:07:33.114 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:07:33.128 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Menu]: private accessor [codPedido]
2025-06-08 21:07:33.128 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.129 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.130 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.131 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.131 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.131 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.131 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.131 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.131 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:07:33.131 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:07:33.148 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido]: private accessor [cantidad]
2025-06-08 21:07:33.148 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.149 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.150 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.151 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.151 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.152 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.152 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.152 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:07:33.153 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:07:33.167 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Producto]: private accessor [categoria]
2025-06-08 21:07:33.168 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.169 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.171 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:07:33.171 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:07:33.180 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Categoria]: private accessor [estado]
2025-06-08 21:07:33.181 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:07:33.182 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:07:33.195 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Mesa]: private accessor [capacidad]
2025-06-08 21:07:33.209 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.210 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.210 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.211 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.211 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.211 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.212 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:07:33.212 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:07:33.226 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Pedido]: private accessor [cantPedidos]
2025-06-08 21:07:33.227 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.227 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.228 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:07:33.256 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks
2025-06-08 21:07:33.257 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente]
2025-06-08 21:07:33.262 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido]
2025-06-08 21:07:33.263 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Factura) `staticFetchableList` generator
2025-06-08 21:07:33.264 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Empleado) `staticFetchableList` generator
2025-06-08 21:07:33.264 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Seccion) `staticFetchableList` generator
2025-06-08 21:07:33.264 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Cliente) `staticFetchableList` generator
2025-06-08 21:07:33.264 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido]
2025-06-08 21:07:33.265 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto]
2025-06-08 21:07:33.265 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Menu) `staticFetchableList` generator
2025-06-08 21:07:33.266 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura]
2025-06-08 21:07:33.266 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido]
2025-06-08 21:07:33.267 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto]
2025-06-08 21:07:33.267 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.DetPedido) `staticFetchableList` generator
2025-06-08 21:07:33.267 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria]
2025-06-08 21:07:33.268 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion]
2025-06-08 21:07:33.269 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Producto) `staticFetchableList` generator
2025-06-08 21:07:33.269 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Categoria) `staticFetchableList` generator
2025-06-08 21:07:33.270 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Mesa) `staticFetchableList` generator
2025-06-08 21:07:33.270 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente]
2025-06-08 21:07:33.270 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado]
2025-06-08 21:07:33.271 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa]
2025-06-08 21:07:33.271 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Pedido) `staticFetchableList` generator
2025-06-08 21:07:33.354 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2025-06-08 21:07:33.358 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Factura)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura] 
2025-06-08 21:07:33.371 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@47645714] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente] 
2025-06-08 21:07:33.374 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:07:33.379 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@304f9ab5] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido] 
2025-06-08 21:07:33.379 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:07:33.380 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@8ea90cf] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente] 
2025-06-08 21:07:33.381 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:07:33.381 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@14406006] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado] 
2025-06-08 21:07:33.382 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:07:33.383 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3e3f6c8f] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa] 
2025-06-08 21:07:33.383 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:07:33.391 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.cantVisitas]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.email]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.nombre]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.telefono]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.codigo]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.fechaEmision]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.igv]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.rol]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.subtotal]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.total]

2025-06-08 21:07:33.395 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (f1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura) {
          primaryTableReference : factura as f1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente) {
              primaryTableReference : cliente as c1_0
            }
            left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido) {
              primaryTableReference : pedido as p1_0
              TableGroupJoins {
                left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente) {
                  primaryTableReference : cliente as c2_0
                }
                left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado) {
                  primaryTableReference : empleado as e1_0
                }
                left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa) {
                  primaryTableReference : mesa as m1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:07:33.407 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:07:33.407 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Factura */ select id_factura from factura where id_factura=?
2025-06-08 21:07:33.408 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Factura */insert into factura (id_cliente,codigo,estado,fecha_emision,igv,id_pedido,subtotal,total) values (?,?,?,?,?,?,?,?)
2025-06-08 21:07:33.408 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Factura */update factura set id_cliente=?,codigo=?,estado=?,fecha_emision=?,igv=?,id_pedido=?,subtotal=?,total=? where id_factura=?
2025-06-08 21:07:33.408 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Factura */delete from factura where id_factura=?
2025-06-08 21:07:33.409 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:07:33.409 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:07:33.410 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.rol]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.usuario]

2025-06-08 21:07:33.410 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:07:33.411 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:07:33.411 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Empleado */ select id_empleado from empleado where id_empleado=?
2025-06-08 21:07:33.412 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */insert into empleado (estado,nombre,password,rol,usuario) values (?,?,?,?,?)
2025-06-08 21:07:33.412 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */update empleado set estado=?,nombre=?,password=?,rol=?,usuario=? where id_empleado=?
2025-06-08 21:07:33.412 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */delete from empleado where id_empleado=?
2025-06-08 21:07:33.413 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:07:33.413 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Seccion)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] 
2025-06-08 21:07:33.413 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Seccion]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion.detalle]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion.estado]

2025-06-08 21:07:33.414 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Seccion) {
          primaryTableReference : seccion as s1_0
        }
      }
    }

2025-06-08 21:07:33.414 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:07:33.414 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Seccion */ select id_seccion from seccion where id_seccion=?
2025-06-08 21:07:33.415 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */insert into seccion (detalle,estado) values (?,?)
2025-06-08 21:07:33.415 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */update seccion set detalle=?,estado=? where id_seccion=?
2025-06-08 21:07:33.415 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */delete from seccion where id_seccion=?
2025-06-08 21:07:33.416 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:07:33.416 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Cliente)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] 
2025-06-08 21:07:33.418 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Cliente]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.cantVisitas]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.email]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.nombre]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.telefono]

2025-06-08 21:07:33.419 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Cliente) {
          primaryTableReference : cliente as c1_0
        }
      }
    }

2025-06-08 21:07:33.420 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:07:33.420 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Cliente */ select id_cliente from cliente where id_cliente=?
2025-06-08 21:07:33.420 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */insert into cliente (apellido,cant_visitas,dni,email,estado,nombre,telefono) values (?,?,?,?,?,?,?)
2025-06-08 21:07:33.421 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */update cliente set apellido=?,cant_visitas=?,dni=?,email=?,estado=?,nombre=?,telefono=? where id_cliente=?
2025-06-08 21:07:33.421 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */delete from cliente where id_cliente=?
2025-06-08 21:07:33.421 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:07:33.421 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Menu)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu] 
2025-06-08 21:07:33.422 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6a7ca2b7] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido] 
2025-06-08 21:07:33.422 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:07:33.423 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@23a9ddf4] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente] 
2025-06-08 21:07:33.423 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:07:33.423 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@77dabe8] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado] 
2025-06-08 21:07:33.424 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:07:33.424 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5220adf4] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa] 
2025-06-08 21:07:33.424 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m2_0
2025-06-08 21:07:33.425 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5d46d41d] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto] 
2025-06-08 21:07:33.425 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p2_0
2025-06-08 21:07:33.426 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@30ede43c] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria] 
2025-06-08 21:07:33.426 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:07:33.427 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5aa53b22] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion] 
2025-06-08 21:07:33.427 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:07:33.428 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.codPedido]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.rol]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.total]
 |  \-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.descripcion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.precio]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion.detalle]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.stock]

2025-06-08 21:07:33.429 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu) {
          primaryTableReference : menu as m1_0
          TableGroupJoins {
            left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido) {
              primaryTableReference : pedido as p1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente) {
                  primaryTableReference : cliente as c1_0
                }
                left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado) {
                  primaryTableReference : empleado as e1_0
                }
                left  join LazyTableGroup (m2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa) {
                  primaryTableReference : mesa as m2_0
                }
              }
            }
            left  join LazyTableGroup (p2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto) {
              primaryTableReference : producto as p2_0
              TableGroupJoins {
                left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria) {
                  primaryTableReference : categoria as c2_0
                }
                left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion) {
                  primaryTableReference : seccion as s1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:07:33.430 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:07:33.430 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Menu */ select id_menu from menu where id_menu=?
2025-06-08 21:07:33.430 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Menu */insert into menu (cod_pedido,id_pedido,id_producto) values (?,?,?)
2025-06-08 21:07:33.430 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Menu */update menu set cod_pedido=?,id_pedido=?,id_producto=? where id_menu=?
2025-06-08 21:07:33.430 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Menu */delete from menu where id_menu=?
2025-06-08 21:07:33.431 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : dp1_0
2025-06-08 21:07:33.431 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.DetPedido)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] 
2025-06-08 21:07:33.432 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6630a919] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura] 
2025-06-08 21:07:33.433 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2025-06-08 21:07:33.434 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@39237de7] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente] 
2025-06-08 21:07:33.434 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:07:33.436 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4aac2dca] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido] 
2025-06-08 21:07:33.437 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:07:33.438 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2c63870a] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente] 
2025-06-08 21:07:33.438 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:07:33.439 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4f788bfe] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado] 
2025-06-08 21:07:33.439 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:07:33.445 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6d961bb3] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa] 
2025-06-08 21:07:33.445 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:07:33.446 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@46ffb9b6] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido] 
2025-06-08 21:07:33.448 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p2_0
2025-06-08 21:07:33.449 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@72f0c916] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente] 
2025-06-08 21:07:33.450 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c3_0
2025-06-08 21:07:33.450 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@274822a4] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado] 
2025-06-08 21:07:33.451 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e2_0
2025-06-08 21:07:33.452 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@f6d8e4] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa] 
2025-06-08 21:07:33.453 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m2_0
2025-06-08 21:07:33.454 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3f83d81] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto] 
2025-06-08 21:07:33.454 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p3_0
2025-06-08 21:07:33.455 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@77b4ec91] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria] 
2025-06-08 21:07:33.455 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c4_0
2025-06-08 21:07:33.456 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@110fbdc1] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion] 
2025-06-08 21:07:33.456 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:07:33.457 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.cantidad]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.estado]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.telefono]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.codigo]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.fechaEmision]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.igv]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cantPedidos]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.apellido]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.cantVisitas]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.dni]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.email]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.estado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.nombre]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.telefono]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.estado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.nombre]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.password]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.rol]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.usuario]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.fechaHora]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.capacidad]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.detalle]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.estado]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.numero]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.total]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.subtotal]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.igv]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.rol]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.precioUnitario]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.descripcion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.precio]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion.detalle]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.stock]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.subtotal]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.total]

2025-06-08 21:07:33.459 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (dp1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido) {
          primaryTableReference : detalle_pedido as dp1_0
          TableGroupJoins {
            left  join LazyTableGroup (f1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura) {
              primaryTableReference : factura as f1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente) {
                  primaryTableReference : cliente as c1_0
                }
                left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido) {
                  primaryTableReference : pedido as p1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente) {
                      primaryTableReference : cliente as c2_0
                    }
                    left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado) {
                      primaryTableReference : empleado as e1_0
                    }
                    left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa) {
                      primaryTableReference : mesa as m1_0
                    }
                  }
                }
              }
            }
             join LazyTableGroup (p2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido) {
              primaryTableReference : pedido as p2_0
              TableGroupJoins {
                left  join LazyTableGroup (c3 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente) {
                  primaryTableReference : cliente as c3_0
                }
                left  join LazyTableGroup (e2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado) {
                  primaryTableReference : empleado as e2_0
                }
                left  join LazyTableGroup (m2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa) {
                  primaryTableReference : mesa as m2_0
                }
              }
            }
             join LazyTableGroup (p3 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto) {
              primaryTableReference : producto as p3_0
              TableGroupJoins {
                left  join LazyTableGroup (c4 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria) {
                  primaryTableReference : categoria as c4_0
                }
                left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion) {
                  primaryTableReference : seccion as s1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:07:33.460 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:07:33.460 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */ select id_detalle_pedido from detalle_pedido where id_detalle_pedido=?
2025-06-08 21:07:33.461 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */insert into detalle_pedido (cantidad,estado,id_factura,igv,id_pedido,precio_unitario,id_producto,subtotal,total) values (?,?,?,?,?,?,?,?,?)
2025-06-08 21:07:33.461 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */update detalle_pedido set cantidad=?,estado=?,id_factura=?,igv=?,id_pedido=?,precio_unitario=?,id_producto=?,subtotal=?,total=? where id_detalle_pedido=?
2025-06-08 21:07:33.461 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */delete from detalle_pedido where id_detalle_pedido=?
2025-06-08 21:07:33.461 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:07:33.462 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Producto)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto] 
2025-06-08 21:07:33.462 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@655e53a9] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria] 
2025-06-08 21:07:33.462 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:07:33.463 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@355efbf7] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion] 
2025-06-08 21:07:33.463 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:07:33.464 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.descripcion]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.precio]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion.detalle]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.stock]

2025-06-08 21:07:33.465 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto) {
          primaryTableReference : producto as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria) {
              primaryTableReference : categoria as c1_0
            }
            left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion) {
              primaryTableReference : seccion as s1_0
            }
          }
        }
      }
    }

2025-06-08 21:07:33.466 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:07:33.466 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Producto */ select id_producto from producto where id_producto=?
2025-06-08 21:07:33.466 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Producto */insert into producto (id_categoria,descripcion,estado,nombre,precio,id_seccion,stock) values (?,?,?,?,?,?,?)
2025-06-08 21:07:33.467 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Producto */update producto set id_categoria=?,descripcion=?,estado=?,nombre=?,precio=?,id_seccion=?,stock=? where id_producto=?
2025-06-08 21:07:33.467 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Producto */delete from producto where id_producto=?
2025-06-08 21:07:33.467 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:07:33.468 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Categoria)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] 
2025-06-08 21:07:33.469 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Categoria]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Categoria.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Categoria.nombre]

2025-06-08 21:07:33.470 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Categoria) {
          primaryTableReference : categoria as c1_0
        }
      }
    }

2025-06-08 21:07:33.470 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:07:33.470 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Categoria */ select id_categoria from categoria where id_categoria=?
2025-06-08 21:07:33.470 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */insert into categoria (estado,nombre) values (?,?)
2025-06-08 21:07:33.471 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */update categoria set estado=?,nombre=? where id_categoria=?
2025-06-08 21:07:33.471 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */delete from categoria where id_categoria=?
2025-06-08 21:07:33.471 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:07:33.471 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Mesa)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] 
2025-06-08 21:07:33.472 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Mesa]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.capacidad]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.detalle]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.numero]

2025-06-08 21:07:33.472 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Mesa) {
          primaryTableReference : mesa as m1_0
        }
      }
    }

2025-06-08 21:07:33.472 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:07:33.473 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Mesa */ select id_mesa from mesa where id_mesa=?
2025-06-08 21:07:33.473 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */insert into mesa (capacidad,detalle,estado,numero) values (?,?,?,?)
2025-06-08 21:07:33.473 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */update mesa set capacidad=?,detalle=?,estado=?,numero=? where id_mesa=?
2025-06-08 21:07:33.473 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */delete from mesa where id_mesa=?
2025-06-08 21:07:33.474 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:07:33.474 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Pedido)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] 
2025-06-08 21:07:33.475 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@681f1384] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente] 
2025-06-08 21:07:33.476 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:07:33.476 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2c41fd46] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado] 
2025-06-08 21:07:33.477 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:07:33.478 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@51eff07d] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa] 
2025-06-08 21:07:33.478 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:07:33.479 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cantPedidos]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.cantVisitas]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.email]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.nombre]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.telefono]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.password]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.rol]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.usuario]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.fechaHora]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.capacidad]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.detalle]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.numero]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.total]

2025-06-08 21:07:33.479 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido) {
          primaryTableReference : pedido as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente) {
              primaryTableReference : cliente as c1_0
            }
            left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado) {
              primaryTableReference : empleado as e1_0
            }
            left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa) {
              primaryTableReference : mesa as m1_0
            }
          }
        }
      }
    }

2025-06-08 21:07:33.480 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:07:33.480 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Pedido */ select id_pedido from pedido where id_pedido=?
2025-06-08 21:07:33.481 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */insert into pedido (cant_pedidos,id_cliente,id_empleado,estado,fecha_hora,id_mesa,total) values (?,?,?,?,?,?,?)
2025-06-08 21:07:33.481 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */update pedido set cant_pedidos=?,id_cliente=?,id_empleado=?,estado=?,fecha_hora=?,id_mesa=?,total=? where id_pedido=?
2025-06-08 21:07:33.481 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */delete from pedido where id_pedido=?
2025-06-08 21:07:33.511 [JavaFX-Launcher] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-08 21:07:33.512 [JavaFX-Launcher] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36e0a6ad] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2895d2c]
2025-06-08 21:07:33.515 [JavaFX-Launcher] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries
2025-06-08 21:07:33.515 [JavaFX-Launcher] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries
2025-06-08 21:07:33.565 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : categoria
2025-06-08 21:07:33.566 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : cliente
2025-06-08 21:07:33.567 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : detalle_pedido
2025-06-08 21:07:33.567 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : empleado
2025-06-08 21:07:33.568 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : factura
2025-06-08 21:07:33.569 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : menu
2025-06-08 21:07:33.569 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : mesa
2025-06-08 21:07:33.569 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : pedido
2025-06-08 21:07:33.569 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : producto
2025-06-08 21:07:33.570 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : seccion
2025-06-08 21:07:33.572 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@84a2e8f
2025-06-08 21:07:33.572 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 77e10e62-9d47-43d2-84a4-1d5576cb9d22 (<unnamed>)
2025-06-08 21:07:33.572 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-06-08 21:07:33.573 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory
2025-06-08 21:07:33.574 [JavaFX-Launcher] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-08 21:07:33.786 [JavaFX-Launcher] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2025-06-08 21:07:33.972 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy105.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:38)
	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:07:34.018 [JavaFX-Launcher] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-08 21:07:34.023 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy105.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:38)
	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:07:34.197 [JavaFX-Launcher] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:07:34.201 [JavaFX-Launcher] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-06-08 21:07:34.202 [JavaFX-Launcher] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-06-08 21:07:34.207 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:07:34.214 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-06-08 21:07:34.228 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:07:34.239 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:07:34.242 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:07:34.255 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:07:34.268 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:07:34.278 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:07:34.284 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:07:34.288 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:07:34.289 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:07:34.290 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:07:34.290 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:07:34.521 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - Started application in 6.502 seconds (process running for 7.719)
2025-06-08 21:07:34.900 [JavaFX-Launcher] INFO  p.e.u.p.ProyectoRestaurantApplication - === LISTADO DE EMPLEADOS ===
2025-06-08 21:07:34.917 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-08 21:07:34.918 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - begin
2025-06-08 21:07:35.024 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:07:35.025 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1))] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:07:35.039 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1)]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1).estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1).nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1).password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1).rol]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1).usuario]

2025-06-08 21:07:35.040 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1)) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:07:35.055 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:07:35.058 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id_empleado,
        e1_0.estado,
        e1_0.nombre,
        e1_0.password,
        e1_0.rol,
        e1_0.usuario 
    from
        empleado e1_0
2025-06-08 21:07:35.078 [JavaFX-Launcher] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1) -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1))@1153199824 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:07:35.101 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - committing
2025-06-08 21:07:35.103 [JavaFX-Launcher] INFO  p.e.u.p.service.EmpleadoService - Total empleados encontrados: 3
2025-06-08 21:07:35.105 [JavaFX-Launcher] DEBUG p.e.u.p.service.EmpleadoService - Empleado: Empleado(idEmpleado=1, nombre=admin-juan, usuario=admin, password=123, estado=activo, rol=admin)
2025-06-08 21:07:35.105 [JavaFX-Launcher] DEBUG p.e.u.p.service.EmpleadoService - Empleado: Empleado(idEmpleado=2, nombre=caj-carlos, usuario=caj, password=123, estado=activo, rol=cajero)
2025-06-08 21:07:35.106 [JavaFX-Launcher] DEBUG p.e.u.p.service.EmpleadoService - Empleado: Empleado(idEmpleado=3, nombre=jhon, usuario=cont, password=123, estado=activo, rol=contador)
2025-06-08 21:07:35.106 [JavaFX-Launcher] INFO  p.e.u.p.ProyectoRestaurantApplication - ===========================
2025-06-08 21:07:43.622 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Intentando autenticar usuario: admin
2025-06-08 21:07:43.623 [JavaFX Application Thread] INFO  p.e.u.p.service.EmpleadoService - Iniciando proceso de login para usuario: admin
2025-06-08 21:07:43.623 [JavaFX Application Thread] DEBUG p.e.u.p.service.EmpleadoService - Password length: 3
2025-06-08 21:07:43.646 [JavaFX Application Thread] DEBUG org.hibernate.orm.query.plan.cache - Creating and caching NativeQuery ParameterInterpretation - ParameterInterpretationImpl (SELECT e.* FROM empleado e WHERE e.usuario = ?) : {
    
}
2025-06-08 21:07:43.774 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:07:43.775 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    /* dynamic native SQL query */ SELECT
        e.* 
    FROM
        empleado e 
    WHERE
        e.usuario = ?
2025-06-08 21:07:43.789 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Disallowing positional selections : SELECT e.* FROM empleado e WHERE e.usuario = :usuariox
2025-06-08 21:07:43.796 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado)@1270922676 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:07:43.807 [JavaFX Application Thread] DEBUG p.e.u.p.service.EmpleadoService - Empleado encontrado: Empleado(idEmpleado=1, nombre=admin-juan, usuario=admin, password=123, estado=activo, rol=admin)
2025-06-08 21:07:43.807 [JavaFX Application Thread] INFO  p.e.u.p.service.EmpleadoService - Rol del empleado: 'admin' (sin trim)
2025-06-08 21:07:43.807 [JavaFX Application Thread] INFO  p.e.u.p.service.EmpleadoService - Rol del empleado (después de trim y toLowerCase): 'admin'
2025-06-08 21:07:43.810 [JavaFX Application Thread] DEBUG org.hibernate.orm.query.plan.cache - Creating and caching NativeQuery ParameterInterpretation - ParameterInterpretationImpl (SELECT e.* FROM empleado e WHERE e.usuario = ? AND e.password = ?) : {
    ,
    
}
2025-06-08 21:07:43.814 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:07:43.815 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    /* dynamic native SQL query */ SELECT
        e.* 
    FROM
        empleado e 
    WHERE
        e.usuario = ? 
        AND e.password = ?
2025-06-08 21:07:43.819 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Disallowing positional selections : SELECT e.* FROM empleado e WHERE e.usuario = :usuario AND e.password = :password
2025-06-08 21:07:43.821 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado)@43110575 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:07:43.823 [JavaFX Application Thread] INFO  p.e.u.p.service.EmpleadoService - Login exitoso para el usuario: admin con rol: admin
2025-06-08 21:07:43.823 [JavaFX Application Thread] INFO  p.e.u.p.control.ControlLogin - Autenticación exitosa para el empleado: admin-juan con rol: admin
2025-06-08 21:07:43.826 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Procesando rol: 'admin'
2025-06-08 21:07:43.827 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Cargando vista: /views/admMenu.fxml
2025-06-08 21:07:44.001 [JavaFX Application Thread] INFO  p.e.u.p.control.ControlMenu - Inicializando ControlMenu
2025-06-08 21:07:44.005 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-08 21:07:44.006 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl - begin
2025-06-08 21:07:44.009 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:07:44.010 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Seccion(2))] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] 
2025-06-08 21:07:44.011 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Seccion(2)]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion(2).detalle]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion(2).estado]

2025-06-08 21:07:44.012 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Seccion(2)) {
          primaryTableReference : seccion as s1_0
        }
      }
    }

2025-06-08 21:07:44.014 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:07:44.015 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        s1_0.id_seccion,
        s1_0.detalle,
        s1_0.estado 
    from
        seccion s1_0
2025-06-08 21:07:44.019 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Seccion(2) -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Seccion(2))@584985184 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Seccion))

2025-06-08 21:07:44.021 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl - committing
2025-06-08 21:07:44.022 [JavaFX Application Thread] INFO  p.e.u.p.service.SeccionService - Total de secciones encontradas: 0
2025-06-08 21:07:44.029 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-08 21:07:44.030 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl - begin
2025-06-08 21:07:44.033 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:07:44.034 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Producto(3))] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto] 
2025-06-08 21:07:44.037 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@77b3a744] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).categoria] 
2025-06-08 21:07:44.040 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1d8edcf6] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).seccion] 
2025-06-08 21:07:44.042 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto(3)]
 |  +-EntityFetchSelectImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).categoria]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).descripcion]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).precio]
 |  +-EntityFetchSelectImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).seccion]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).stock]

2025-06-08 21:07:44.043 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto(3)) {
          primaryTableReference : producto as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).categoria) {
            }
            left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).seccion) {
            }
          }
        }
      }
    }

2025-06-08 21:07:44.044 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:07:44.045 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id_producto,
        p1_0.id_categoria,
        p1_0.descripcion,
        p1_0.estado,
        p1_0.nombre,
        p1_0.precio,
        p1_0.id_seccion,
        p1_0.stock 
    from
        producto p1_0
2025-06-08 21:07:44.054 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).categoria -> EntitySelectFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).categoria)@858242507 (ToOneAttributeMapping(NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria])@1951339075)
	  pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).seccion -> EntitySelectFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).seccion)@948721841 (ToOneAttributeMapping(NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion])@853931190)
	  pe.edu.upeu.proyecto_restaurant.modulo.Producto(3) -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Producto(3))@1008914116 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Producto))

2025-06-08 21:07:44.057 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl - committing
2025-06-08 21:07:44.060 [JavaFX Application Thread] INFO  p.e.u.p.service.ProductoService - Total de productos encontrados: 0
2025-06-08 21:07:45.264 [JavaFX Application Thread] INFO  p.e.u.p.control.ControlLogin - Interfaz cargada correctamente para el rol: admin
2025-06-08 21:07:58.031 [JavaFX Application Thread] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-08 21:07:58.034 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing
2025-06-08 21:07:58.037 [JavaFX Application Thread] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@44b70340] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2895d2c]
2025-06-08 21:07:58.038 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2025-06-08 21:07:58.042 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2025-06-08 21:07:58.044 [JavaFX Application Thread] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-08 21:07:58.054 [JavaFX Application Thread] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-08 21:11:19.783 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:11:19.789 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:11:19.789 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:11:19.791 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:11:19.803 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:11:19.805 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:11:19.851 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:11:20.065 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:11:20.075 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:11:20.076 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:11:20.077 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:11:20.078 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:11:20.079 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:11:20.197 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - Starting application using Java 23.0.2 with PID 15564 (started by USUARIO in C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant)
2025-06-08 21:11:20.200 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-08 21:11:21.384 [JavaFX-Launcher] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-08 21:11:21.511 [JavaFX-Launcher] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 115 ms. Found 10 JPA repository interfaces.
2025-06-08 21:11:22.070 [JavaFX-Launcher] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@33909752
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/USUARIO/Documents/ProyectoRestaurantJava/ProyectoRestaurant/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		pe.edu.upeu.proyecto_restaurant.modulo.Categoria
		pe.edu.upeu.proyecto_restaurant.modulo.Cliente
		pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
		pe.edu.upeu.proyecto_restaurant.modulo.Empleado
		pe.edu.upeu.proyecto_restaurant.modulo.Factura
		pe.edu.upeu.proyecto_restaurant.modulo.Menu
		pe.edu.upeu.proyecto_restaurant.modulo.Mesa
		pe.edu.upeu.proyecto_restaurant.modulo.Pedido
		pe.edu.upeu.proyecto_restaurant.modulo.Producto
		pe.edu.upeu.proyecto_restaurant.modulo.Seccion]
	Mapping files names []
	Properties []
2025-06-08 21:11:22.088 [JavaFX-Launcher] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-06-08 21:11:22.090 [JavaFX-Launcher] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-06-08 21:11:22.171 [JavaFX-Launcher] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-08 21:11:22.173 [JavaFX-Launcher] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found
2025-06-08 21:11:22.208 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-06-08 21:11:22.214 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-06-08 21:11:22.216 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:11:22.217 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:11:22.218 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-06-08 21:11:22.220 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-06-08 21:11:22.221 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-06-08 21:11:22.224 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:11:22.225 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-06-08 21:11:22.226 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-06-08 21:11:22.227 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:11:22.229 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-06-08 21:11:22.240 [JavaFX-Launcher] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-06-08 21:11:22.242 [JavaFX-Launcher] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-08 21:11:22.360 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@19023677
2025-06-08 21:11:22.361 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@19023677
2025-06-08 21:11:22.361 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@19023677
2025-06-08 21:11:22.362 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@47b6da92
2025-06-08 21:11:22.362 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@47b6da92
2025-06-08 21:11:22.363 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@34b67e31
2025-06-08 21:11:22.363 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@34b67e31
2025-06-08 21:11:22.363 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@74035199
2025-06-08 21:11:22.364 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@74035199
2025-06-08 21:11:22.364 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7cba70e0
2025-06-08 21:11:22.365 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7cba70e0
2025-06-08 21:11:22.365 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7cba70e0
2025-06-08 21:11:22.365 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@da947af
2025-06-08 21:11:22.366 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@da947af
2025-06-08 21:11:22.366 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@da947af
2025-06-08 21:11:22.367 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@a69e7dd
2025-06-08 21:11:22.367 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@a69e7dd
2025-06-08 21:11:22.368 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6408f090
2025-06-08 21:11:22.368 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4b1aa181
2025-06-08 21:11:22.369 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4b1aa181
2025-06-08 21:11:22.369 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@c491372
2025-06-08 21:11:22.370 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@495b4a29
2025-06-08 21:11:22.371 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6a74bfe2
2025-06-08 21:11:22.372 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6a74bfe2
2025-06-08 21:11:22.372 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6a74bfe2
2025-06-08 21:11:22.373 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@747c1d84
2025-06-08 21:11:22.373 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@747c1d84
2025-06-08 21:11:22.373 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@747c1d84
2025-06-08 21:11:22.374 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@30ea52fa
2025-06-08 21:11:22.374 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@30ea52fa
2025-06-08 21:11:22.374 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@30ea52fa
2025-06-08 21:11:22.375 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@23734ccc
2025-06-08 21:11:22.375 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@23734ccc
2025-06-08 21:11:22.375 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@23734ccc
2025-06-08 21:11:22.376 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6cb76cef
2025-06-08 21:11:22.376 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6cb76cef
2025-06-08 21:11:22.376 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6cb76cef
2025-06-08 21:11:22.377 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7833ccc0
2025-06-08 21:11:22.378 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7833ccc0
2025-06-08 21:11:22.378 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1aac3cbe
2025-06-08 21:11:22.379 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1aac3cbe
2025-06-08 21:11:22.380 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@2300160b
2025-06-08 21:11:22.381 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@2300160b
2025-06-08 21:11:22.381 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2300160b
2025-06-08 21:11:22.382 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7407d690
2025-06-08 21:11:22.383 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@12b4511c
2025-06-08 21:11:22.383 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@12b4511c
2025-06-08 21:11:22.384 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6906d638
2025-06-08 21:11:22.384 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@4a95355d
2025-06-08 21:11:22.385 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4a95355d
2025-06-08 21:11:22.385 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@4a95355d
2025-06-08 21:11:22.385 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@ecc9c9
2025-06-08 21:11:22.386 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@30604479
2025-06-08 21:11:22.387 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6f08f35b
2025-06-08 21:11:22.387 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@c541c3a
2025-06-08 21:11:22.388 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@c541c3a
2025-06-08 21:11:22.388 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6a903ef8
2025-06-08 21:11:22.389 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6a903ef8
2025-06-08 21:11:22.389 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5861fc5f
2025-06-08 21:11:22.390 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@70db5e23
2025-06-08 21:11:22.390 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5cc239ce
2025-06-08 21:11:22.390 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@374eab50
2025-06-08 21:11:22.391 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@601a3ae2
2025-06-08 21:11:22.391 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4a1a5a84
2025-06-08 21:11:22.391 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@75b1640
2025-06-08 21:11:22.392 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@75b1640
2025-06-08 21:11:22.393 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@458d29d0
2025-06-08 21:11:22.393 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@458d29d0
2025-06-08 21:11:22.394 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@74f1d6a9
2025-06-08 21:11:22.394 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@74f1d6a9
2025-06-08 21:11:22.395 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6ca76cc9
2025-06-08 21:11:22.396 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6ca76cc9
2025-06-08 21:11:22.396 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@33918e0b
2025-06-08 21:11:22.397 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@33918e0b
2025-06-08 21:11:22.398 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1ffee200
2025-06-08 21:11:22.399 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@65402bc8
2025-06-08 21:11:22.399 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3256c28d
2025-06-08 21:11:22.399 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3256c28d
2025-06-08 21:11:22.400 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@d08e31a
2025-06-08 21:11:22.400 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@658eee59
2025-06-08 21:11:22.401 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1f4974b
2025-06-08 21:11:22.402 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b27f52
2025-06-08 21:11:22.402 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b27f52
2025-06-08 21:11:22.402 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4fe85ccd
2025-06-08 21:11:22.402 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5d068f4f
2025-06-08 21:11:22.403 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@78ed056b
2025-06-08 21:11:22.403 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@78ed056b
2025-06-08 21:11:22.404 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@6e33bdcb
2025-06-08 21:11:22.404 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6e33bdcb
2025-06-08 21:11:22.404 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@63308af4
2025-06-08 21:11:22.405 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@63308af4
2025-06-08 21:11:22.405 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@63308af4
2025-06-08 21:11:22.406 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@a250d2a
2025-06-08 21:11:22.406 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@a250d2a
2025-06-08 21:11:22.407 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@a250d2a
2025-06-08 21:11:22.407 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1a739758
2025-06-08 21:11:22.408 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@eddfccd
2025-06-08 21:11:22.408 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2cb3fc61
2025-06-08 21:11:22.409 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2cb3fc61
2025-06-08 21:11:22.409 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2a7c77f8
2025-06-08 21:11:22.410 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2a7c77f8
2025-06-08 21:11:22.410 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2a7c77f8
2025-06-08 21:11:22.410 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2e44a2f3
2025-06-08 21:11:22.411 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4f1e0862
2025-06-08 21:11:22.411 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@7c7da514
2025-06-08 21:11:22.412 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7c7da514
2025-06-08 21:11:22.413 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@35f7ded4
2025-06-08 21:11:22.414 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35f7ded4
2025-06-08 21:11:22.414 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35f7ded4
2025-06-08 21:11:22.415 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3eafb1a3
2025-06-08 21:11:22.415 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3eafb1a3
2025-06-08 21:11:22.416 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@14df30c
2025-06-08 21:11:22.416 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@14df30c
2025-06-08 21:11:22.416 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1089b334
2025-06-08 21:11:22.417 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1089b334
2025-06-08 21:11:22.417 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1b03ce8f
2025-06-08 21:11:22.417 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1b03ce8f
2025-06-08 21:11:22.418 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@586256e5
2025-06-08 21:11:22.418 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@586256e5
2025-06-08 21:11:22.418 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@36590b76
2025-06-08 21:11:22.418 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@6b140e9a
2025-06-08 21:11:22.419 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@6ee6c2c1
2025-06-08 21:11:22.420 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@24f97486
2025-06-08 21:11:22.420 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5a05c9d4
2025-06-08 21:11:22.425 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2cf1f2dd
2025-06-08 21:11:22.426 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2cf1f2dd
2025-06-08 21:11:22.430 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@3acf850d
2025-06-08 21:11:22.430 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7073ec39
2025-06-08 21:11:22.431 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4f9479e7
2025-06-08 21:11:22.432 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3baa6e00
2025-06-08 21:11:22.433 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7d8b7395
2025-06-08 21:11:22.433 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@12764a39
2025-06-08 21:11:22.433 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7ec142d1
2025-06-08 21:11:22.434 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@16f3f967
2025-06-08 21:11:22.434 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@30c227f7
2025-06-08 21:11:22.439 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6610d81f] into BootstrapContext; was [null]
2025-06-08 21:11:22.440 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6610d81f) [was null]
2025-06-08 21:11:22.441 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@178ef370] into BootstrapContext; was [null]
2025-06-08 21:11:22.441 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3ffd1b12] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@533ec65d]
2025-06-08 21:11:22.478 [JavaFX-Launcher] DEBUG o.h.j.b.i.PersistenceUnitInfoDescriptor - Pushing class transformers for PU named 'default' on loading classloader jdk.internal.loader.ClassLoaders$AppClassLoader@33909752
2025-06-08 21:11:22.772 [JavaFX-Launcher] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-08 21:11:22.772 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6610d81f]
2025-06-08 21:11:22.773 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6610d81f]
2025-06-08 21:11:22.816 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-08 21:11:22.970 [JavaFX-Launcher] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@41f99636
2025-06-08 21:11:22.973 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-08 21:11:22.984 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : SQLite
	version : 3.46.0
	  major : 3
	  minor : 46
2025-06-08 21:11:22.985 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : SQLite JDBC
	version : 3.46.0.0
	  major : 3
	  minor : 46
2025-06-08 21:11:22.986 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2
2025-06-08 21:11:23.019 [JavaFX-Launcher] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.community.dialect.SQLiteDialect, version: 3.46
2025-06-08 21:11:23.023 [JavaFX-Launcher] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-06-08 21:11:23.024 [JavaFX-Launcher] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2025-06-08 21:11:23.046 [JavaFX-Launcher] DEBUG org.hibernate.orm.jdbc.lob - HHH10010005: Disabling contextual LOB creation as createClob() method threw error : java.sql.SQLFeatureNotSupportedException
2025-06-08 21:11:23.052 [JavaFX-Launcher] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 3.46
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-08 21:11:23.071 [JavaFX-Launcher] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(PRIMITIVE_ARRAY_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-06-08 21:11:23.073 [JavaFX-Launcher] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STRING_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-08 21:11:23.085 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-06-08 21:11:23.087 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:11:23.087 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:11:23.092 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:11:23.093 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:11:23.094 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:11:23.095 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:11:23.095 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:11:23.096 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:11:23.097 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:11:23.098 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:11:23.099 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:11:23.101 [JavaFX-Launcher] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7b06cdc5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@f1b9505]
2025-06-08 21:11:23.152 [JavaFX-Launcher] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-06-08 21:11:23.187 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:11:23.199 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Categoria
2025-06-08 21:11:23.214 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Categoria on table categoria
2025-06-08 21:11:23.231 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:11:23.255 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_categoria')
2025-06-08 21:11:23.258 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:11:23.259 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:11:23.267 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCategoria with lazy=false
2025-06-08 21:11:23.273 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:idCategoria]
2025-06-08 21:11:23.282 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCategoria
2025-06-08 21:11:23.288 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.id_categoria
2025-06-08 21:11:23.289 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCategoria
2025-06-08 21:11:23.297 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_categoria)]), idCategoria, identity, , ...)
2025-06-08 21:11:23.299 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:11:23.300 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:11:23.301 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:estado]
2025-06-08 21:11:23.302 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:11:23.302 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.estado
2025-06-08 21:11:23.303 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:11:23.305 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:11:23.306 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:11:23.306 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:nombre]
2025-06-08 21:11:23.307 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:11:23.307 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.nombre
2025-06-08 21:11:23.308 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:11:23.312 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:11:23.320 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:11:23.321 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Cliente
2025-06-08 21:11:23.322 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Cliente on table cliente
2025-06-08 21:11:23.323 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:11:23.325 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_cliente')
2025-06-08 21:11:23.326 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:11:23.327 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:11:23.328 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCliente with lazy=false
2025-06-08 21:11:23.329 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:idCliente]
2025-06-08 21:11:23.330 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCliente
2025-06-08 21:11:23.330 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.id_cliente
2025-06-08 21:11:23.331 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCliente
2025-06-08 21:11:23.332 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_cliente)]), idCliente, identity, , ...)
2025-06-08 21:11:23.333 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='apellido')
2025-06-08 21:11:23.334 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property apellido with lazy=false
2025-06-08 21:11:23.335 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:apellido]
2025-06-08 21:11:23.335 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for apellido
2025-06-08 21:11:23.335 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.apellido
2025-06-08 21:11:23.336 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property apellido
2025-06-08 21:11:23.337 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cant_visitas')
2025-06-08 21:11:23.338 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantVisitas with lazy=false
2025-06-08 21:11:23.338 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:cantVisitas]
2025-06-08 21:11:23.339 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantVisitas
2025-06-08 21:11:23.340 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.cant_visitas
2025-06-08 21:11:23.341 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantVisitas
2025-06-08 21:11:23.344 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='dni')
2025-06-08 21:11:23.345 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property dni with lazy=false
2025-06-08 21:11:23.346 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:dni]
2025-06-08 21:11:23.347 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for dni
2025-06-08 21:11:23.348 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.dni
2025-06-08 21:11:23.349 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property dni
2025-06-08 21:11:23.350 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
2025-06-08 21:11:23.350 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-06-08 21:11:23.351 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:email]
2025-06-08 21:11:23.352 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email
2025-06-08 21:11:23.352 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.email
2025-06-08 21:11:23.353 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property email
2025-06-08 21:11:23.353 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:11:23.354 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:11:23.355 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:estado]
2025-06-08 21:11:23.355 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:11:23.356 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.estado
2025-06-08 21:11:23.356 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:11:23.357 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:11:23.358 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:11:23.358 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:nombre]
2025-06-08 21:11:23.358 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:11:23.359 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.nombre
2025-06-08 21:11:23.359 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:11:23.359 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='telefono')
2025-06-08 21:11:23.360 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property telefono with lazy=false
2025-06-08 21:11:23.360 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:telefono]
2025-06-08 21:11:23.361 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for telefono
2025-06-08 21:11:23.361 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.telefono
2025-06-08 21:11:23.362 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property telefono
2025-06-08 21:11:23.363 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:11:23.365 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:11:23.365 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name DetPedido
2025-06-08 21:11:23.366 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.DetPedido on table detalle_pedido
2025-06-08 21:11:23.367 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:11:23.376 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_detalle_pedido')
2025-06-08 21:11:23.378 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:11:23.378 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:11:23.379 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idDetallePedido with lazy=false
2025-06-08 21:11:23.380 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:idDetallePedido]
2025-06-08 21:11:23.381 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idDetallePedido
2025-06-08 21:11:23.382 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.id_detalle_pedido
2025-06-08 21:11:23.383 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idDetallePedido
2025-06-08 21:11:23.383 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_detalle_pedido)]), idDetallePedido, identity, , ...)
2025-06-08 21:11:23.384 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cantidad')
2025-06-08 21:11:23.385 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantidad with lazy=false
2025-06-08 21:11:23.385 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:cantidad]
2025-06-08 21:11:23.386 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantidad
2025-06-08 21:11:23.386 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.cantidad
2025-06-08 21:11:23.387 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantidad
2025-06-08 21:11:23.387 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:11:23.388 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:11:23.388 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:estado]
2025-06-08 21:11:23.389 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:11:23.389 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.estado
2025-06-08 21:11:23.390 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:11:23.393 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_factura',referencedColumn='id_factura')
2025-06-08 21:11:23.396 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:11:23.403 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property factura
2025-06-08 21:11:23.404 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='igv')
2025-06-08 21:11:23.405 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property igv with lazy=false
2025-06-08 21:11:23.406 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:igv]
2025-06-08 21:11:23.406 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for igv
2025-06-08 21:11:23.407 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.igv
2025-06-08 21:11:23.408 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property igv
2025-06-08 21:11:23.408 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:11:23.409 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:11:23.410 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:11:23.412 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio_unitario')
2025-06-08 21:11:23.413 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precioUnitario with lazy=false
2025-06-08 21:11:23.414 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:precioUnitario]
2025-06-08 21:11:23.415 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precioUnitario
2025-06-08 21:11:23.415 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.precio_unitario
2025-06-08 21:11:23.416 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property precioUnitario
2025-06-08 21:11:23.417 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_producto',referencedColumn='id_producto')
2025-06-08 21:11:23.418 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:11:23.419 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property producto
2025-06-08 21:11:23.420 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='subtotal')
2025-06-08 21:11:23.420 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property subtotal with lazy=false
2025-06-08 21:11:23.421 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:subtotal]
2025-06-08 21:11:23.422 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for subtotal
2025-06-08 21:11:23.422 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.subtotal
2025-06-08 21:11:23.423 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property subtotal
2025-06-08 21:11:23.424 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:11:23.424 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:11:23.425 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:total]
2025-06-08 21:11:23.425 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:11:23.426 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.total
2025-06-08 21:11:23.427 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:11:23.428 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:11:23.430 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:11:23.431 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Empleado
2025-06-08 21:11:23.432 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Empleado on table empleado
2025-06-08 21:11:23.433 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:11:23.436 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_empleado')
2025-06-08 21:11:23.437 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:11:23.437 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:11:23.438 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idEmpleado with lazy=false
2025-06-08 21:11:23.439 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:idEmpleado]
2025-06-08 21:11:23.440 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idEmpleado
2025-06-08 21:11:23.440 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.id_empleado
2025-06-08 21:11:23.441 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idEmpleado
2025-06-08 21:11:23.441 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_empleado)]), idEmpleado, identity, , ...)
2025-06-08 21:11:23.442 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:11:23.443 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:11:23.443 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:estado]
2025-06-08 21:11:23.444 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:11:23.445 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.estado
2025-06-08 21:11:23.446 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:11:23.448 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:11:23.449 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:11:23.450 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:nombre]
2025-06-08 21:11:23.451 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:11:23.451 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.nombre
2025-06-08 21:11:23.452 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:11:23.453 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password')
2025-06-08 21:11:23.453 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-06-08 21:11:23.454 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:password]
2025-06-08 21:11:23.454 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password
2025-06-08 21:11:23.455 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.password
2025-06-08 21:11:23.456 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property password
2025-06-08 21:11:23.456 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='rol')
2025-06-08 21:11:23.457 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property rol with lazy=false
2025-06-08 21:11:23.457 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:rol]
2025-06-08 21:11:23.458 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for rol
2025-06-08 21:11:23.458 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.rol
2025-06-08 21:11:23.459 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property rol
2025-06-08 21:11:23.461 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='usuario')
2025-06-08 21:11:23.462 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property usuario with lazy=false
2025-06-08 21:11:23.463 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:usuario]
2025-06-08 21:11:23.464 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for usuario
2025-06-08 21:11:23.465 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.usuario
2025-06-08 21:11:23.466 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property usuario
2025-06-08 21:11:23.467 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:11:23.468 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:11:23.469 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Factura
2025-06-08 21:11:23.470 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Factura on table factura
2025-06-08 21:11:23.471 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:11:23.476 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_factura')
2025-06-08 21:11:23.477 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:11:23.478 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:11:23.479 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idFactura with lazy=false
2025-06-08 21:11:23.479 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:idFactura]
2025-06-08 21:11:23.480 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idFactura
2025-06-08 21:11:23.481 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.id_factura
2025-06-08 21:11:23.482 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idFactura
2025-06-08 21:11:23.483 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_factura)]), idFactura, identity, , ...)
2025-06-08 21:11:23.484 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_cliente',referencedColumn='id_cliente')
2025-06-08 21:11:23.485 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:11:23.485 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cliente
2025-06-08 21:11:23.487 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='codigo')
2025-06-08 21:11:23.487 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codigo with lazy=false
2025-06-08 21:11:23.488 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:codigo]
2025-06-08 21:11:23.488 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codigo
2025-06-08 21:11:23.489 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.codigo
2025-06-08 21:11:23.490 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property codigo
2025-06-08 21:11:23.491 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:11:23.491 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:11:23.492 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:estado]
2025-06-08 21:11:23.492 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:11:23.492 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.estado
2025-06-08 21:11:23.492 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:11:23.494 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fecha_emision')
2025-06-08 21:11:23.495 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaEmision with lazy=false
2025-06-08 21:11:23.496 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:fechaEmision]
2025-06-08 21:11:23.496 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaEmision
2025-06-08 21:11:23.498 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.fecha_emision
2025-06-08 21:11:23.498 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaEmision
2025-06-08 21:11:23.499 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='igv')
2025-06-08 21:11:23.499 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property igv with lazy=false
2025-06-08 21:11:23.499 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:igv]
2025-06-08 21:11:23.501 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for igv
2025-06-08 21:11:23.501 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.igv
2025-06-08 21:11:23.501 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property igv
2025-06-08 21:11:23.502 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:11:23.502 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:11:23.504 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:11:23.504 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='subtotal')
2025-06-08 21:11:23.504 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property subtotal with lazy=false
2025-06-08 21:11:23.506 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:subtotal]
2025-06-08 21:11:23.506 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for subtotal
2025-06-08 21:11:23.506 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.subtotal
2025-06-08 21:11:23.507 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property subtotal
2025-06-08 21:11:23.508 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:11:23.508 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:11:23.509 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:total]
2025-06-08 21:11:23.509 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:11:23.510 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.total
2025-06-08 21:11:23.510 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:11:23.511 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:11:23.513 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:11:23.514 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Menu
2025-06-08 21:11:23.514 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Menu on table menu
2025-06-08 21:11:23.515 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:11:23.517 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_menu')
2025-06-08 21:11:23.518 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:11:23.518 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:11:23.519 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idMenu with lazy=false
2025-06-08 21:11:23.519 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Menu:idMenu]
2025-06-08 21:11:23.520 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idMenu
2025-06-08 21:11:23.520 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: menu.id_menu
2025-06-08 21:11:23.520 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idMenu
2025-06-08 21:11:23.521 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_menu)]), idMenu, identity, , ...)
2025-06-08 21:11:23.522 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cod_pedido')
2025-06-08 21:11:23.522 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codPedido with lazy=false
2025-06-08 21:11:23.522 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Menu:codPedido]
2025-06-08 21:11:23.522 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codPedido
2025-06-08 21:11:23.523 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: menu.cod_pedido
2025-06-08 21:11:23.523 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property codPedido
2025-06-08 21:11:23.524 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:11:23.525 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:11:23.526 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:11:23.527 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_producto',referencedColumn='id_producto')
2025-06-08 21:11:23.528 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:11:23.529 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property producto
2025-06-08 21:11:23.530 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:11:23.531 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:11:23.532 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Mesa
2025-06-08 21:11:23.533 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Mesa on table mesa
2025-06-08 21:11:23.534 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:11:23.536 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_mesa')
2025-06-08 21:11:23.537 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:11:23.537 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:11:23.538 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idMesa with lazy=false
2025-06-08 21:11:23.538 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:idMesa]
2025-06-08 21:11:23.539 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idMesa
2025-06-08 21:11:23.539 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.id_mesa
2025-06-08 21:11:23.539 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idMesa
2025-06-08 21:11:23.540 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_mesa)]), idMesa, identity, , ...)
2025-06-08 21:11:23.540 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='capacidad')
2025-06-08 21:11:23.541 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property capacidad with lazy=false
2025-06-08 21:11:23.541 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:capacidad]
2025-06-08 21:11:23.541 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for capacidad
2025-06-08 21:11:23.542 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.capacidad
2025-06-08 21:11:23.542 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property capacidad
2025-06-08 21:11:23.542 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='detalle')
2025-06-08 21:11:23.543 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property detalle with lazy=false
2025-06-08 21:11:23.543 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:detalle]
2025-06-08 21:11:23.544 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for detalle
2025-06-08 21:11:23.544 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.detalle
2025-06-08 21:11:23.545 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property detalle
2025-06-08 21:11:23.546 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:11:23.546 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:11:23.547 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:estado]
2025-06-08 21:11:23.547 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:11:23.548 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.estado
2025-06-08 21:11:23.549 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:11:23.550 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='numero')
2025-06-08 21:11:23.550 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property numero with lazy=false
2025-06-08 21:11:23.550 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:numero]
2025-06-08 21:11:23.551 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for numero
2025-06-08 21:11:23.551 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.numero
2025-06-08 21:11:23.551 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property numero
2025-06-08 21:11:23.552 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:11:23.553 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:11:23.554 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Pedido
2025-06-08 21:11:23.555 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Pedido on table pedido
2025-06-08 21:11:23.555 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:11:23.558 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_pedido')
2025-06-08 21:11:23.559 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:11:23.559 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:11:23.559 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idPedido with lazy=false
2025-06-08 21:11:23.560 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:idPedido]
2025-06-08 21:11:23.560 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idPedido
2025-06-08 21:11:23.561 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.id_pedido
2025-06-08 21:11:23.561 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idPedido
2025-06-08 21:11:23.562 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_pedido)]), idPedido, identity, , ...)
2025-06-08 21:11:23.563 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cant_pedidos')
2025-06-08 21:11:23.563 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantPedidos with lazy=false
2025-06-08 21:11:23.564 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:cantPedidos]
2025-06-08 21:11:23.565 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantPedidos
2025-06-08 21:11:23.565 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.cant_pedidos
2025-06-08 21:11:23.566 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantPedidos
2025-06-08 21:11:23.566 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_cliente',referencedColumn='id_cliente')
2025-06-08 21:11:23.567 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:11:23.567 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cliente
2025-06-08 21:11:23.568 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_empleado',referencedColumn='id_empleado')
2025-06-08 21:11:23.568 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:11:23.569 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property empleado
2025-06-08 21:11:23.569 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:11:23.569 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:11:23.569 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:estado]
2025-06-08 21:11:23.570 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:11:23.570 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.estado
2025-06-08 21:11:23.570 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:11:23.571 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fecha_hora')
2025-06-08 21:11:23.571 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaHora with lazy=false
2025-06-08 21:11:23.571 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:fechaHora]
2025-06-08 21:11:23.571 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaHora
2025-06-08 21:11:23.572 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.fecha_hora
2025-06-08 21:11:23.572 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaHora
2025-06-08 21:11:23.572 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_mesa',referencedColumn='id_mesa')
2025-06-08 21:11:23.572 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:11:23.573 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property mesa
2025-06-08 21:11:23.573 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:11:23.574 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:11:23.574 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:total]
2025-06-08 21:11:23.574 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:11:23.574 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.total
2025-06-08 21:11:23.574 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:11:23.575 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:11:23.576 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:11:23.576 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Producto
2025-06-08 21:11:23.577 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Producto on table producto
2025-06-08 21:11:23.577 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:11:23.580 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_producto')
2025-06-08 21:11:23.581 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:11:23.581 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:11:23.582 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idProducto with lazy=false
2025-06-08 21:11:23.582 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:idProducto]
2025-06-08 21:11:23.582 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idProducto
2025-06-08 21:11:23.582 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.id_producto
2025-06-08 21:11:23.582 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idProducto
2025-06-08 21:11:23.582 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_producto)]), idProducto, identity, , ...)
2025-06-08 21:11:23.582 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_categoria',referencedColumn='id_categoria')
2025-06-08 21:11:23.583 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:11:23.583 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property categoria
2025-06-08 21:11:23.583 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='descripcion')
2025-06-08 21:11:23.584 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property descripcion with lazy=false
2025-06-08 21:11:23.584 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:descripcion]
2025-06-08 21:11:23.585 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for descripcion
2025-06-08 21:11:23.585 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.descripcion
2025-06-08 21:11:23.586 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property descripcion
2025-06-08 21:11:23.586 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:11:23.587 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:11:23.587 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:estado]
2025-06-08 21:11:23.587 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:11:23.587 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.estado
2025-06-08 21:11:23.588 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:11:23.589 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:11:23.589 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:11:23.589 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:nombre]
2025-06-08 21:11:23.589 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:11:23.590 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.nombre
2025-06-08 21:11:23.590 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:11:23.591 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio')
2025-06-08 21:11:23.591 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precio with lazy=false
2025-06-08 21:11:23.591 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:precio]
2025-06-08 21:11:23.592 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precio
2025-06-08 21:11:23.592 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.precio
2025-06-08 21:11:23.592 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property precio
2025-06-08 21:11:23.593 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_seccion',referencedColumn='id_seccion')
2025-06-08 21:11:23.593 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:11:23.594 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property seccion
2025-06-08 21:11:23.595 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='stock')
2025-06-08 21:11:23.596 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property stock with lazy=false
2025-06-08 21:11:23.596 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:stock]
2025-06-08 21:11:23.597 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for stock
2025-06-08 21:11:23.597 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.stock
2025-06-08 21:11:23.598 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property stock
2025-06-08 21:11:23.599 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:11:23.599 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:11:23.600 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Seccion
2025-06-08 21:11:23.600 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Seccion on table seccion
2025-06-08 21:11:23.601 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:11:23.605 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_seccion')
2025-06-08 21:11:23.605 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:11:23.605 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:11:23.605 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idSeccion with lazy=false
2025-06-08 21:11:23.605 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:idSeccion]
2025-06-08 21:11:23.605 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idSeccion
2025-06-08 21:11:23.606 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.id_seccion
2025-06-08 21:11:23.606 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idSeccion
2025-06-08 21:11:23.606 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_seccion)]), idSeccion, identity, , ...)
2025-06-08 21:11:23.607 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='detalle')
2025-06-08 21:11:23.607 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property detalle with lazy=false
2025-06-08 21:11:23.607 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:detalle]
2025-06-08 21:11:23.607 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for detalle
2025-06-08 21:11:23.608 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.detalle
2025-06-08 21:11:23.608 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property detalle
2025-06-08 21:11:23.608 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:11:23.609 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:11:23.609 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:estado]
2025-06-08 21:11:23.609 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:11:23.609 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.estado
2025-06-08 21:11:23.611 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:11:23.611 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:11:23.613 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idCategoria
2025-06-08 21:11:23.615 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:11:23.616 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:11:23.616 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idCliente
2025-06-08 21:11:23.616 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apellido
2025-06-08 21:11:23.616 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantVisitas
2025-06-08 21:11:23.617 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for dni
2025-06-08 21:11:23.617 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-06-08 21:11:23.617 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:11:23.617 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:11:23.618 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for telefono
2025-06-08 21:11:23.618 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idDetallePedido
2025-06-08 21:11:23.618 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantidad
2025-06-08 21:11:23.618 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:11:23.619 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for igv
2025-06-08 21:11:23.619 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precioUnitario
2025-06-08 21:11:23.619 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for subtotal
2025-06-08 21:11:23.619 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:11:23.619 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idEmpleado
2025-06-08 21:11:23.620 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:11:23.620 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:11:23.620 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-06-08 21:11:23.621 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for rol
2025-06-08 21:11:23.621 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for usuario
2025-06-08 21:11:23.621 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idFactura
2025-06-08 21:11:23.622 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codigo
2025-06-08 21:11:23.622 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:11:23.622 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaEmision
2025-06-08 21:11:23.622 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for igv
2025-06-08 21:11:23.622 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for subtotal
2025-06-08 21:11:23.623 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:11:23.623 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idMenu
2025-06-08 21:11:23.623 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codPedido
2025-06-08 21:11:23.623 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idMesa
2025-06-08 21:11:23.623 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for capacidad
2025-06-08 21:11:23.623 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for detalle
2025-06-08 21:11:23.623 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:11:23.624 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for numero
2025-06-08 21:11:23.624 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idPedido
2025-06-08 21:11:23.624 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantPedidos
2025-06-08 21:11:23.624 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:11:23.625 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaHora
2025-06-08 21:11:23.625 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:11:23.625 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idProducto
2025-06-08 21:11:23.626 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for descripcion
2025-06-08 21:11:23.626 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:11:23.627 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:11:23.627 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precio
2025-06-08 21:11:23.627 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for stock
2025-06-08 21:11:23.628 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idSeccion
2025-06-08 21:11:23.628 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for detalle
2025-06-08 21:11:23.628 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:11:23.638 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_categoria] to be non-null as it is part of the primary key for table [categoria]
2025-06-08 21:11:23.639 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_cliente] to be non-null as it is part of the primary key for table [cliente]
2025-06-08 21:11:23.639 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_detalle_pedido] to be non-null as it is part of the primary key for table [detalle_pedido]
2025-06-08 21:11:23.639 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_empleado] to be non-null as it is part of the primary key for table [empleado]
2025-06-08 21:11:23.639 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_factura] to be non-null as it is part of the primary key for table [factura]
2025-06-08 21:11:23.639 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_menu] to be non-null as it is part of the primary key for table [menu]
2025-06-08 21:11:23.639 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_mesa] to be non-null as it is part of the primary key for table [mesa]
2025-06-08 21:11:23.640 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_pedido] to be non-null as it is part of the primary key for table [pedido]
2025-06-08 21:11:23.640 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_producto] to be non-null as it is part of the primary key for table [producto]
2025-06-08 21:11:23.640 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_seccion] to be non-null as it is part of the primary key for table [seccion]
2025-06-08 21:11:23.869 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2025-06-08 21:11:23.910 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:11:23.912 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=23, javafx.runtime.version=21.0.1+6, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@150e61ec, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.community.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant\target\classes;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter\3.5.0\spring-boot-starter-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot\3.5.0\spring-boot-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-context\6.2.7\spring-context-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-expression\6.2.7\spring-expression-6.2.7.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-observation\1.15.0\micrometer-observation-1.15.0.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-commons\1.15.0\micrometer-commons-1.15.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.5.0\spring-boot-autoconfigure-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.5.0\spring-boot-starter-logging-3.5.0.jar;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\USUARIO\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-core\6.2.7\spring-core-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jcl\6.2.7\spring-jcl-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\yaml\snakeyaml\2.4\snakeyaml-2.4.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.5.0\spring-boot-starter-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.5.0\spring-boot-starter-jdbc-3.5.0.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jdbc\6.2.7\spring-jdbc-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-core\6.6.15.Final\hibernate-core-6.6.15.Final.jar;C:\Users\USUARIO\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\USUARIO\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\USUARIO\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\USUARIO\.m2\repository\net\bytebuddy\byte-buddy\1.17.5\byte-buddy-1.17.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\USUARIO\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\USUARIO\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-jpa\3.5.0\spring-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-commons\3.5.0\spring-data-commons-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-orm\6.2.7\spring-orm-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aop\6.2.7\spring-aop-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-tx\6.2.7\spring-tx-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-beans\6.2.7\spring-beans-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aspects\6.2.7\spring-aspects-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\USUARIO\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\USUARIO\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-community-dialects\6.4.4.Final\hibernate-community-dialects-6.4.4.Final.jar;C:\Users\USUARIO\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\USUARIO\.m2\repository\org\xerial\sqlite-jdbc\3.46.0.0\sqlite-jdbc-3.46.0.0.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\USUARIO\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.0\jackson-annotations-2.17.0.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.2.Final\hibernate-validator-7.0.2.Final.jar;C:\Users\USUARIO\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-fxml\21.0.1\javafx-fxml-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-fxml\21.0.1\javafx-fxml-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-swing\21.0.1\javafx-swing-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-swing\21.0.1\javafx-swing-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\bootstrapfx\bootstrapfx-core\0.2.4\bootstrapfx-core-0.2.4.jar;C:\Users\USUARIO\.m2\repository\io\github\mkpaz\atlantafx-base\2.0.0\atlantafx-base-2.0.0.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-javafx\12.3.1\ikonli-javafx-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-core\12.3.1\ikonli-core-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-fontawesome5-pack\12.3.1\ikonli-fontawesome5-pack-12.3.1.jar;C:\Users\USUARIO\.m2\repository\net\sf\jasperreports\jasperreports\6.20.0\jasperreports-6.20.0.jar;C:\Users\USUARIO\.m2\repository\commons-beanutils\commons-beanutils\1.9.4\commons-beanutils-1.9.4.jar;C:\Users\USUARIO\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\USUARIO\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\USUARIO\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-collections4\4.2\commons-collections4-4.2.jar;C:\Users\USUARIO\.m2\repository\com\lowagie\itext\2.1.7.js10\itext-2.1.7.js10.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcprov-jdk15on\1.70\bcprov-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcutil-jdk15on\1.70\bcutil-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jcommon\1.0.23\jcommon-1.0.23.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jfreechart\1.0.19\jfreechart-1.0.19.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\jdt\ecj\3.21.0\ecj-3.21.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.19.0\jackson-core-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.19.0\jackson-databind-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-xml\2.19.0\jackson-dataformat-xml-2.19.0.jar;C:\Users\USUARIO\.m2\repository\org\codehaus\woodstox\stax2-api\4.2.2\stax2-api-4.2.2.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\woodstox\woodstox-core\7.1.0\woodstox-core-7.1.0.jar;C:\Users\USUARIO\.m2\repository\win\zqxu\jrviewer-fx\0.1.1\jrviewer-fx-0.1.1.jar;C:\Users\USUARIO\.m2\repository\jakarta\el\jakarta.el-api\4.0.0\jakarta.el-api-4.0.0.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jakarta.el\4.0.2\jakarta.el-4.0.2.jar;C:\Users\USUARIO\.m2\repository\com\miglayout\miglayout\3.7.4\miglayout-3.7.4.jar;C:\Users\USUARIO\.m2\repository\org\apache\groovy\groovy\4.0.6\groovy-4.0.6.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml\5.2.3\poi-ooxml-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi\5.2.3\poi-5.2.3.jar;C:\Users\USUARIO\.m2\repository\commons-codec\commons-codec\1.18.0\commons-codec-1.18.0.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-math3\3.6.1\commons-math3-3.6.1.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\SparseBitSet\1.2\SparseBitSet-1.2.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml-lite\5.2.3\poi-ooxml-lite-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\xmlbeans\xmlbeans\5.1.1\xmlbeans-5.1.1.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-compress\1.21\commons-compress-1.21.jar;C:\Users\USUARIO\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\USUARIO\.m2\repository\com\github\virtuald\curvesapi\1.07\curvesapi-1.07.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar, LOGBACK_ROLLINGPOLICY_MAX_FILE_SIZE=10485760, java.vm.vendor=Oracle Corporation, LOG_PATH=logs/, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Bogota, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, javafx.version=21.0.1, os.name=Windows 11, java.vm.specification.version=23, APPLICATION_NAME=ProyectoRestaurant, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=MX, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk-23\bin, sun.java.command=pe.edu.upeu.proyecto_restaurant.AppRestaurant, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.use_sql_comments=true, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@60c6ce8d, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\USUARIO, user.language=es, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-23, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7-58, user.name=USUARIO, stdout.encoding=cp850, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, FILE_LOG_PATTERN=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, LOG_FILE=logs/restaurant.log, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\USUARIO\AppData\Local\Temp\, java.version=23.0.2, LOGBACK_ROLLINGPOLICY_CLEAN_HISTORY_ON_START=false, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=15564, sun.os.patch.level=, CONSOLE_LOG_CHARSET=IBM850, LOGBACK_ROLLINGPOLICY_MAX_HISTORY=30, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3aeec68e, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-23\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;c:\Users\USUARIO\AppData\Local\Programs\cursor\resources\app\bin;C:\Users\USUARIO\AppData\Local\Programs\Python\Python313\Scripts\;C:\Users\USUARIO\AppData\Local\Programs\Python\Launcher\;C:\Users\USUARIO\AppData\Local\Microsoft\WindowsApps;C:\Users\USUARIO\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\USUARIO\AppData\Roaming\npm;C:\flutter\bin;C:\Users\USUARIO\AppData\Local\Programs\Python\Python313\;C:\ffpmg\bin;C:\Users\USUARIO\Downloads\apache-maven-3.9.9\bin;C:\Users\USUARIO\AppData\Local\GitHubDesktop\bin;C:\Users\USUARIO\AppData\Local\Microsoft\WinGet\Packages\Schniz.fnm_Microsoft.Winget.Source_8wekyb3d8bbwe;C:\Users\USUARIO\AppData\Local\Programs\cursor\resources\app\bin;., stderr.encoding=cp850, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=23.0.2+7-58, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), CONSOLE_LOG_PATTERN=%d{HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{36}) - %msg%n, java.class.version=67.0, LOGGED_APPLICATION_NAME=[ProyectoRestaurant] , LOGBACK_ROLLINGPOLICY_TOTAL_SIZE_CAP=104857600}
2025-06-08 21:11:23.916 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-06-08 21:11:23.924 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:11:23.925 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:11:23.926 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:11:23.926 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:11:23.927 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:11:23.927 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:11:23.929 [JavaFX-Launcher] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:11:23.931 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:11:23.933 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:11:23.934 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:11:23.934 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:11:23.934 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:11:23.934 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:11:23.935 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:11:23.936 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:11:23.983 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:11:23.983 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:11:23.986 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:11:23.987 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:11:23.989 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:11:23.989 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:11:23.992 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:11:23.993 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:11:23.997 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:11:23.998 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:11:24.002 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:11:24.002 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:11:24.006 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:11:24.006 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:11:24.008 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:11:24.009 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:11:24.012 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:11:24.013 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:11:24.017 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:11:24.056 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-06-08 21:11:24.057 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-06-08 21:11:24.058 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-06-08 21:11:24.058 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-06-08 21:11:24.061 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3ce2d70b] under count; prior registration was null
2025-06-08 21:11:24.064 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@53ccfe97] under every; prior registration was null
2025-06-08 21:11:24.065 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2f85942c] under any; prior registration was null
2025-06-08 21:11:24.065 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-06-08 21:11:24.066 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-06-08 21:11:24.066 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-06-08 21:11:24.066 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-06-08 21:11:24.066 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-06-08 21:11:24.067 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-06-08 21:11:24.067 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-06-08 21:11:24.067 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-06-08 21:11:24.067 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-06-08 21:11:24.068 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-06-08 21:11:24.069 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-06-08 21:11:24.069 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-06-08 21:11:24.069 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-06-08 21:11:24.070 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-06-08 21:11:24.070 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-06-08 21:11:24.070 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-06-08 21:11:24.070 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-06-08 21:11:24.072 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1584fd36] under sinh; prior registration was null
2025-06-08 21:11:24.073 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ebc3ddf] under cosh; prior registration was null
2025-06-08 21:11:24.073 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@175f9e85] under tanh; prior registration was null
2025-06-08 21:11:24.073 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b376684] under pi; prior registration was null
2025-06-08 21:11:24.074 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9e84199] under log; prior registration was null
2025-06-08 21:11:24.075 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-06-08 21:11:24.075 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-06-08 21:11:24.075 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-06-08 21:11:24.076 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-06-08 21:11:24.076 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-06-08 21:11:24.077 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-06-08 21:11:24.078 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-06-08 21:11:24.079 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-06-08 21:11:24.080 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-06-08 21:11:24.080 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-06-08 21:11:24.081 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-06-08 21:11:24.081 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-06-08 21:11:24.082 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@19a506c8] under position; prior registration was null
2025-06-08 21:11:24.084 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@115e4710] under overlay; prior registration was null
2025-06-08 21:11:24.085 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@15d2795c] under trim; prior registration was null
2025-06-08 21:11:24.087 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@17e37e99] under cast; prior registration was null
2025-06-08 21:11:24.088 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@56413492] under collate; prior registration was null
2025-06-08 21:11:24.088 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@56aa2c30] under extract; prior registration was null
2025-06-08 21:11:24.089 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-06-08 21:11:24.089 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-06-08 21:11:24.089 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3b66b090] under ifnull; prior registration was null
2025-06-08 21:11:24.090 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-06-08 21:11:24.090 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-06-08 21:11:24.091 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6f73e3e4] under pad; prior registration was null
2025-06-08 21:11:24.092 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@336c7c9a] under str; prior registration was null
2025-06-08 21:11:24.096 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@608894e7] under format; prior registration was null
2025-06-08 21:11:24.097 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@401954a5] under timestampadd; prior registration was null
2025-06-08 21:11:24.098 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2296d89d] under timestampdiff; prior registration was null
2025-06-08 21:11:24.099 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-06-08 21:11:24.099 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-06-08 21:11:24.100 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49d87eb2] under current_date; prior registration was null
2025-06-08 21:11:24.100 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49cebb28] under current_time; prior registration was null
2025-06-08 21:11:24.100 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5810ad32] under current_timestamp; prior registration was null
2025-06-08 21:11:24.100 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-06-08 21:11:24.101 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-06-08 21:11:24.101 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-06-08 21:11:24.101 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@751ef27b] under local_date; prior registration was null
2025-06-08 21:11:24.101 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7f392f84] under local_time; prior registration was null
2025-06-08 21:11:24.102 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4312dcb0] under local_datetime; prior registration was null
2025-06-08 21:11:24.102 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1eb680dd] under offset_datetime; prior registration was null
2025-06-08 21:11:24.102 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-06-08 21:11:24.102 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-06-08 21:11:24.102 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-06-08 21:11:24.102 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-06-08 21:11:24.103 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1c39245a] under instant; prior registration was null
2025-06-08 21:11:24.103 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-06-08 21:11:24.104 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@3ce1ab] under sql; prior registration was null
2025-06-08 21:11:24.104 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@79651c27] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-06-08 21:11:24.105 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40abbfa3] under left; prior registration was NamedSqmFunctionTemplate(left)
2025-06-08 21:11:24.105 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b92cc1] under right; prior registration was NamedSqmFunctionTemplate(right)
2025-06-08 21:11:24.105 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@626fa464] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-06-08 21:11:24.105 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(length)] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-06-08 21:11:24.106 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-06-08 21:11:24.106 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under least; prior registration was NamedSqmFunctionTemplate(least)
2025-06-08 21:11:24.106 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under greatest; prior registration was NamedSqmFunctionTemplate(greatest)
2025-06-08 21:11:24.106 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-06-08 21:11:24.107 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-06-08 21:11:24.108 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@5833a4a0] under trunc; prior registration was null
2025-06-08 21:11:24.110 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-06-08 21:11:24.110 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9e84199
2025-06-08 21:11:24.111 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-06-08 21:11:24.112 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-06-08 21:11:24.112 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-06-08 21:11:24.112 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-06-08 21:11:24.113 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2025-06-08 21:11:24.113 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : chr -> char
2025-06-08 21:11:24.114 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1755a640] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-06-08 21:11:24.115 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@17913a3c] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2025-06-08 21:11:24.115 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@47adebbf] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2025-06-08 21:11:24.115 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(strftime)] under format; prior registration was org.hibernate.dialect.function.FormatFunction@608894e7
2025-06-08 21:11:24.115 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-06-08 21:11:24.116 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-06-08 21:11:24.116 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-06-08 21:11:24.116 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-06-08 21:11:24.117 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-06-08 21:11:24.117 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-06-08 21:11:24.118 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@456c4847] under listagg; prior registration was null
2025-06-08 21:11:24.120 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg)
2025-06-08 21:11:24.121 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-06-08 21:11:24.122 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2025-06-08 21:11:24.122 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-06-08 21:11:24.123 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-06-08 21:11:24.123 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-06-08 21:11:24.124 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg)
2025-06-08 21:11:24.124 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type)
2025-06-08 21:11:24.124 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-06-08 21:11:24.124 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg)
2025-06-08 21:11:24.124 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-06-08 21:11:24.125 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-06-08 21:11:24.125 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-06-08 21:11:24.125 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-06-08 21:11:24.125 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2025-06-08 21:11:24.125 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-06-08 21:11:24.125 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-06-08 21:11:24.126 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-06-08 21:11:24.126 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date
2025-06-08 21:11:24.126 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time
2025-06-08 21:11:24.126 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp
2025-06-08 21:11:24.127 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date
2025-06-08 21:11:24.127 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant
2025-06-08 21:11:24.128 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time
2025-06-08 21:11:24.128 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp
2025-06-08 21:11:24.128 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-06-08 21:11:24.129 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-06-08 21:11:24.130 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-06-08 21:11:24.130 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2025-06-08 21:11:24.130 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-06-08 21:11:24.130 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-06-08 21:11:24.130 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value
2025-06-08 21:11:24.131 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg)
2025-06-08 21:11:24.131 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-06-08 21:11:24.131 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-06-08 21:11:24.131 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-06-08 21:11:24.131 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant
2025-06-08 21:11:24.132 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-06-08 21:11:24.132 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value
2025-06-08 21:11:24.132 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-06-08 21:11:24.132 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-06-08 21:11:24.133 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-06-08 21:11:24.133 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-06-08 21:11:24.133 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-06-08 21:11:24.133 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-06-08 21:11:24.133 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date
2025-06-08 21:11:24.133 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime
2025-06-08 21:11:24.133 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time
2025-06-08 21:11:24.134 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date
2025-06-08 21:11:24.134 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime
2025-06-08 21:11:24.134 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time
2025-06-08 21:11:24.134 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(pattern, string[, start])
2025-06-08 21:11:24.134 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-06-08 21:11:24.134 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string)
2025-06-08 21:11:24.135 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding])
2025-06-08 21:11:24.135 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-06-08 21:11:24.135 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg)
2025-06-08 21:11:24.135 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg)
2025-06-08 21:11:24.136 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-06-08 21:11:24.136 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-06-08 21:11:24.136 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1)
2025-06-08 21:11:24.136 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-06-08 21:11:24.136 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-06-08 21:11:24.137 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2025-06-08 21:11:24.137 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-06-08 21:11:24.137 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi
2025-06-08 21:11:24.137 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-06-08 21:11:24.138 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-06-08 21:11:24.138 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-06-08 21:11:24.138 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-06-08 21:11:24.138 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-06-08 21:11:24.138 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-06-08 21:11:24.139 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number()
2025-06-08 21:11:24.139 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding])
2025-06-08 21:11:24.139 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-06-08 21:11:24.139 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-06-08 21:11:24.140 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-06-08 21:11:24.140 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-06-08 21:11:24.140 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql
2025-06-08 21:11:24.140 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-06-08 21:11:24.140 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg)
2025-06-08 21:11:24.140 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-06-08 21:11:24.141 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-06-08 21:11:24.141 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg)
2025-06-08 21:11:24.141 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-06-08 21:11:24.141 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-06-08 21:11:24.142 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-06-08 21:11:24.142 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-06-08 21:11:24.142 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-06-08 21:11:24.142 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... )
2025-06-08 21:11:24.142 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... )
2025-06-08 21:11:24.143 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string)
2025-06-08 21:11:24.148 [JavaFX-Launcher] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048)
2025-06-08 21:11:24.215 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:11:24.217 [JavaFX-Launcher] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-06-08 21:11:24.285 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.290 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.297 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.297 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.298 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:11:24.299 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:11:24.464 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Factura]: private accessor [cliente]
2025-06-08 21:11:24.469 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.469 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.495 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:11:24.495 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:11:24.521 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Empleado]: private accessor [estado]
2025-06-08 21:11:24.523 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:11:24.523 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:11:24.540 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Seccion]: private accessor [detalle]
2025-06-08 21:11:24.542 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:11:24.542 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:11:24.567 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Cliente]: private accessor [apellido]
2025-06-08 21:11:24.568 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.569 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.569 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.569 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.570 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:11:24.570 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:11:24.588 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Menu]: private accessor [codPedido]
2025-06-08 21:11:24.589 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.589 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.590 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.590 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.591 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.591 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.591 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.591 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.591 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:11:24.591 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:11:24.609 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido]: private accessor [cantidad]
2025-06-08 21:11:24.610 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.611 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.611 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.613 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.613 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.614 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.614 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.615 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:11:24.615 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:11:24.631 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Producto]: private accessor [categoria]
2025-06-08 21:11:24.632 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.633 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.634 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:11:24.634 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:11:24.645 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Categoria]: private accessor [estado]
2025-06-08 21:11:24.646 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:11:24.646 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:11:24.659 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Mesa]: private accessor [capacidad]
2025-06-08 21:11:24.660 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.660 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.661 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.661 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.662 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.662 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.663 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:11:24.663 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:11:24.678 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Pedido]: private accessor [cantPedidos]
2025-06-08 21:11:24.679 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.681 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.681 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:11:24.714 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks
2025-06-08 21:11:24.715 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente]
2025-06-08 21:11:24.721 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido]
2025-06-08 21:11:24.722 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Factura) `staticFetchableList` generator
2025-06-08 21:11:24.722 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Empleado) `staticFetchableList` generator
2025-06-08 21:11:24.722 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Seccion) `staticFetchableList` generator
2025-06-08 21:11:24.723 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Cliente) `staticFetchableList` generator
2025-06-08 21:11:24.723 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido]
2025-06-08 21:11:24.723 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto]
2025-06-08 21:11:24.724 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Menu) `staticFetchableList` generator
2025-06-08 21:11:24.724 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura]
2025-06-08 21:11:24.724 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido]
2025-06-08 21:11:24.725 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto]
2025-06-08 21:11:24.725 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.DetPedido) `staticFetchableList` generator
2025-06-08 21:11:24.725 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria]
2025-06-08 21:11:24.725 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion]
2025-06-08 21:11:24.725 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Producto) `staticFetchableList` generator
2025-06-08 21:11:24.725 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Categoria) `staticFetchableList` generator
2025-06-08 21:11:24.726 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Mesa) `staticFetchableList` generator
2025-06-08 21:11:24.726 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente]
2025-06-08 21:11:24.726 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado]
2025-06-08 21:11:24.727 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa]
2025-06-08 21:11:24.727 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Pedido) `staticFetchableList` generator
2025-06-08 21:11:24.813 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2025-06-08 21:11:24.816 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Factura)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura] 
2025-06-08 21:11:24.828 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2c00a740] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente] 
2025-06-08 21:11:24.830 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:11:24.835 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@8ea90cf] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido] 
2025-06-08 21:11:24.836 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:11:24.837 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@14406006] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente] 
2025-06-08 21:11:24.837 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:11:24.838 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3e3f6c8f] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado] 
2025-06-08 21:11:24.839 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:11:24.839 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@72e9d3cf] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa] 
2025-06-08 21:11:24.840 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:11:24.846 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.cantVisitas]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.email]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.nombre]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.telefono]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.codigo]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.fechaEmision]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.igv]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.rol]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.subtotal]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.total]

2025-06-08 21:11:24.850 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (f1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura) {
          primaryTableReference : factura as f1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente) {
              primaryTableReference : cliente as c1_0
            }
            left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido) {
              primaryTableReference : pedido as p1_0
              TableGroupJoins {
                left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente) {
                  primaryTableReference : cliente as c2_0
                }
                left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado) {
                  primaryTableReference : empleado as e1_0
                }
                left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa) {
                  primaryTableReference : mesa as m1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:11:24.862 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:11:24.863 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Factura */ select id_factura from factura where id_factura=?
2025-06-08 21:11:24.864 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Factura */insert into factura (id_cliente,codigo,estado,fecha_emision,igv,id_pedido,subtotal,total) values (?,?,?,?,?,?,?,?)
2025-06-08 21:11:24.864 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Factura */update factura set id_cliente=?,codigo=?,estado=?,fecha_emision=?,igv=?,id_pedido=?,subtotal=?,total=? where id_factura=?
2025-06-08 21:11:24.864 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Factura */delete from factura where id_factura=?
2025-06-08 21:11:24.865 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:11:24.865 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:11:24.865 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.rol]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.usuario]

2025-06-08 21:11:24.866 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:11:24.866 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:11:24.866 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Empleado */ select id_empleado from empleado where id_empleado=?
2025-06-08 21:11:24.866 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */insert into empleado (estado,nombre,password,rol,usuario) values (?,?,?,?,?)
2025-06-08 21:11:24.867 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */update empleado set estado=?,nombre=?,password=?,rol=?,usuario=? where id_empleado=?
2025-06-08 21:11:24.867 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */delete from empleado where id_empleado=?
2025-06-08 21:11:24.867 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:11:24.867 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Seccion)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] 
2025-06-08 21:11:24.867 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Seccion]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion.detalle]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion.estado]

2025-06-08 21:11:24.868 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Seccion) {
          primaryTableReference : seccion as s1_0
        }
      }
    }

2025-06-08 21:11:24.868 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:11:24.869 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Seccion */ select id_seccion from seccion where id_seccion=?
2025-06-08 21:11:24.869 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */insert into seccion (detalle,estado) values (?,?)
2025-06-08 21:11:24.869 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */update seccion set detalle=?,estado=? where id_seccion=?
2025-06-08 21:11:24.870 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */delete from seccion where id_seccion=?
2025-06-08 21:11:24.870 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:11:24.870 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Cliente)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] 
2025-06-08 21:11:24.871 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Cliente]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.cantVisitas]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.email]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.nombre]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.telefono]

2025-06-08 21:11:24.871 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Cliente) {
          primaryTableReference : cliente as c1_0
        }
      }
    }

2025-06-08 21:11:24.872 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:11:24.872 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Cliente */ select id_cliente from cliente where id_cliente=?
2025-06-08 21:11:24.872 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */insert into cliente (apellido,cant_visitas,dni,email,estado,nombre,telefono) values (?,?,?,?,?,?,?)
2025-06-08 21:11:24.873 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */update cliente set apellido=?,cant_visitas=?,dni=?,email=?,estado=?,nombre=?,telefono=? where id_cliente=?
2025-06-08 21:11:24.873 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */delete from cliente where id_cliente=?
2025-06-08 21:11:24.874 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:11:24.874 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Menu)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu] 
2025-06-08 21:11:24.875 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@23a9ddf4] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido] 
2025-06-08 21:11:24.875 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:11:24.876 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@77dabe8] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente] 
2025-06-08 21:11:24.876 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:11:24.877 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5220adf4] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado] 
2025-06-08 21:11:24.877 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:11:24.878 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5d46d41d] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa] 
2025-06-08 21:11:24.879 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m2_0
2025-06-08 21:11:24.880 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@30ede43c] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto] 
2025-06-08 21:11:24.881 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p2_0
2025-06-08 21:11:24.881 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5aa53b22] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria] 
2025-06-08 21:11:24.881 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:11:24.882 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@dbd628f] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion] 
2025-06-08 21:11:24.882 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:11:24.883 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.codPedido]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.rol]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.total]
 |  \-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.descripcion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.precio]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion.detalle]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.stock]

2025-06-08 21:11:24.884 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu) {
          primaryTableReference : menu as m1_0
          TableGroupJoins {
            left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido) {
              primaryTableReference : pedido as p1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente) {
                  primaryTableReference : cliente as c1_0
                }
                left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado) {
                  primaryTableReference : empleado as e1_0
                }
                left  join LazyTableGroup (m2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa) {
                  primaryTableReference : mesa as m2_0
                }
              }
            }
            left  join LazyTableGroup (p2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto) {
              primaryTableReference : producto as p2_0
              TableGroupJoins {
                left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria) {
                  primaryTableReference : categoria as c2_0
                }
                left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion) {
                  primaryTableReference : seccion as s1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:11:24.885 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:11:24.885 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Menu */ select id_menu from menu where id_menu=?
2025-06-08 21:11:24.886 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Menu */insert into menu (cod_pedido,id_pedido,id_producto) values (?,?,?)
2025-06-08 21:11:24.886 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Menu */update menu set cod_pedido=?,id_pedido=?,id_producto=? where id_menu=?
2025-06-08 21:11:24.886 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Menu */delete from menu where id_menu=?
2025-06-08 21:11:24.887 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : dp1_0
2025-06-08 21:11:24.887 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.DetPedido)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] 
2025-06-08 21:11:24.888 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@39237de7] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura] 
2025-06-08 21:11:24.888 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2025-06-08 21:11:24.889 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4aac2dca] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente] 
2025-06-08 21:11:24.889 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:11:24.890 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2c63870a] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido] 
2025-06-08 21:11:24.891 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:11:24.891 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4f788bfe] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente] 
2025-06-08 21:11:24.891 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:11:24.892 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6d961bb3] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado] 
2025-06-08 21:11:24.892 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:11:24.893 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@46ffb9b6] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa] 
2025-06-08 21:11:24.894 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:11:24.895 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@76143db4] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido] 
2025-06-08 21:11:24.897 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p2_0
2025-06-08 21:11:24.897 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@274822a4] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente] 
2025-06-08 21:11:24.898 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c3_0
2025-06-08 21:11:24.898 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@f6d8e4] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado] 
2025-06-08 21:11:24.899 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e2_0
2025-06-08 21:11:24.899 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3f83d81] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa] 
2025-06-08 21:11:24.900 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m2_0
2025-06-08 21:11:24.900 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@77b4ec91] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto] 
2025-06-08 21:11:24.900 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p3_0
2025-06-08 21:11:24.901 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@110fbdc1] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria] 
2025-06-08 21:11:24.901 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c4_0
2025-06-08 21:11:24.901 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@270866fc] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion] 
2025-06-08 21:11:24.902 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:11:24.902 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.cantidad]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.estado]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.telefono]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.codigo]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.fechaEmision]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.igv]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cantPedidos]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.apellido]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.cantVisitas]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.dni]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.email]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.estado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.nombre]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.telefono]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.estado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.nombre]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.password]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.rol]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.usuario]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.fechaHora]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.capacidad]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.detalle]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.estado]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.numero]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.total]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.subtotal]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.igv]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.rol]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.precioUnitario]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.descripcion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.precio]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion.detalle]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.stock]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.subtotal]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.total]

2025-06-08 21:11:24.903 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (dp1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido) {
          primaryTableReference : detalle_pedido as dp1_0
          TableGroupJoins {
            left  join LazyTableGroup (f1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura) {
              primaryTableReference : factura as f1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente) {
                  primaryTableReference : cliente as c1_0
                }
                left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido) {
                  primaryTableReference : pedido as p1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente) {
                      primaryTableReference : cliente as c2_0
                    }
                    left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado) {
                      primaryTableReference : empleado as e1_0
                    }
                    left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa) {
                      primaryTableReference : mesa as m1_0
                    }
                  }
                }
              }
            }
             join LazyTableGroup (p2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido) {
              primaryTableReference : pedido as p2_0
              TableGroupJoins {
                left  join LazyTableGroup (c3 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente) {
                  primaryTableReference : cliente as c3_0
                }
                left  join LazyTableGroup (e2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado) {
                  primaryTableReference : empleado as e2_0
                }
                left  join LazyTableGroup (m2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa) {
                  primaryTableReference : mesa as m2_0
                }
              }
            }
             join LazyTableGroup (p3 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto) {
              primaryTableReference : producto as p3_0
              TableGroupJoins {
                left  join LazyTableGroup (c4 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria) {
                  primaryTableReference : categoria as c4_0
                }
                left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion) {
                  primaryTableReference : seccion as s1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:11:24.905 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:11:24.905 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */ select id_detalle_pedido from detalle_pedido where id_detalle_pedido=?
2025-06-08 21:11:24.905 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */insert into detalle_pedido (cantidad,estado,id_factura,igv,id_pedido,precio_unitario,id_producto,subtotal,total) values (?,?,?,?,?,?,?,?,?)
2025-06-08 21:11:24.906 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */update detalle_pedido set cantidad=?,estado=?,id_factura=?,igv=?,id_pedido=?,precio_unitario=?,id_producto=?,subtotal=?,total=? where id_detalle_pedido=?
2025-06-08 21:11:24.906 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */delete from detalle_pedido where id_detalle_pedido=?
2025-06-08 21:11:24.906 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:11:24.906 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Producto)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto] 
2025-06-08 21:11:24.907 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@355efbf7] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria] 
2025-06-08 21:11:24.907 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:11:24.908 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5953a928] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion] 
2025-06-08 21:11:24.908 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:11:24.908 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.descripcion]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.precio]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion.detalle]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.stock]

2025-06-08 21:11:24.909 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto) {
          primaryTableReference : producto as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria) {
              primaryTableReference : categoria as c1_0
            }
            left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion) {
              primaryTableReference : seccion as s1_0
            }
          }
        }
      }
    }

2025-06-08 21:11:24.909 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:11:24.909 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Producto */ select id_producto from producto where id_producto=?
2025-06-08 21:11:24.910 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Producto */insert into producto (id_categoria,descripcion,estado,nombre,precio,id_seccion,stock) values (?,?,?,?,?,?,?)
2025-06-08 21:11:24.910 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Producto */update producto set id_categoria=?,descripcion=?,estado=?,nombre=?,precio=?,id_seccion=?,stock=? where id_producto=?
2025-06-08 21:11:24.910 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Producto */delete from producto where id_producto=?
2025-06-08 21:11:24.911 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:11:24.911 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Categoria)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] 
2025-06-08 21:11:24.912 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Categoria]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Categoria.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Categoria.nombre]

2025-06-08 21:11:24.912 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Categoria) {
          primaryTableReference : categoria as c1_0
        }
      }
    }

2025-06-08 21:11:24.913 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:11:24.913 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Categoria */ select id_categoria from categoria where id_categoria=?
2025-06-08 21:11:24.913 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */insert into categoria (estado,nombre) values (?,?)
2025-06-08 21:11:24.914 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */update categoria set estado=?,nombre=? where id_categoria=?
2025-06-08 21:11:24.914 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */delete from categoria where id_categoria=?
2025-06-08 21:11:24.914 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:11:24.914 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Mesa)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] 
2025-06-08 21:11:24.914 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Mesa]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.capacidad]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.detalle]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.numero]

2025-06-08 21:11:24.915 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Mesa) {
          primaryTableReference : mesa as m1_0
        }
      }
    }

2025-06-08 21:11:24.915 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:11:24.916 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Mesa */ select id_mesa from mesa where id_mesa=?
2025-06-08 21:11:24.916 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */insert into mesa (capacidad,detalle,estado,numero) values (?,?,?,?)
2025-06-08 21:11:24.916 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */update mesa set capacidad=?,detalle=?,estado=?,numero=? where id_mesa=?
2025-06-08 21:11:24.916 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */delete from mesa where id_mesa=?
2025-06-08 21:11:24.917 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:11:24.917 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Pedido)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] 
2025-06-08 21:11:24.917 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2c41fd46] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente] 
2025-06-08 21:11:24.918 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:11:24.918 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@51eff07d] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado] 
2025-06-08 21:11:24.919 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:11:24.919 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1ddc1937] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa] 
2025-06-08 21:11:24.919 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:11:24.920 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cantPedidos]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.cantVisitas]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.email]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.nombre]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.telefono]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.password]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.rol]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.usuario]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.fechaHora]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.capacidad]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.detalle]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.numero]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.total]

2025-06-08 21:11:24.920 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido) {
          primaryTableReference : pedido as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente) {
              primaryTableReference : cliente as c1_0
            }
            left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado) {
              primaryTableReference : empleado as e1_0
            }
            left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa) {
              primaryTableReference : mesa as m1_0
            }
          }
        }
      }
    }

2025-06-08 21:11:24.921 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:11:24.921 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Pedido */ select id_pedido from pedido where id_pedido=?
2025-06-08 21:11:24.922 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */insert into pedido (cant_pedidos,id_cliente,id_empleado,estado,fecha_hora,id_mesa,total) values (?,?,?,?,?,?,?)
2025-06-08 21:11:24.922 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */update pedido set cant_pedidos=?,id_cliente=?,id_empleado=?,estado=?,fecha_hora=?,id_mesa=?,total=? where id_pedido=?
2025-06-08 21:11:24.922 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */delete from pedido where id_pedido=?
2025-06-08 21:11:24.952 [JavaFX-Launcher] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-08 21:11:24.953 [JavaFX-Launcher] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7b06cdc5] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@29f73708]
2025-06-08 21:11:24.955 [JavaFX-Launcher] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries
2025-06-08 21:11:24.955 [JavaFX-Launcher] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries
2025-06-08 21:11:25.003 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : categoria
2025-06-08 21:11:25.004 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : cliente
2025-06-08 21:11:25.004 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : detalle_pedido
2025-06-08 21:11:25.004 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : empleado
2025-06-08 21:11:25.005 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : factura
2025-06-08 21:11:25.005 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : menu
2025-06-08 21:11:25.005 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : mesa
2025-06-08 21:11:25.005 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : pedido
2025-06-08 21:11:25.006 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : producto
2025-06-08 21:11:25.006 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : seccion
2025-06-08 21:11:25.008 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@18f0126a
2025-06-08 21:11:25.008 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 3aa29376-3b9a-44e7-9d5b-a04afd86bd36 (<unnamed>)
2025-06-08 21:11:25.008 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-06-08 21:11:25.009 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory
2025-06-08 21:11:25.010 [JavaFX-Launcher] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-08 21:11:25.217 [JavaFX-Launcher] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2025-06-08 21:11:25.400 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy105.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:38)
	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:11:25.433 [JavaFX-Launcher] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-08 21:11:25.438 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy105.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:38)
	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:11:25.630 [JavaFX-Launcher] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:11:25.634 [JavaFX-Launcher] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-06-08 21:11:25.635 [JavaFX-Launcher] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-06-08 21:11:25.637 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:11:25.638 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-06-08 21:11:25.639 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:11:25.639 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:11:25.640 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:11:25.640 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:11:25.641 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:11:25.643 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:11:25.645 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:11:25.645 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:11:25.646 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:11:25.646 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:11:25.647 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:11:25.864 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - Started application in 6.666 seconds (process running for 7.724)
2025-06-08 21:11:26.258 [JavaFX-Launcher] INFO  p.e.u.p.ProyectoRestaurantApplication - === LISTADO DE EMPLEADOS ===
2025-06-08 21:11:26.273 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-08 21:11:26.273 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - begin
2025-06-08 21:11:26.391 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:11:26.392 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1))] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:11:26.405 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1)]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1).estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1).nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1).password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1).rol]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1).usuario]

2025-06-08 21:11:26.406 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1)) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:11:26.423 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:11:26.429 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id_empleado,
        e1_0.estado,
        e1_0.nombre,
        e1_0.password,
        e1_0.rol,
        e1_0.usuario 
    from
        empleado e1_0
2025-06-08 21:11:26.453 [JavaFX-Launcher] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1) -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(1))@1290542336 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:11:26.478 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - committing
2025-06-08 21:11:26.481 [JavaFX-Launcher] INFO  p.e.u.p.service.EmpleadoService - Total empleados encontrados: 3
2025-06-08 21:11:26.482 [JavaFX-Launcher] DEBUG p.e.u.p.service.EmpleadoService - Empleado: Empleado(idEmpleado=1, nombre=admin-juan, usuario=admin, password=123, estado=activo, rol=admin)
2025-06-08 21:11:26.483 [JavaFX-Launcher] DEBUG p.e.u.p.service.EmpleadoService - Empleado: Empleado(idEmpleado=2, nombre=caj-carlos, usuario=caj, password=123, estado=activo, rol=cajero)
2025-06-08 21:11:26.483 [JavaFX-Launcher] DEBUG p.e.u.p.service.EmpleadoService - Empleado: Empleado(idEmpleado=3, nombre=jhon, usuario=cont, password=123, estado=activo, rol=contador)
2025-06-08 21:11:26.483 [JavaFX-Launcher] INFO  p.e.u.p.ProyectoRestaurantApplication - ===========================
2025-06-08 21:11:34.381 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Intentando autenticar usuario: admin
2025-06-08 21:11:34.382 [JavaFX Application Thread] INFO  p.e.u.p.service.EmpleadoService - Iniciando proceso de login para usuario: admin
2025-06-08 21:11:34.383 [JavaFX Application Thread] DEBUG p.e.u.p.service.EmpleadoService - Password length: 3
2025-06-08 21:11:34.413 [JavaFX Application Thread] DEBUG org.hibernate.orm.query.plan.cache - Creating and caching NativeQuery ParameterInterpretation - ParameterInterpretationImpl (SELECT e.* FROM empleado e WHERE e.usuario = ?) : {
    
}
2025-06-08 21:11:34.523 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:11:34.524 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    /* dynamic native SQL query */ SELECT
        e.* 
    FROM
        empleado e 
    WHERE
        e.usuario = ?
2025-06-08 21:11:34.536 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Disallowing positional selections : SELECT e.* FROM empleado e WHERE e.usuario = :usuariox
2025-06-08 21:11:34.544 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado)@329601439 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:11:34.553 [JavaFX Application Thread] DEBUG p.e.u.p.service.EmpleadoService - Empleado encontrado: Empleado(idEmpleado=1, nombre=admin-juan, usuario=admin, password=123, estado=activo, rol=admin)
2025-06-08 21:11:34.555 [JavaFX Application Thread] INFO  p.e.u.p.service.EmpleadoService - Rol del empleado: 'admin' (sin trim)
2025-06-08 21:11:34.556 [JavaFX Application Thread] INFO  p.e.u.p.service.EmpleadoService - Rol del empleado (después de trim y toLowerCase): 'admin'
2025-06-08 21:11:34.560 [JavaFX Application Thread] DEBUG org.hibernate.orm.query.plan.cache - Creating and caching NativeQuery ParameterInterpretation - ParameterInterpretationImpl (SELECT e.* FROM empleado e WHERE e.usuario = ? AND e.password = ?) : {
    ,
    
}
2025-06-08 21:11:34.565 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:11:34.566 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    /* dynamic native SQL query */ SELECT
        e.* 
    FROM
        empleado e 
    WHERE
        e.usuario = ? 
        AND e.password = ?
2025-06-08 21:11:34.568 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Disallowing positional selections : SELECT e.* FROM empleado e WHERE e.usuario = :usuario AND e.password = :password
2025-06-08 21:11:34.570 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado)@1237052960 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:11:34.572 [JavaFX Application Thread] INFO  p.e.u.p.service.EmpleadoService - Login exitoso para el usuario: admin con rol: admin
2025-06-08 21:11:34.573 [JavaFX Application Thread] INFO  p.e.u.p.control.ControlLogin - Autenticación exitosa para el empleado: admin-juan con rol: admin
2025-06-08 21:11:34.615 [JavaFX Application Thread] INFO  p.e.u.p.control.GUIMainFX - Inicializando GUIMainFX
2025-06-08 21:11:34.838 [JavaFX Application Thread] INFO  p.e.u.p.control.ControlMenu - Inicializando ControlMenu
2025-06-08 21:11:34.846 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-08 21:11:34.846 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl - begin
2025-06-08 21:11:34.849 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:11:34.850 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Seccion(2))] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] 
2025-06-08 21:11:34.851 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Seccion(2)]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion(2).detalle]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion(2).estado]

2025-06-08 21:11:34.852 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Seccion(2)) {
          primaryTableReference : seccion as s1_0
        }
      }
    }

2025-06-08 21:11:34.855 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:11:34.856 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        s1_0.id_seccion,
        s1_0.detalle,
        s1_0.estado 
    from
        seccion s1_0
2025-06-08 21:11:34.859 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Seccion(2) -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Seccion(2))@557492676 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Seccion))

2025-06-08 21:11:34.861 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl - committing
2025-06-08 21:11:34.863 [JavaFX Application Thread] INFO  p.e.u.p.service.SeccionService - Total de secciones encontradas: 0
2025-06-08 21:11:34.866 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-08 21:11:34.867 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl - begin
2025-06-08 21:11:34.869 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:11:34.870 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Producto(3))] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto] 
2025-06-08 21:11:34.873 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@540d7e93] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).categoria] 
2025-06-08 21:11:34.877 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@71047755] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).seccion] 
2025-06-08 21:11:34.878 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto(3)]
 |  +-EntityFetchSelectImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).categoria]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).descripcion]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).precio]
 |  +-EntityFetchSelectImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).seccion]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).stock]

2025-06-08 21:11:34.879 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto(3)) {
          primaryTableReference : producto as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).categoria) {
            }
            left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).seccion) {
            }
          }
        }
      }
    }

2025-06-08 21:11:34.880 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:11:34.881 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id_producto,
        p1_0.id_categoria,
        p1_0.descripcion,
        p1_0.estado,
        p1_0.nombre,
        p1_0.precio,
        p1_0.id_seccion,
        p1_0.stock 
    from
        producto p1_0
2025-06-08 21:11:34.889 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).categoria -> EntitySelectFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).categoria)@2111751449 (ToOneAttributeMapping(NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria])@1429689288)
	  pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).seccion -> EntitySelectFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Producto(3).seccion)@1523742146 (ToOneAttributeMapping(NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion])@417695426)
	  pe.edu.upeu.proyecto_restaurant.modulo.Producto(3) -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Producto(3))@320368330 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Producto))

2025-06-08 21:11:34.893 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl - committing
2025-06-08 21:11:34.895 [JavaFX Application Thread] INFO  p.e.u.p.service.ProductoService - Total de productos encontrados: 0
2025-06-08 21:11:34.896 [JavaFX Application Thread] INFO  p.e.u.p.control.GUIMainFX - Vista cargada correctamente: /views/admMenu.fxml
2025-06-08 21:11:35.857 [JavaFX Application Thread] INFO  p.e.u.p.control.ControlLogin - Interfaz principal cargada correctamente para el rol: admin
2025-06-08 21:11:49.835 [JavaFX Application Thread] WARN  javafx - Loading FXML document with JavaFX API of version 23.0.1 by JavaFX runtime of version 21.0.1
2025-06-08 21:11:49.974 [JavaFX Application Thread] INFO  p.e.u.p.control.GUIMainFX - Vista cargada correctamente: /views/frmPedido.fxml
2025-06-08 21:14:19.048 [JavaFX Application Thread] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-08 21:14:19.050 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing
2025-06-08 21:14:19.053 [JavaFX Application Thread] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@55d932dd] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@29f73708]
2025-06-08 21:14:19.059 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2025-06-08 21:14:19.064 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2025-06-08 21:14:19.065 [JavaFX Application Thread] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-08 21:14:19.081 [JavaFX Application Thread] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-08 21:24:02.430 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:24:02.436 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:24:02.437 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:24:02.438 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:24:02.451 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:24:02.453 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:24:02.503 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:24:02.711 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:24:02.721 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:24:02.722 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:24:02.723 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:24:02.724 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:24:02.725 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:24:02.844 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - Starting application using Java 23.0.2 with PID 10584 (started by USUARIO in C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant)
2025-06-08 21:24:02.847 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-08 21:24:03.910 [JavaFX-Launcher] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-08 21:24:04.045 [JavaFX-Launcher] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 118 ms. Found 10 JPA repository interfaces.
2025-06-08 21:24:04.595 [JavaFX-Launcher] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@33909752
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/USUARIO/Documents/ProyectoRestaurantJava/ProyectoRestaurant/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		pe.edu.upeu.proyecto_restaurant.modelo.Empleado
		pe.edu.upeu.proyecto_restaurant.modulo.Categoria
		pe.edu.upeu.proyecto_restaurant.modulo.Cliente
		pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
		pe.edu.upeu.proyecto_restaurant.modulo.Empleado
		pe.edu.upeu.proyecto_restaurant.modulo.Factura
		pe.edu.upeu.proyecto_restaurant.modulo.Menu
		pe.edu.upeu.proyecto_restaurant.modulo.Mesa
		pe.edu.upeu.proyecto_restaurant.modulo.Pedido
		pe.edu.upeu.proyecto_restaurant.modulo.Producto
		pe.edu.upeu.proyecto_restaurant.modulo.Seccion]
	Mapping files names []
	Properties []
2025-06-08 21:24:04.601 [JavaFX-Launcher] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-06-08 21:24:04.604 [JavaFX-Launcher] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-06-08 21:24:04.666 [JavaFX-Launcher] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-08 21:24:04.669 [JavaFX-Launcher] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found
2025-06-08 21:24:04.698 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-06-08 21:24:04.700 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-06-08 21:24:04.701 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:24:04.702 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:24:04.704 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-06-08 21:24:04.707 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-06-08 21:24:04.708 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-06-08 21:24:04.711 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:24:04.713 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-06-08 21:24:04.715 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-06-08 21:24:04.716 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:24:04.717 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-06-08 21:24:04.728 [JavaFX-Launcher] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-06-08 21:24:04.729 [JavaFX-Launcher] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-08 21:24:04.828 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@334f115f
2025-06-08 21:24:04.829 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@334f115f
2025-06-08 21:24:04.830 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@334f115f
2025-06-08 21:24:04.830 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10691bb9
2025-06-08 21:24:04.831 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10691bb9
2025-06-08 21:24:04.831 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@333631b6
2025-06-08 21:24:04.832 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@333631b6
2025-06-08 21:24:04.832 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@b2a9e54
2025-06-08 21:24:04.832 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@b2a9e54
2025-06-08 21:24:04.833 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4024a387
2025-06-08 21:24:04.833 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4024a387
2025-06-08 21:24:04.833 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4024a387
2025-06-08 21:24:04.834 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1848cce9
2025-06-08 21:24:04.835 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1848cce9
2025-06-08 21:24:04.836 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1848cce9
2025-06-08 21:24:04.836 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1a71e5d7
2025-06-08 21:24:04.837 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1a71e5d7
2025-06-08 21:24:04.839 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@457600f3
2025-06-08 21:24:04.841 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@202bbb41
2025-06-08 21:24:04.842 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@202bbb41
2025-06-08 21:24:04.843 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7eda0429
2025-06-08 21:24:04.844 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6b100978
2025-06-08 21:24:04.845 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1e14fd71
2025-06-08 21:24:04.845 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1e14fd71
2025-06-08 21:24:04.846 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1e14fd71
2025-06-08 21:24:04.847 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6318ac41
2025-06-08 21:24:04.848 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@6318ac41
2025-06-08 21:24:04.848 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6318ac41
2025-06-08 21:24:04.849 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4d4d1747
2025-06-08 21:24:04.850 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4d4d1747
2025-06-08 21:24:04.851 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4d4d1747
2025-06-08 21:24:04.851 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@267d9c5f
2025-06-08 21:24:04.852 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@267d9c5f
2025-06-08 21:24:04.852 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@267d9c5f
2025-06-08 21:24:04.853 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1fbb0294
2025-06-08 21:24:04.853 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1fbb0294
2025-06-08 21:24:04.853 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1fbb0294
2025-06-08 21:24:04.854 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3967cf86
2025-06-08 21:24:04.855 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3967cf86
2025-06-08 21:24:04.857 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1c3510c2
2025-06-08 21:24:04.859 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1c3510c2
2025-06-08 21:24:04.860 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@56e0f87f
2025-06-08 21:24:04.861 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@56e0f87f
2025-06-08 21:24:04.861 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@56e0f87f
2025-06-08 21:24:04.862 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1108ef95
2025-06-08 21:24:04.862 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@161419cd
2025-06-08 21:24:04.863 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@161419cd
2025-06-08 21:24:04.864 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2293b8cd
2025-06-08 21:24:04.864 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@73618fe0
2025-06-08 21:24:04.865 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@73618fe0
2025-06-08 21:24:04.866 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@73618fe0
2025-06-08 21:24:04.866 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@25c3b25e
2025-06-08 21:24:04.867 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@132f0d5a
2025-06-08 21:24:04.867 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2c459a22
2025-06-08 21:24:04.867 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@53241ec5
2025-06-08 21:24:04.868 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@53241ec5
2025-06-08 21:24:04.868 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6bcd17bd
2025-06-08 21:24:04.869 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6bcd17bd
2025-06-08 21:24:04.869 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@638243
2025-06-08 21:24:04.870 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@778ce7
2025-06-08 21:24:04.870 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7356681a
2025-06-08 21:24:04.871 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7025f932
2025-06-08 21:24:04.872 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6cc80cef
2025-06-08 21:24:04.872 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5064a525
2025-06-08 21:24:04.873 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1032118b
2025-06-08 21:24:04.874 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1032118b
2025-06-08 21:24:04.875 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4f0186d6
2025-06-08 21:24:04.876 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4f0186d6
2025-06-08 21:24:04.876 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@638254ad
2025-06-08 21:24:04.877 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@638254ad
2025-06-08 21:24:04.877 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@163a9875
2025-06-08 21:24:04.877 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@163a9875
2025-06-08 21:24:04.878 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@16847d70
2025-06-08 21:24:04.878 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@16847d70
2025-06-08 21:24:04.879 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@55f06e40
2025-06-08 21:24:04.879 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@24a66f6f
2025-06-08 21:24:04.879 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@661db2be
2025-06-08 21:24:04.880 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@661db2be
2025-06-08 21:24:04.880 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@53c73cf0
2025-06-08 21:24:04.881 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@513daa6
2025-06-08 21:24:04.882 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1259107c
2025-06-08 21:24:04.883 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@19dac8cb
2025-06-08 21:24:04.883 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@19dac8cb
2025-06-08 21:24:04.884 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@739047bc
2025-06-08 21:24:04.884 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@68cd7582
2025-06-08 21:24:04.885 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@324d5217
2025-06-08 21:24:04.885 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@324d5217
2025-06-08 21:24:04.885 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@7d9e5805
2025-06-08 21:24:04.886 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7d9e5805
2025-06-08 21:24:04.886 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@c425dad
2025-06-08 21:24:04.887 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@c425dad
2025-06-08 21:24:04.888 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@c425dad
2025-06-08 21:24:04.889 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@f2058c2
2025-06-08 21:24:04.890 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@f2058c2
2025-06-08 21:24:04.890 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@f2058c2
2025-06-08 21:24:04.891 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@57a56edb
2025-06-08 21:24:04.892 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@46c5cbcc
2025-06-08 21:24:04.893 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@4b2e7d9e
2025-06-08 21:24:04.894 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4b2e7d9e
2025-06-08 21:24:04.894 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@37810196
2025-06-08 21:24:04.895 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@37810196
2025-06-08 21:24:04.895 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@37810196
2025-06-08 21:24:04.895 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4dddaba6
2025-06-08 21:24:04.896 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@25ae827a
2025-06-08 21:24:04.896 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1dd4c9dc
2025-06-08 21:24:04.896 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1dd4c9dc
2025-06-08 21:24:04.897 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@22e6e641
2025-06-08 21:24:04.897 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@22e6e641
2025-06-08 21:24:04.897 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@22e6e641
2025-06-08 21:24:04.897 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@246f920
2025-06-08 21:24:04.898 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@246f920
2025-06-08 21:24:04.898 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@53aa1640
2025-06-08 21:24:04.898 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@53aa1640
2025-06-08 21:24:04.899 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@680bafc0
2025-06-08 21:24:04.899 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@680bafc0
2025-06-08 21:24:04.899 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7dca986e
2025-06-08 21:24:04.900 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7dca986e
2025-06-08 21:24:04.900 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4870e10e
2025-06-08 21:24:04.900 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4870e10e
2025-06-08 21:24:04.901 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@4b6be656
2025-06-08 21:24:04.901 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@7e2b3554
2025-06-08 21:24:04.901 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@570bdb17
2025-06-08 21:24:04.901 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@18bc3869
2025-06-08 21:24:04.902 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@cf1247e
2025-06-08 21:24:04.909 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@50527a32
2025-06-08 21:24:04.910 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@50527a32
2025-06-08 21:24:04.911 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@13b0cee
2025-06-08 21:24:04.912 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1ecd3817
2025-06-08 21:24:04.912 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@23008e9
2025-06-08 21:24:04.913 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3fbdc549
2025-06-08 21:24:04.913 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6638f22c
2025-06-08 21:24:04.914 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1142737c
2025-06-08 21:24:04.914 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@13b746fd
2025-06-08 21:24:04.914 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@42714e4f
2025-06-08 21:24:04.915 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@63796dbf
2025-06-08 21:24:04.919 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6a742208] into BootstrapContext; was [null]
2025-06-08 21:24:04.920 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6a742208) [was null]
2025-06-08 21:24:04.921 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@646b637e] into BootstrapContext; was [null]
2025-06-08 21:24:04.922 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@54935340] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@758535cb]
2025-06-08 21:24:04.947 [JavaFX-Launcher] DEBUG o.h.j.b.i.PersistenceUnitInfoDescriptor - Pushing class transformers for PU named 'default' on loading classloader jdk.internal.loader.ClassLoaders$AppClassLoader@33909752
2025-06-08 21:24:05.179 [JavaFX-Launcher] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-08 21:24:05.180 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6a742208]
2025-06-08 21:24:05.181 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6a742208]
2025-06-08 21:24:05.219 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-08 21:24:05.371 [JavaFX-Launcher] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@745a9c6b
2025-06-08 21:24:05.374 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-08 21:24:05.384 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : SQLite
	version : 3.46.0
	  major : 3
	  minor : 46
2025-06-08 21:24:05.385 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : SQLite JDBC
	version : 3.46.0.0
	  major : 3
	  minor : 46
2025-06-08 21:24:05.386 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2
2025-06-08 21:24:05.416 [JavaFX-Launcher] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.community.dialect.SQLiteDialect, version: 3.46
2025-06-08 21:24:05.423 [JavaFX-Launcher] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-06-08 21:24:05.424 [JavaFX-Launcher] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2025-06-08 21:24:05.443 [JavaFX-Launcher] DEBUG org.hibernate.orm.jdbc.lob - HHH10010005: Disabling contextual LOB creation as createClob() method threw error : java.sql.SQLFeatureNotSupportedException
2025-06-08 21:24:05.453 [JavaFX-Launcher] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 3.46
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-08 21:24:05.479 [JavaFX-Launcher] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(PRIMITIVE_ARRAY_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-06-08 21:24:05.480 [JavaFX-Launcher] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STRING_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-08 21:24:05.486 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-06-08 21:24:05.487 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:24:05.487 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:24:05.495 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:24:05.495 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:24:05.496 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:24:05.496 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:24:05.497 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:24:05.497 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:24:05.498 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:24:05.499 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:24:05.499 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:24:05.500 [JavaFX-Launcher] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1d4c9fd8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71b68788]
2025-06-08 21:24:05.552 [JavaFX-Launcher] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-06-08 21:24:05.591 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modelo.Empleado
2025-06-08 21:24:05.600 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Empleado
2025-06-08 21:24:05.613 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modelo.Empleado on table empleados
2025-06-08 21:24:05.628 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:24:05.659 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:24:05.661 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modelo.Empleado] is safe
2025-06-08 21:24:05.661 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modelo.Empleado
2025-06-08 21:24:05.668 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-06-08 21:24:05.676 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modelo.Empleado:id]
2025-06-08 21:24:05.684 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id
2025-06-08 21:24:05.690 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleados.id
2025-06-08 21:24:05.692 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property id
2025-06-08 21:24:05.700 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-06-08 21:24:05.702 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:24:05.704 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:24:05.704 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modelo.Empleado:estado]
2025-06-08 21:24:05.705 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:24:05.706 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleados.estado
2025-06-08 21:24:05.707 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:24:05.709 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:24:05.710 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:24:05.711 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modelo.Empleado:nombre]
2025-06-08 21:24:05.712 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:24:05.712 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleados.nombre
2025-06-08 21:24:05.713 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:24:05.714 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:24:05.714 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-06-08 21:24:05.715 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modelo.Empleado:password]
2025-06-08 21:24:05.716 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password
2025-06-08 21:24:05.716 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleados.password
2025-06-08 21:24:05.717 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property password
2025-06-08 21:24:05.718 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:24:05.718 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property rol with lazy=false
2025-06-08 21:24:05.719 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modelo.Empleado:rol]
2025-06-08 21:24:05.719 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for rol
2025-06-08 21:24:05.720 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleados.rol
2025-06-08 21:24:05.721 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property rol
2025-06-08 21:24:05.725 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:24:05.726 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property usuario with lazy=false
2025-06-08 21:24:05.727 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modelo.Empleado:usuario]
2025-06-08 21:24:05.728 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for usuario
2025-06-08 21:24:05.728 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleados.usuario
2025-06-08 21:24:05.729 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property usuario
2025-06-08 21:24:05.731 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modelo
2025-06-08 21:24:05.739 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:24:05.741 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Categoria
2025-06-08 21:24:05.742 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Categoria on table categoria
2025-06-08 21:24:05.743 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:24:05.746 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_categoria')
2025-06-08 21:24:05.747 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:24:05.747 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:24:05.748 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCategoria with lazy=false
2025-06-08 21:24:05.748 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:idCategoria]
2025-06-08 21:24:05.749 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCategoria
2025-06-08 21:24:05.749 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.id_categoria
2025-06-08 21:24:05.750 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCategoria
2025-06-08 21:24:05.751 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_categoria)]), idCategoria, identity, , ...)
2025-06-08 21:24:05.751 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:24:05.752 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:24:05.753 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:estado]
2025-06-08 21:24:05.753 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:24:05.754 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.estado
2025-06-08 21:24:05.754 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:24:05.755 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:24:05.756 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:24:05.757 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:nombre]
2025-06-08 21:24:05.758 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:24:05.759 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.nombre
2025-06-08 21:24:05.759 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:24:05.760 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:24:05.761 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:24:05.762 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Cliente
2025-06-08 21:24:05.763 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Cliente on table cliente
2025-06-08 21:24:05.764 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:24:05.767 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_cliente')
2025-06-08 21:24:05.768 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:24:05.768 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:24:05.769 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCliente with lazy=false
2025-06-08 21:24:05.769 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:idCliente]
2025-06-08 21:24:05.769 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCliente
2025-06-08 21:24:05.770 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.id_cliente
2025-06-08 21:24:05.771 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCliente
2025-06-08 21:24:05.771 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_cliente)]), idCliente, identity, , ...)
2025-06-08 21:24:05.772 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='apellido')
2025-06-08 21:24:05.773 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property apellido with lazy=false
2025-06-08 21:24:05.773 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:apellido]
2025-06-08 21:24:05.774 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for apellido
2025-06-08 21:24:05.775 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.apellido
2025-06-08 21:24:05.775 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property apellido
2025-06-08 21:24:05.776 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cant_visitas')
2025-06-08 21:24:05.776 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantVisitas with lazy=false
2025-06-08 21:24:05.776 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:cantVisitas]
2025-06-08 21:24:05.777 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantVisitas
2025-06-08 21:24:05.777 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.cant_visitas
2025-06-08 21:24:05.777 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantVisitas
2025-06-08 21:24:05.778 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='dni')
2025-06-08 21:24:05.778 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property dni with lazy=false
2025-06-08 21:24:05.779 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:dni]
2025-06-08 21:24:05.779 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for dni
2025-06-08 21:24:05.780 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.dni
2025-06-08 21:24:05.780 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property dni
2025-06-08 21:24:05.780 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
2025-06-08 21:24:05.781 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-06-08 21:24:05.781 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:email]
2025-06-08 21:24:05.782 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email
2025-06-08 21:24:05.782 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.email
2025-06-08 21:24:05.782 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property email
2025-06-08 21:24:05.783 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:24:05.783 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:24:05.783 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:estado]
2025-06-08 21:24:05.783 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:24:05.783 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.estado
2025-06-08 21:24:05.784 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:24:05.784 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:24:05.785 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:24:05.785 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:nombre]
2025-06-08 21:24:05.786 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:24:05.786 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.nombre
2025-06-08 21:24:05.786 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:24:05.787 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='telefono')
2025-06-08 21:24:05.788 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property telefono with lazy=false
2025-06-08 21:24:05.788 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:telefono]
2025-06-08 21:24:05.789 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for telefono
2025-06-08 21:24:05.789 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.telefono
2025-06-08 21:24:05.790 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property telefono
2025-06-08 21:24:05.792 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:24:05.793 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:24:05.793 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name DetPedido
2025-06-08 21:24:05.794 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.DetPedido on table detalle_pedido
2025-06-08 21:24:05.794 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:24:05.802 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_detalle_pedido')
2025-06-08 21:24:05.803 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:24:05.804 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:24:05.805 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idDetallePedido with lazy=false
2025-06-08 21:24:05.806 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:idDetallePedido]
2025-06-08 21:24:05.807 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idDetallePedido
2025-06-08 21:24:05.808 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.id_detalle_pedido
2025-06-08 21:24:05.809 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idDetallePedido
2025-06-08 21:24:05.810 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_detalle_pedido)]), idDetallePedido, identity, , ...)
2025-06-08 21:24:05.811 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cantidad')
2025-06-08 21:24:05.812 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantidad with lazy=false
2025-06-08 21:24:05.812 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:cantidad]
2025-06-08 21:24:05.813 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantidad
2025-06-08 21:24:05.813 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.cantidad
2025-06-08 21:24:05.814 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantidad
2025-06-08 21:24:05.814 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:24:05.815 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:24:05.815 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:estado]
2025-06-08 21:24:05.816 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:24:05.816 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.estado
2025-06-08 21:24:05.817 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:24:05.819 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_factura',referencedColumn='id_factura')
2025-06-08 21:24:05.820 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:24:05.828 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property factura
2025-06-08 21:24:05.829 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='igv')
2025-06-08 21:24:05.831 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property igv with lazy=false
2025-06-08 21:24:05.831 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:igv]
2025-06-08 21:24:05.832 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for igv
2025-06-08 21:24:05.832 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.igv
2025-06-08 21:24:05.833 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property igv
2025-06-08 21:24:05.834 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:24:05.834 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:24:05.835 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:24:05.836 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio_unitario')
2025-06-08 21:24:05.837 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precioUnitario with lazy=false
2025-06-08 21:24:05.838 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:precioUnitario]
2025-06-08 21:24:05.839 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precioUnitario
2025-06-08 21:24:05.840 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.precio_unitario
2025-06-08 21:24:05.841 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property precioUnitario
2025-06-08 21:24:05.842 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_producto',referencedColumn='id_producto')
2025-06-08 21:24:05.843 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:24:05.844 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property producto
2025-06-08 21:24:05.845 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='subtotal')
2025-06-08 21:24:05.846 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property subtotal with lazy=false
2025-06-08 21:24:05.846 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:subtotal]
2025-06-08 21:24:05.847 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for subtotal
2025-06-08 21:24:05.848 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.subtotal
2025-06-08 21:24:05.848 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property subtotal
2025-06-08 21:24:05.849 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:24:05.850 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:24:05.851 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:total]
2025-06-08 21:24:05.851 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:24:05.852 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.total
2025-06-08 21:24:05.853 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:24:05.876 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:24:05.878 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:24:05.879 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Empleado
2025-06-08 21:24:05.880 [JavaFX-Launcher] DEBUG o.h.b.i.InFlightMetadataCollectorImpl - import name [Empleado] overrode previous [{pe.edu.upeu.proyecto_restaurant.modelo.Empleado}]
2025-06-08 21:24:05.880 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Empleado on table empleado
2025-06-08 21:24:05.881 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:24:05.885 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_empleado')
2025-06-08 21:24:05.885 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:24:05.886 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:24:05.887 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idEmpleado with lazy=false
2025-06-08 21:24:05.888 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:idEmpleado]
2025-06-08 21:24:05.888 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idEmpleado
2025-06-08 21:24:05.889 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.id_empleado
2025-06-08 21:24:05.890 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idEmpleado
2025-06-08 21:24:05.892 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_empleado)]), idEmpleado, identity, , ...)
2025-06-08 21:24:05.893 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:24:05.894 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:24:05.895 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:estado]
2025-06-08 21:24:05.895 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:24:05.896 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.estado
2025-06-08 21:24:05.897 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:24:05.898 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:24:05.898 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:24:05.899 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:nombre]
2025-06-08 21:24:05.900 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:24:05.901 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.nombre
2025-06-08 21:24:05.902 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:24:05.903 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password')
2025-06-08 21:24:05.905 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-06-08 21:24:05.906 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:password]
2025-06-08 21:24:05.907 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password
2025-06-08 21:24:05.908 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.password
2025-06-08 21:24:05.908 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property password
2025-06-08 21:24:05.910 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='rol')
2025-06-08 21:24:05.911 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property rol with lazy=false
2025-06-08 21:24:05.912 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:rol]
2025-06-08 21:24:05.913 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for rol
2025-06-08 21:24:05.913 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.rol
2025-06-08 21:24:05.914 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property rol
2025-06-08 21:24:05.915 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='usuario')
2025-06-08 21:24:05.916 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property usuario with lazy=false
2025-06-08 21:24:05.917 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:usuario]
2025-06-08 21:24:05.918 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for usuario
2025-06-08 21:24:05.919 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.usuario
2025-06-08 21:24:05.919 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property usuario
2025-06-08 21:24:05.921 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:24:05.923 [JavaFX-Launcher] DEBUG o.h.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
2025-06-08 21:24:05.925 [JavaFX-Launcher] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Entity classes [pe.edu.upeu.proyecto_restaurant.modelo.Empleado] and [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] share the entity name 'Empleado' (entity names must be distinct)
2025-06-08 21:24:05.927 [JavaFX-Launcher] WARN  o.s.c.a.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [pe.edu.upeu.proyecto_restaurant.modelo.Empleado] and [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] share the entity name 'Empleado' (entity names must be distinct)
2025-06-08 21:24:05.927 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-08 21:24:05.933 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-08 21:24:05.945 [JavaFX-Launcher] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-08 21:24:05.981 [JavaFX-Launcher] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [pe.edu.upeu.proyecto_restaurant.modelo.Empleado] and [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] share the entity name 'Empleado' (entity names must be distinct)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:39)
	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.hibernate.DuplicateMappingException: Entity classes [pe.edu.upeu.proyecto_restaurant.modelo.Empleado] and [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] share the entity name 'Empleado' (entity names must be distinct)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addEntityBinding(InFlightMetadataCollectorImpl.java:360)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:262)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:404)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:266)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:281)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:324)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 16 common frames omitted
2025-06-08 21:24:25.107 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:24:25.112 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:24:25.113 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:24:25.114 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:24:25.123 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:24:25.126 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:24:25.170 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:24:25.379 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:24:25.388 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:24:25.390 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:24:25.391 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:24:25.392 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:24:25.393 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:24:25.513 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - Starting application using Java 23.0.2 with PID 6240 (started by USUARIO in C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant)
2025-06-08 21:24:25.516 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-08 21:24:26.469 [JavaFX-Launcher] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-08 21:24:26.597 [JavaFX-Launcher] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 112 ms. Found 10 JPA repository interfaces.
2025-06-08 21:24:27.110 [JavaFX-Launcher] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@33909752
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/USUARIO/Documents/ProyectoRestaurantJava/ProyectoRestaurant/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		pe.edu.upeu.proyecto_restaurant.modelo.Empleado
		pe.edu.upeu.proyecto_restaurant.modulo.Categoria
		pe.edu.upeu.proyecto_restaurant.modulo.Cliente
		pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
		pe.edu.upeu.proyecto_restaurant.modulo.Empleado
		pe.edu.upeu.proyecto_restaurant.modulo.Factura
		pe.edu.upeu.proyecto_restaurant.modulo.Menu
		pe.edu.upeu.proyecto_restaurant.modulo.Mesa
		pe.edu.upeu.proyecto_restaurant.modulo.Pedido
		pe.edu.upeu.proyecto_restaurant.modulo.Producto
		pe.edu.upeu.proyecto_restaurant.modulo.Seccion]
	Mapping files names []
	Properties []
2025-06-08 21:24:27.119 [JavaFX-Launcher] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-06-08 21:24:27.121 [JavaFX-Launcher] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-06-08 21:24:27.186 [JavaFX-Launcher] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-08 21:24:27.188 [JavaFX-Launcher] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found
2025-06-08 21:24:27.211 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-06-08 21:24:27.213 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-06-08 21:24:27.214 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:24:27.215 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:24:27.216 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-06-08 21:24:27.218 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-06-08 21:24:27.219 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-06-08 21:24:27.221 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:24:27.222 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-06-08 21:24:27.224 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-06-08 21:24:27.224 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:24:27.226 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-06-08 21:24:27.235 [JavaFX-Launcher] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-06-08 21:24:27.236 [JavaFX-Launcher] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-08 21:24:27.333 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7a884589
2025-06-08 21:24:27.334 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7a884589
2025-06-08 21:24:27.335 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7a884589
2025-06-08 21:24:27.335 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@334f115f
2025-06-08 21:24:27.335 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@334f115f
2025-06-08 21:24:27.336 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@10691bb9
2025-06-08 21:24:27.336 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@10691bb9
2025-06-08 21:24:27.336 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@333631b6
2025-06-08 21:24:27.337 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@333631b6
2025-06-08 21:24:27.337 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@b2a9e54
2025-06-08 21:24:27.338 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@b2a9e54
2025-06-08 21:24:27.338 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@b2a9e54
2025-06-08 21:24:27.338 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@4024a387
2025-06-08 21:24:27.338 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4024a387
2025-06-08 21:24:27.339 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@4024a387
2025-06-08 21:24:27.340 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1848cce9
2025-06-08 21:24:27.340 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1848cce9
2025-06-08 21:24:27.341 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@1a71e5d7
2025-06-08 21:24:27.341 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@457600f3
2025-06-08 21:24:27.342 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@457600f3
2025-06-08 21:24:27.343 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@202bbb41
2025-06-08 21:24:27.345 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7eda0429
2025-06-08 21:24:27.346 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6b100978
2025-06-08 21:24:27.346 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6b100978
2025-06-08 21:24:27.347 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6b100978
2025-06-08 21:24:27.347 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1e14fd71
2025-06-08 21:24:27.348 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@1e14fd71
2025-06-08 21:24:27.348 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1e14fd71
2025-06-08 21:24:27.349 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6318ac41
2025-06-08 21:24:27.350 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6318ac41
2025-06-08 21:24:27.351 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6318ac41
2025-06-08 21:24:27.351 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4d4d1747
2025-06-08 21:24:27.352 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4d4d1747
2025-06-08 21:24:27.352 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4d4d1747
2025-06-08 21:24:27.352 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@267d9c5f
2025-06-08 21:24:27.353 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@267d9c5f
2025-06-08 21:24:27.353 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@267d9c5f
2025-06-08 21:24:27.353 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1fbb0294
2025-06-08 21:24:27.354 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1fbb0294
2025-06-08 21:24:27.354 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3967cf86
2025-06-08 21:24:27.355 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3967cf86
2025-06-08 21:24:27.355 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@1c3510c2
2025-06-08 21:24:27.356 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@1c3510c2
2025-06-08 21:24:27.356 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1c3510c2
2025-06-08 21:24:27.357 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@56e0f87f
2025-06-08 21:24:27.358 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1108ef95
2025-06-08 21:24:27.362 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1108ef95
2025-06-08 21:24:27.363 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@161419cd
2025-06-08 21:24:27.363 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2293b8cd
2025-06-08 21:24:27.364 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2293b8cd
2025-06-08 21:24:27.364 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2293b8cd
2025-06-08 21:24:27.365 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@73618fe0
2025-06-08 21:24:27.365 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@25c3b25e
2025-06-08 21:24:27.366 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@132f0d5a
2025-06-08 21:24:27.366 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2c459a22
2025-06-08 21:24:27.367 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2c459a22
2025-06-08 21:24:27.367 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@53241ec5
2025-06-08 21:24:27.368 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@53241ec5
2025-06-08 21:24:27.369 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6bcd17bd
2025-06-08 21:24:27.370 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@638243
2025-06-08 21:24:27.370 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@778ce7
2025-06-08 21:24:27.371 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7356681a
2025-06-08 21:24:27.371 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7025f932
2025-06-08 21:24:27.371 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6cc80cef
2025-06-08 21:24:27.372 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5064a525
2025-06-08 21:24:27.372 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5064a525
2025-06-08 21:24:27.372 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1032118b
2025-06-08 21:24:27.373 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1032118b
2025-06-08 21:24:27.375 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4f0186d6
2025-06-08 21:24:27.376 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4f0186d6
2025-06-08 21:24:27.377 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@638254ad
2025-06-08 21:24:27.378 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@638254ad
2025-06-08 21:24:27.379 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@163a9875
2025-06-08 21:24:27.379 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@163a9875
2025-06-08 21:24:27.380 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@16847d70
2025-06-08 21:24:27.380 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@55f06e40
2025-06-08 21:24:27.381 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@24a66f6f
2025-06-08 21:24:27.381 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@24a66f6f
2025-06-08 21:24:27.382 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@661db2be
2025-06-08 21:24:27.385 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@53c73cf0
2025-06-08 21:24:27.385 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@513daa6
2025-06-08 21:24:27.386 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1259107c
2025-06-08 21:24:27.386 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1259107c
2025-06-08 21:24:27.386 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@19dac8cb
2025-06-08 21:24:27.387 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@739047bc
2025-06-08 21:24:27.387 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@68cd7582
2025-06-08 21:24:27.387 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@68cd7582
2025-06-08 21:24:27.388 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@324d5217
2025-06-08 21:24:27.388 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@324d5217
2025-06-08 21:24:27.388 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7d9e5805
2025-06-08 21:24:27.389 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7d9e5805
2025-06-08 21:24:27.390 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7d9e5805
2025-06-08 21:24:27.392 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@c425dad
2025-06-08 21:24:27.393 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@c425dad
2025-06-08 21:24:27.394 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@c425dad
2025-06-08 21:24:27.396 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@f2058c2
2025-06-08 21:24:27.396 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@58744a5a
2025-06-08 21:24:27.397 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@46c5cbcc
2025-06-08 21:24:27.397 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@46c5cbcc
2025-06-08 21:24:27.397 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4b2e7d9e
2025-06-08 21:24:27.397 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4b2e7d9e
2025-06-08 21:24:27.398 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4b2e7d9e
2025-06-08 21:24:27.398 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@37810196
2025-06-08 21:24:27.399 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4dddaba6
2025-06-08 21:24:27.399 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@25ae827a
2025-06-08 21:24:27.399 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@25ae827a
2025-06-08 21:24:27.399 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@1dd4c9dc
2025-06-08 21:24:27.400 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1dd4c9dc
2025-06-08 21:24:27.400 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1dd4c9dc
2025-06-08 21:24:27.400 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@22e6e641
2025-06-08 21:24:27.401 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@22e6e641
2025-06-08 21:24:27.401 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@246f920
2025-06-08 21:24:27.402 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@246f920
2025-06-08 21:24:27.403 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@53aa1640
2025-06-08 21:24:27.403 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@53aa1640
2025-06-08 21:24:27.404 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@680bafc0
2025-06-08 21:24:27.404 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@680bafc0
2025-06-08 21:24:27.404 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7dca986e
2025-06-08 21:24:27.405 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7dca986e
2025-06-08 21:24:27.406 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@4870e10e
2025-06-08 21:24:27.406 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@4b6be656
2025-06-08 21:24:27.407 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@7e2b3554
2025-06-08 21:24:27.408 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@570bdb17
2025-06-08 21:24:27.410 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@18bc3869
2025-06-08 21:24:27.418 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@6b49202e
2025-06-08 21:24:27.418 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6b49202e
2025-06-08 21:24:27.420 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7c18251b
2025-06-08 21:24:27.420 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@13b0cee
2025-06-08 21:24:27.421 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1ecd3817
2025-06-08 21:24:27.421 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@23008e9
2025-06-08 21:24:27.422 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3fbdc549
2025-06-08 21:24:27.422 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6638f22c
2025-06-08 21:24:27.422 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1142737c
2025-06-08 21:24:27.422 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@13b746fd
2025-06-08 21:24:27.423 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@42714e4f
2025-06-08 21:24:27.429 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@36a36921] into BootstrapContext; was [null]
2025-06-08 21:24:27.430 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@36a36921) [was null]
2025-06-08 21:24:27.431 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4c2d4c5] into BootstrapContext; was [null]
2025-06-08 21:24:27.432 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@646b637e] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@54935340]
2025-06-08 21:24:27.458 [JavaFX-Launcher] DEBUG o.h.j.b.i.PersistenceUnitInfoDescriptor - Pushing class transformers for PU named 'default' on loading classloader jdk.internal.loader.ClassLoaders$AppClassLoader@33909752
2025-06-08 21:24:27.702 [JavaFX-Launcher] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-08 21:24:27.703 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@36a36921]
2025-06-08 21:24:27.703 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@36a36921]
2025-06-08 21:24:27.743 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-08 21:24:27.897 [JavaFX-Launcher] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@3f6afe1e
2025-06-08 21:24:27.900 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-08 21:24:27.908 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : SQLite
	version : 3.46.0
	  major : 3
	  minor : 46
2025-06-08 21:24:27.910 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : SQLite JDBC
	version : 3.46.0.0
	  major : 3
	  minor : 46
2025-06-08 21:24:27.911 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2
2025-06-08 21:24:27.940 [JavaFX-Launcher] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.community.dialect.SQLiteDialect, version: 3.46
2025-06-08 21:24:27.947 [JavaFX-Launcher] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-06-08 21:24:27.948 [JavaFX-Launcher] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2025-06-08 21:24:27.967 [JavaFX-Launcher] DEBUG org.hibernate.orm.jdbc.lob - HHH10010005: Disabling contextual LOB creation as createClob() method threw error : java.sql.SQLFeatureNotSupportedException
2025-06-08 21:24:27.982 [JavaFX-Launcher] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 3.46
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-08 21:24:28.015 [JavaFX-Launcher] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(PRIMITIVE_ARRAY_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-06-08 21:24:28.016 [JavaFX-Launcher] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STRING_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-08 21:24:28.023 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-06-08 21:24:28.024 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:24:28.025 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:24:28.032 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:24:28.032 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:24:28.033 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:24:28.034 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:24:28.034 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:24:28.035 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:24:28.037 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:24:28.037 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:24:28.038 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:24:28.040 [JavaFX-Launcher] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@61d66ec3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1d4c9fd8]
2025-06-08 21:24:28.112 [JavaFX-Launcher] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-06-08 21:24:28.151 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modelo.Empleado
2025-06-08 21:24:28.167 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Empleado
2025-06-08 21:24:28.184 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modelo.Empleado on table empleados
2025-06-08 21:24:28.204 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:24:28.253 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:24:28.257 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modelo.Empleado] is safe
2025-06-08 21:24:28.258 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modelo.Empleado
2025-06-08 21:24:28.264 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-06-08 21:24:28.271 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modelo.Empleado:id]
2025-06-08 21:24:28.278 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id
2025-06-08 21:24:28.282 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleados.id
2025-06-08 21:24:28.284 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property id
2025-06-08 21:24:28.294 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-06-08 21:24:28.297 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:24:28.298 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:24:28.299 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modelo.Empleado:estado]
2025-06-08 21:24:28.299 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:24:28.300 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleados.estado
2025-06-08 21:24:28.300 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:24:28.302 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:24:28.303 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:24:28.303 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modelo.Empleado:nombre]
2025-06-08 21:24:28.304 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:24:28.304 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleados.nombre
2025-06-08 21:24:28.305 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:24:28.306 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:24:28.306 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-06-08 21:24:28.307 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modelo.Empleado:password]
2025-06-08 21:24:28.308 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password
2025-06-08 21:24:28.308 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleados.password
2025-06-08 21:24:28.309 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property password
2025-06-08 21:24:28.311 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:24:28.312 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property rol with lazy=false
2025-06-08 21:24:28.312 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modelo.Empleado:rol]
2025-06-08 21:24:28.313 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for rol
2025-06-08 21:24:28.313 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleados.rol
2025-06-08 21:24:28.314 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property rol
2025-06-08 21:24:28.317 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:24:28.318 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property usuario with lazy=false
2025-06-08 21:24:28.319 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modelo.Empleado:usuario]
2025-06-08 21:24:28.319 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for usuario
2025-06-08 21:24:28.319 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleados.usuario
2025-06-08 21:24:28.320 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property usuario
2025-06-08 21:24:28.322 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modelo
2025-06-08 21:24:28.330 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:24:28.331 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Categoria
2025-06-08 21:24:28.332 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Categoria on table categoria
2025-06-08 21:24:28.333 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:24:28.335 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_categoria')
2025-06-08 21:24:28.336 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:24:28.337 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:24:28.338 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCategoria with lazy=false
2025-06-08 21:24:28.338 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:idCategoria]
2025-06-08 21:24:28.339 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCategoria
2025-06-08 21:24:28.339 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.id_categoria
2025-06-08 21:24:28.340 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCategoria
2025-06-08 21:24:28.341 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_categoria)]), idCategoria, identity, , ...)
2025-06-08 21:24:28.342 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:24:28.343 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:24:28.343 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:estado]
2025-06-08 21:24:28.344 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:24:28.345 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.estado
2025-06-08 21:24:28.346 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:24:28.347 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:24:28.347 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:24:28.348 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:nombre]
2025-06-08 21:24:28.348 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:24:28.349 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.nombre
2025-06-08 21:24:28.349 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:24:28.351 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:24:28.352 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:24:28.353 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Cliente
2025-06-08 21:24:28.353 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Cliente on table cliente
2025-06-08 21:24:28.354 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:24:28.358 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_cliente')
2025-06-08 21:24:28.358 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:24:28.359 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:24:28.360 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCliente with lazy=false
2025-06-08 21:24:28.360 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:idCliente]
2025-06-08 21:24:28.361 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCliente
2025-06-08 21:24:28.362 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.id_cliente
2025-06-08 21:24:28.362 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCliente
2025-06-08 21:24:28.363 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_cliente)]), idCliente, identity, , ...)
2025-06-08 21:24:28.363 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='apellido')
2025-06-08 21:24:28.364 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property apellido with lazy=false
2025-06-08 21:24:28.364 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:apellido]
2025-06-08 21:24:28.364 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for apellido
2025-06-08 21:24:28.365 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.apellido
2025-06-08 21:24:28.365 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property apellido
2025-06-08 21:24:28.366 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cant_visitas')
2025-06-08 21:24:28.366 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantVisitas with lazy=false
2025-06-08 21:24:28.366 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:cantVisitas]
2025-06-08 21:24:28.367 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantVisitas
2025-06-08 21:24:28.367 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.cant_visitas
2025-06-08 21:24:28.368 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantVisitas
2025-06-08 21:24:28.368 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='dni')
2025-06-08 21:24:28.369 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property dni with lazy=false
2025-06-08 21:24:28.369 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:dni]
2025-06-08 21:24:28.370 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for dni
2025-06-08 21:24:28.370 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.dni
2025-06-08 21:24:28.370 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property dni
2025-06-08 21:24:28.371 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
2025-06-08 21:24:28.371 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-06-08 21:24:28.372 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:email]
2025-06-08 21:24:28.372 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email
2025-06-08 21:24:28.372 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.email
2025-06-08 21:24:28.373 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property email
2025-06-08 21:24:28.373 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:24:28.374 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:24:28.374 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:estado]
2025-06-08 21:24:28.375 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:24:28.375 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.estado
2025-06-08 21:24:28.376 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:24:28.377 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:24:28.378 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:24:28.379 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:nombre]
2025-06-08 21:24:28.379 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:24:28.380 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.nombre
2025-06-08 21:24:28.381 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:24:28.381 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='telefono')
2025-06-08 21:24:28.382 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property telefono with lazy=false
2025-06-08 21:24:28.382 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:telefono]
2025-06-08 21:24:28.383 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for telefono
2025-06-08 21:24:28.383 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.telefono
2025-06-08 21:24:28.383 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property telefono
2025-06-08 21:24:28.385 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:24:28.385 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:24:28.386 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name DetPedido
2025-06-08 21:24:28.387 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.DetPedido on table detalle_pedido
2025-06-08 21:24:28.387 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:24:28.396 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_detalle_pedido')
2025-06-08 21:24:28.397 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:24:28.397 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:24:28.398 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idDetallePedido with lazy=false
2025-06-08 21:24:28.399 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:idDetallePedido]
2025-06-08 21:24:28.399 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idDetallePedido
2025-06-08 21:24:28.399 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.id_detalle_pedido
2025-06-08 21:24:28.400 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idDetallePedido
2025-06-08 21:24:28.400 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_detalle_pedido)]), idDetallePedido, identity, , ...)
2025-06-08 21:24:28.401 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cantidad')
2025-06-08 21:24:28.402 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantidad with lazy=false
2025-06-08 21:24:28.402 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:cantidad]
2025-06-08 21:24:28.402 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantidad
2025-06-08 21:24:28.403 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.cantidad
2025-06-08 21:24:28.403 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantidad
2025-06-08 21:24:28.404 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:24:28.405 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:24:28.405 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:estado]
2025-06-08 21:24:28.405 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:24:28.406 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.estado
2025-06-08 21:24:28.406 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:24:28.410 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_factura',referencedColumn='id_factura')
2025-06-08 21:24:28.411 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:24:28.418 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property factura
2025-06-08 21:24:28.419 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='igv')
2025-06-08 21:24:28.419 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property igv with lazy=false
2025-06-08 21:24:28.420 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:igv]
2025-06-08 21:24:28.421 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for igv
2025-06-08 21:24:28.421 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.igv
2025-06-08 21:24:28.421 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property igv
2025-06-08 21:24:28.422 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:24:28.423 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:24:28.424 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:24:28.425 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio_unitario')
2025-06-08 21:24:28.426 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precioUnitario with lazy=false
2025-06-08 21:24:28.427 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:precioUnitario]
2025-06-08 21:24:28.428 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precioUnitario
2025-06-08 21:24:28.429 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.precio_unitario
2025-06-08 21:24:28.429 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property precioUnitario
2025-06-08 21:24:28.430 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_producto',referencedColumn='id_producto')
2025-06-08 21:24:28.431 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:24:28.432 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property producto
2025-06-08 21:24:28.433 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='subtotal')
2025-06-08 21:24:28.433 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property subtotal with lazy=false
2025-06-08 21:24:28.434 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:subtotal]
2025-06-08 21:24:28.434 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for subtotal
2025-06-08 21:24:28.435 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.subtotal
2025-06-08 21:24:28.436 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property subtotal
2025-06-08 21:24:28.437 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:24:28.438 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:24:28.438 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:total]
2025-06-08 21:24:28.439 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:24:28.439 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.total
2025-06-08 21:24:28.440 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:24:28.442 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:24:28.444 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:24:28.444 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Empleado
2025-06-08 21:24:28.445 [JavaFX-Launcher] DEBUG o.h.b.i.InFlightMetadataCollectorImpl - import name [Empleado] overrode previous [{pe.edu.upeu.proyecto_restaurant.modelo.Empleado}]
2025-06-08 21:24:28.446 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Empleado on table empleado
2025-06-08 21:24:28.446 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:24:28.449 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_empleado')
2025-06-08 21:24:28.450 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:24:28.450 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:24:28.451 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idEmpleado with lazy=false
2025-06-08 21:24:28.451 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:idEmpleado]
2025-06-08 21:24:28.452 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idEmpleado
2025-06-08 21:24:28.452 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.id_empleado
2025-06-08 21:24:28.452 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idEmpleado
2025-06-08 21:24:28.453 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_empleado)]), idEmpleado, identity, , ...)
2025-06-08 21:24:28.453 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:24:28.454 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:24:28.454 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:estado]
2025-06-08 21:24:28.454 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:24:28.455 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.estado
2025-06-08 21:24:28.456 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:24:28.457 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:24:28.457 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:24:28.458 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:nombre]
2025-06-08 21:24:28.459 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:24:28.459 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.nombre
2025-06-08 21:24:28.460 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:24:28.461 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password')
2025-06-08 21:24:28.462 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-06-08 21:24:28.463 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:password]
2025-06-08 21:24:28.463 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password
2025-06-08 21:24:28.463 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.password
2025-06-08 21:24:28.464 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property password
2025-06-08 21:24:28.464 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='rol')
2025-06-08 21:24:28.465 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property rol with lazy=false
2025-06-08 21:24:28.465 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:rol]
2025-06-08 21:24:28.466 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for rol
2025-06-08 21:24:28.466 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.rol
2025-06-08 21:24:28.467 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property rol
2025-06-08 21:24:28.467 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='usuario')
2025-06-08 21:24:28.468 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property usuario with lazy=false
2025-06-08 21:24:28.468 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:usuario]
2025-06-08 21:24:28.468 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for usuario
2025-06-08 21:24:28.469 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.usuario
2025-06-08 21:24:28.469 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property usuario
2025-06-08 21:24:28.470 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:24:28.472 [JavaFX-Launcher] DEBUG o.h.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
2025-06-08 21:24:28.473 [JavaFX-Launcher] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Entity classes [pe.edu.upeu.proyecto_restaurant.modelo.Empleado] and [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] share the entity name 'Empleado' (entity names must be distinct)
2025-06-08 21:24:28.475 [JavaFX-Launcher] WARN  o.s.c.a.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [pe.edu.upeu.proyecto_restaurant.modelo.Empleado] and [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] share the entity name 'Empleado' (entity names must be distinct)
2025-06-08 21:24:28.476 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-08 21:24:28.482 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-08 21:24:28.494 [JavaFX-Launcher] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-08 21:24:28.530 [JavaFX-Launcher] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [pe.edu.upeu.proyecto_restaurant.modelo.Empleado] and [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] share the entity name 'Empleado' (entity names must be distinct)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:39)
	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.hibernate.DuplicateMappingException: Entity classes [pe.edu.upeu.proyecto_restaurant.modelo.Empleado] and [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] share the entity name 'Empleado' (entity names must be distinct)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addEntityBinding(InFlightMetadataCollectorImpl.java:360)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:262)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:404)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:266)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:281)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:324)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 16 common frames omitted
2025-06-08 21:24:56.129 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:24:56.133 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:24:56.134 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:24:56.136 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:24:56.148 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:24:56.150 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:24:56.198 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:24:56.456 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:24:56.468 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:24:56.468 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:24:56.470 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:24:56.470 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:24:56.470 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:24:56.572 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - Starting application using Java 23.0.2 with PID 1896 (started by USUARIO in C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant)
2025-06-08 21:24:56.575 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-08 21:24:57.570 [JavaFX-Launcher] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-08 21:24:57.703 [JavaFX-Launcher] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 117 ms. Found 10 JPA repository interfaces.
2025-06-08 21:24:58.281 [JavaFX-Launcher] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@33909752
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/USUARIO/Documents/ProyectoRestaurantJava/ProyectoRestaurant/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		pe.edu.upeu.proyecto_restaurant.modelo.Empleado
		pe.edu.upeu.proyecto_restaurant.modulo.Categoria
		pe.edu.upeu.proyecto_restaurant.modulo.Cliente
		pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
		pe.edu.upeu.proyecto_restaurant.modulo.Empleado
		pe.edu.upeu.proyecto_restaurant.modulo.Factura
		pe.edu.upeu.proyecto_restaurant.modulo.Menu
		pe.edu.upeu.proyecto_restaurant.modulo.Mesa
		pe.edu.upeu.proyecto_restaurant.modulo.Pedido
		pe.edu.upeu.proyecto_restaurant.modulo.Producto
		pe.edu.upeu.proyecto_restaurant.modulo.Seccion]
	Mapping files names []
	Properties []
2025-06-08 21:24:58.295 [JavaFX-Launcher] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-06-08 21:24:58.297 [JavaFX-Launcher] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-06-08 21:24:58.363 [JavaFX-Launcher] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-08 21:24:58.365 [JavaFX-Launcher] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found
2025-06-08 21:24:58.394 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-06-08 21:24:58.395 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-06-08 21:24:58.397 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:24:58.397 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:24:58.398 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-06-08 21:24:58.399 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-06-08 21:24:58.400 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-06-08 21:24:58.402 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:24:58.403 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-06-08 21:24:58.404 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-06-08 21:24:58.405 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:24:58.408 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-06-08 21:24:58.418 [JavaFX-Launcher] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-06-08 21:24:58.418 [JavaFX-Launcher] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-08 21:24:58.520 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@457600f3
2025-06-08 21:24:58.521 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@457600f3
2025-06-08 21:24:58.521 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@457600f3
2025-06-08 21:24:58.522 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@202bbb41
2025-06-08 21:24:58.522 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@202bbb41
2025-06-08 21:24:58.523 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7eda0429
2025-06-08 21:24:58.523 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7eda0429
2025-06-08 21:24:58.523 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6b100978
2025-06-08 21:24:58.524 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6b100978
2025-06-08 21:24:58.524 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1e14fd71
2025-06-08 21:24:58.524 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1e14fd71
2025-06-08 21:24:58.525 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1e14fd71
2025-06-08 21:24:58.525 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6318ac41
2025-06-08 21:24:58.525 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6318ac41
2025-06-08 21:24:58.526 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6318ac41
2025-06-08 21:24:58.527 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4d4d1747
2025-06-08 21:24:58.527 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4d4d1747
2025-06-08 21:24:58.527 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@267d9c5f
2025-06-08 21:24:58.528 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1fbb0294
2025-06-08 21:24:58.528 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1fbb0294
2025-06-08 21:24:58.529 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3967cf86
2025-06-08 21:24:58.530 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1c3510c2
2025-06-08 21:24:58.530 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@56e0f87f
2025-06-08 21:24:58.531 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@56e0f87f
2025-06-08 21:24:58.533 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@56e0f87f
2025-06-08 21:24:58.534 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1108ef95
2025-06-08 21:24:58.535 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@1108ef95
2025-06-08 21:24:58.535 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1108ef95
2025-06-08 21:24:58.536 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@161419cd
2025-06-08 21:24:58.537 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@161419cd
2025-06-08 21:24:58.538 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@161419cd
2025-06-08 21:24:58.538 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2293b8cd
2025-06-08 21:24:58.539 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2293b8cd
2025-06-08 21:24:58.539 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2293b8cd
2025-06-08 21:24:58.540 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@73618fe0
2025-06-08 21:24:58.540 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@73618fe0
2025-06-08 21:24:58.541 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73618fe0
2025-06-08 21:24:58.541 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@25c3b25e
2025-06-08 21:24:58.542 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@25c3b25e
2025-06-08 21:24:58.543 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@132f0d5a
2025-06-08 21:24:58.544 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@132f0d5a
2025-06-08 21:24:58.545 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@2c459a22
2025-06-08 21:24:58.545 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@2c459a22
2025-06-08 21:24:58.545 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2c459a22
2025-06-08 21:24:58.546 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@53241ec5
2025-06-08 21:24:58.546 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@6bcd17bd
2025-06-08 21:24:58.546 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6bcd17bd
2025-06-08 21:24:58.547 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@638243
2025-06-08 21:24:58.548 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@778ce7
2025-06-08 21:24:58.549 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@778ce7
2025-06-08 21:24:58.549 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@778ce7
2025-06-08 21:24:58.550 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7356681a
2025-06-08 21:24:58.550 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7025f932
2025-06-08 21:24:58.551 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6cc80cef
2025-06-08 21:24:58.551 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5064a525
2025-06-08 21:24:58.552 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5064a525
2025-06-08 21:24:58.552 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1032118b
2025-06-08 21:24:58.552 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1032118b
2025-06-08 21:24:58.552 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4f0186d6
2025-06-08 21:24:58.553 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@638254ad
2025-06-08 21:24:58.553 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@163a9875
2025-06-08 21:24:58.554 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@16847d70
2025-06-08 21:24:58.555 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@55f06e40
2025-06-08 21:24:58.555 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@24a66f6f
2025-06-08 21:24:58.555 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@661db2be
2025-06-08 21:24:58.556 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@661db2be
2025-06-08 21:24:58.557 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@53c73cf0
2025-06-08 21:24:58.558 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@53c73cf0
2025-06-08 21:24:58.558 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@513daa6
2025-06-08 21:24:58.559 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@513daa6
2025-06-08 21:24:58.560 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1259107c
2025-06-08 21:24:58.561 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1259107c
2025-06-08 21:24:58.561 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@19dac8cb
2025-06-08 21:24:58.561 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@19dac8cb
2025-06-08 21:24:58.562 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@739047bc
2025-06-08 21:24:58.562 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@68cd7582
2025-06-08 21:24:58.562 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@324d5217
2025-06-08 21:24:58.563 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@324d5217
2025-06-08 21:24:58.563 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7d9e5805
2025-06-08 21:24:58.564 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@c425dad
2025-06-08 21:24:58.565 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@f2058c2
2025-06-08 21:24:58.565 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@57a56edb
2025-06-08 21:24:58.566 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@57a56edb
2025-06-08 21:24:58.566 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@58744a5a
2025-06-08 21:24:58.567 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@46c5cbcc
2025-06-08 21:24:58.567 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@4b2e7d9e
2025-06-08 21:24:58.567 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4b2e7d9e
2025-06-08 21:24:58.568 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@37810196
2025-06-08 21:24:58.568 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@37810196
2025-06-08 21:24:58.569 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4dddaba6
2025-06-08 21:24:58.569 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4dddaba6
2025-06-08 21:24:58.570 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4dddaba6
2025-06-08 21:24:58.571 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@25ae827a
2025-06-08 21:24:58.571 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@25ae827a
2025-06-08 21:24:58.572 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@25ae827a
2025-06-08 21:24:58.573 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1dd4c9dc
2025-06-08 21:24:58.574 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@246f920
2025-06-08 21:24:58.574 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@53aa1640
2025-06-08 21:24:58.575 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@53aa1640
2025-06-08 21:24:58.576 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@680bafc0
2025-06-08 21:24:58.577 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@680bafc0
2025-06-08 21:24:58.578 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@680bafc0
2025-06-08 21:24:58.579 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7dca986e
2025-06-08 21:24:58.580 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4870e10e
2025-06-08 21:24:58.580 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4b6be656
2025-06-08 21:24:58.581 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4b6be656
2025-06-08 21:24:58.581 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7e2b3554
2025-06-08 21:24:58.581 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7e2b3554
2025-06-08 21:24:58.582 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7e2b3554
2025-06-08 21:24:58.582 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@570bdb17
2025-06-08 21:24:58.582 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@570bdb17
2025-06-08 21:24:58.582 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@18bc3869
2025-06-08 21:24:58.584 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@18bc3869
2025-06-08 21:24:58.584 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@cf1247e
2025-06-08 21:24:58.584 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@cf1247e
2025-06-08 21:24:58.585 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2b572121
2025-06-08 21:24:58.585 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2b572121
2025-06-08 21:24:58.585 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@228d843f
2025-06-08 21:24:58.587 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@228d843f
2025-06-08 21:24:58.587 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5b8b9f77
2025-06-08 21:24:58.588 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@5e5c82ac
2025-06-08 21:24:58.588 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@4c10ee6f
2025-06-08 21:24:58.588 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@27227ae
2025-06-08 21:24:58.590 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@58570b0
2025-06-08 21:24:58.596 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@d1e080e
2025-06-08 21:24:58.597 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@d1e080e
2025-06-08 21:24:58.599 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@42714e4f
2025-06-08 21:24:58.599 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@63796dbf
2025-06-08 21:24:58.599 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@61a22b3f
2025-06-08 21:24:58.601 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@480b0958
2025-06-08 21:24:58.601 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@403520
2025-06-08 21:24:58.601 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@28fcb402
2025-06-08 21:24:58.601 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@587789f1
2025-06-08 21:24:58.602 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@48261a6e
2025-06-08 21:24:58.602 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@49cedf7f
2025-06-08 21:24:58.609 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@758535cb] into BootstrapContext; was [null]
2025-06-08 21:24:58.610 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@758535cb) [was null]
2025-06-08 21:24:58.612 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@309f8a9c] into BootstrapContext; was [null]
2025-06-08 21:24:58.613 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@a7b061a] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4424a325]
2025-06-08 21:24:58.637 [JavaFX-Launcher] DEBUG o.h.j.b.i.PersistenceUnitInfoDescriptor - Pushing class transformers for PU named 'default' on loading classloader jdk.internal.loader.ClassLoaders$AppClassLoader@33909752
2025-06-08 21:24:58.936 [JavaFX-Launcher] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-08 21:24:58.937 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@758535cb]
2025-06-08 21:24:58.937 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@758535cb]
2025-06-08 21:24:58.978 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-08 21:24:59.091 [JavaFX-Launcher] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@36a9f4dc
2025-06-08 21:24:59.094 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-08 21:24:59.104 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : SQLite
	version : 3.46.0
	  major : 3
	  minor : 46
2025-06-08 21:24:59.105 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : SQLite JDBC
	version : 3.46.0.0
	  major : 3
	  minor : 46
2025-06-08 21:24:59.106 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2
2025-06-08 21:24:59.159 [JavaFX-Launcher] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.community.dialect.SQLiteDialect, version: 3.46
2025-06-08 21:24:59.164 [JavaFX-Launcher] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-06-08 21:24:59.165 [JavaFX-Launcher] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2025-06-08 21:24:59.188 [JavaFX-Launcher] DEBUG org.hibernate.orm.jdbc.lob - HHH10010005: Disabling contextual LOB creation as createClob() method threw error : java.sql.SQLFeatureNotSupportedException
2025-06-08 21:24:59.196 [JavaFX-Launcher] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 3.46
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-08 21:24:59.215 [JavaFX-Launcher] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(PRIMITIVE_ARRAY_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-06-08 21:24:59.216 [JavaFX-Launcher] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STRING_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-08 21:24:59.223 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-06-08 21:24:59.224 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:24:59.225 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:24:59.232 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:24:59.233 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:24:59.234 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:24:59.235 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:24:59.235 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:24:59.236 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:24:59.237 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:24:59.238 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:24:59.238 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:24:59.242 [JavaFX-Launcher] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3b669c96] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5a58785c]
2025-06-08 21:24:59.296 [JavaFX-Launcher] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-06-08 21:24:59.320 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modelo.Empleado
2025-06-08 21:24:59.329 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Empleado
2025-06-08 21:24:59.341 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modelo.Empleado on table empleados
2025-06-08 21:24:59.353 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:24:59.381 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:24:59.382 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modelo.Empleado] is safe
2025-06-08 21:24:59.383 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modelo.Empleado
2025-06-08 21:24:59.388 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-06-08 21:24:59.394 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modelo.Empleado:id]
2025-06-08 21:24:59.402 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id
2025-06-08 21:24:59.408 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleados.id
2025-06-08 21:24:59.410 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property id
2025-06-08 21:24:59.418 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-06-08 21:24:59.420 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:24:59.421 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:24:59.421 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modelo.Empleado:estado]
2025-06-08 21:24:59.422 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:24:59.423 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleados.estado
2025-06-08 21:24:59.423 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:24:59.425 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:24:59.426 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:24:59.426 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modelo.Empleado:nombre]
2025-06-08 21:24:59.427 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:24:59.428 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleados.nombre
2025-06-08 21:24:59.428 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:24:59.429 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:24:59.430 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-06-08 21:24:59.430 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modelo.Empleado:password]
2025-06-08 21:24:59.430 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password
2025-06-08 21:24:59.431 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleados.password
2025-06-08 21:24:59.431 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property password
2025-06-08 21:24:59.432 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:24:59.432 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property rol with lazy=false
2025-06-08 21:24:59.433 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modelo.Empleado:rol]
2025-06-08 21:24:59.433 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for rol
2025-06-08 21:24:59.433 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleados.rol
2025-06-08 21:24:59.434 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property rol
2025-06-08 21:24:59.436 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:24:59.437 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property usuario with lazy=false
2025-06-08 21:24:59.438 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modelo.Empleado:usuario]
2025-06-08 21:24:59.439 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for usuario
2025-06-08 21:24:59.440 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleados.usuario
2025-06-08 21:24:59.440 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property usuario
2025-06-08 21:24:59.444 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modelo
2025-06-08 21:24:59.450 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:24:59.451 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Categoria
2025-06-08 21:24:59.452 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Categoria on table categoria
2025-06-08 21:24:59.453 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:24:59.456 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_categoria')
2025-06-08 21:24:59.456 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:24:59.457 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:24:59.458 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCategoria with lazy=false
2025-06-08 21:24:59.459 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:idCategoria]
2025-06-08 21:24:59.459 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCategoria
2025-06-08 21:24:59.460 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.id_categoria
2025-06-08 21:24:59.461 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCategoria
2025-06-08 21:24:59.461 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_categoria)]), idCategoria, identity, , ...)
2025-06-08 21:24:59.462 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:24:59.463 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:24:59.463 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:estado]
2025-06-08 21:24:59.463 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:24:59.463 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.estado
2025-06-08 21:24:59.464 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:24:59.464 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:24:59.464 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:24:59.465 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:nombre]
2025-06-08 21:24:59.465 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:24:59.465 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.nombre
2025-06-08 21:24:59.465 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:24:59.466 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:24:59.467 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:24:59.467 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Cliente
2025-06-08 21:24:59.468 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Cliente on table cliente
2025-06-08 21:24:59.469 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:24:59.471 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_cliente')
2025-06-08 21:24:59.472 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:24:59.473 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:24:59.473 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCliente with lazy=false
2025-06-08 21:24:59.474 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:idCliente]
2025-06-08 21:24:59.474 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCliente
2025-06-08 21:24:59.475 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.id_cliente
2025-06-08 21:24:59.475 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCliente
2025-06-08 21:24:59.476 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_cliente)]), idCliente, identity, , ...)
2025-06-08 21:24:59.477 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='apellido')
2025-06-08 21:24:59.477 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property apellido with lazy=false
2025-06-08 21:24:59.477 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:apellido]
2025-06-08 21:24:59.478 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for apellido
2025-06-08 21:24:59.478 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.apellido
2025-06-08 21:24:59.478 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property apellido
2025-06-08 21:24:59.479 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cant_visitas')
2025-06-08 21:24:59.479 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantVisitas with lazy=false
2025-06-08 21:24:59.480 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:cantVisitas]
2025-06-08 21:24:59.480 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantVisitas
2025-06-08 21:24:59.480 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.cant_visitas
2025-06-08 21:24:59.480 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantVisitas
2025-06-08 21:24:59.481 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='dni')
2025-06-08 21:24:59.481 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property dni with lazy=false
2025-06-08 21:24:59.482 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:dni]
2025-06-08 21:24:59.482 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for dni
2025-06-08 21:24:59.482 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.dni
2025-06-08 21:24:59.482 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property dni
2025-06-08 21:24:59.482 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
2025-06-08 21:24:59.483 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-06-08 21:24:59.483 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:email]
2025-06-08 21:24:59.484 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email
2025-06-08 21:24:59.484 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.email
2025-06-08 21:24:59.485 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property email
2025-06-08 21:24:59.485 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:24:59.485 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:24:59.485 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:estado]
2025-06-08 21:24:59.486 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:24:59.486 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.estado
2025-06-08 21:24:59.486 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:24:59.487 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:24:59.487 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:24:59.487 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:nombre]
2025-06-08 21:24:59.488 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:24:59.488 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.nombre
2025-06-08 21:24:59.489 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:24:59.490 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='telefono')
2025-06-08 21:24:59.491 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property telefono with lazy=false
2025-06-08 21:24:59.492 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:telefono]
2025-06-08 21:24:59.492 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for telefono
2025-06-08 21:24:59.493 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.telefono
2025-06-08 21:24:59.493 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property telefono
2025-06-08 21:24:59.494 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:24:59.496 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:24:59.496 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name DetPedido
2025-06-08 21:24:59.496 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.DetPedido on table detalle_pedido
2025-06-08 21:24:59.497 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:24:59.506 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_detalle_pedido')
2025-06-08 21:24:59.507 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:24:59.507 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:24:59.508 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idDetallePedido with lazy=false
2025-06-08 21:24:59.509 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:idDetallePedido]
2025-06-08 21:24:59.510 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idDetallePedido
2025-06-08 21:24:59.511 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.id_detalle_pedido
2025-06-08 21:24:59.511 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idDetallePedido
2025-06-08 21:24:59.512 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_detalle_pedido)]), idDetallePedido, identity, , ...)
2025-06-08 21:24:59.512 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cantidad')
2025-06-08 21:24:59.513 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantidad with lazy=false
2025-06-08 21:24:59.514 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:cantidad]
2025-06-08 21:24:59.514 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantidad
2025-06-08 21:24:59.515 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.cantidad
2025-06-08 21:24:59.515 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantidad
2025-06-08 21:24:59.516 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:24:59.516 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:24:59.517 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:estado]
2025-06-08 21:24:59.517 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:24:59.518 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.estado
2025-06-08 21:24:59.518 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:24:59.521 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_factura',referencedColumn='id_factura')
2025-06-08 21:24:59.522 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:24:59.530 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property factura
2025-06-08 21:24:59.531 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='igv')
2025-06-08 21:24:59.532 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property igv with lazy=false
2025-06-08 21:24:59.532 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:igv]
2025-06-08 21:24:59.533 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for igv
2025-06-08 21:24:59.533 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.igv
2025-06-08 21:24:59.534 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property igv
2025-06-08 21:24:59.534 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:24:59.535 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:24:59.536 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:24:59.537 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio_unitario')
2025-06-08 21:24:59.537 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precioUnitario with lazy=false
2025-06-08 21:24:59.538 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:precioUnitario]
2025-06-08 21:24:59.539 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precioUnitario
2025-06-08 21:24:59.539 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.precio_unitario
2025-06-08 21:24:59.540 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property precioUnitario
2025-06-08 21:24:59.541 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_producto',referencedColumn='id_producto')
2025-06-08 21:24:59.542 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:24:59.543 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property producto
2025-06-08 21:24:59.544 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='subtotal')
2025-06-08 21:24:59.545 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property subtotal with lazy=false
2025-06-08 21:24:59.545 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:subtotal]
2025-06-08 21:24:59.546 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for subtotal
2025-06-08 21:24:59.547 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.subtotal
2025-06-08 21:24:59.547 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property subtotal
2025-06-08 21:24:59.548 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:24:59.549 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:24:59.550 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:total]
2025-06-08 21:24:59.550 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:24:59.551 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.total
2025-06-08 21:24:59.551 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:24:59.552 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:24:59.553 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:24:59.554 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Empleado
2025-06-08 21:24:59.555 [JavaFX-Launcher] DEBUG o.h.b.i.InFlightMetadataCollectorImpl - import name [Empleado] overrode previous [{pe.edu.upeu.proyecto_restaurant.modelo.Empleado}]
2025-06-08 21:24:59.556 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Empleado on table empleado
2025-06-08 21:24:59.557 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:24:59.560 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_empleado')
2025-06-08 21:24:59.561 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:24:59.562 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:24:59.562 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idEmpleado with lazy=false
2025-06-08 21:24:59.563 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:idEmpleado]
2025-06-08 21:24:59.563 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idEmpleado
2025-06-08 21:24:59.563 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.id_empleado
2025-06-08 21:24:59.564 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idEmpleado
2025-06-08 21:24:59.564 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_empleado)]), idEmpleado, identity, , ...)
2025-06-08 21:24:59.565 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:24:59.566 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:24:59.566 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:estado]
2025-06-08 21:24:59.567 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:24:59.567 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.estado
2025-06-08 21:24:59.568 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:24:59.569 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:24:59.570 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:24:59.570 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:nombre]
2025-06-08 21:24:59.570 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:24:59.571 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.nombre
2025-06-08 21:24:59.571 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:24:59.572 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password')
2025-06-08 21:24:59.573 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-06-08 21:24:59.574 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:password]
2025-06-08 21:24:59.574 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password
2025-06-08 21:24:59.574 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.password
2025-06-08 21:24:59.575 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property password
2025-06-08 21:24:59.576 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='rol')
2025-06-08 21:24:59.577 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property rol with lazy=false
2025-06-08 21:24:59.578 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:rol]
2025-06-08 21:24:59.578 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for rol
2025-06-08 21:24:59.579 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.rol
2025-06-08 21:24:59.579 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property rol
2025-06-08 21:24:59.580 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='usuario')
2025-06-08 21:24:59.580 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property usuario with lazy=false
2025-06-08 21:24:59.580 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:usuario]
2025-06-08 21:24:59.581 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for usuario
2025-06-08 21:24:59.581 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.usuario
2025-06-08 21:24:59.581 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property usuario
2025-06-08 21:24:59.582 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:24:59.583 [JavaFX-Launcher] DEBUG o.h.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
2025-06-08 21:24:59.584 [JavaFX-Launcher] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Entity classes [pe.edu.upeu.proyecto_restaurant.modelo.Empleado] and [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] share the entity name 'Empleado' (entity names must be distinct)
2025-06-08 21:24:59.586 [JavaFX-Launcher] WARN  o.s.c.a.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [pe.edu.upeu.proyecto_restaurant.modelo.Empleado] and [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] share the entity name 'Empleado' (entity names must be distinct)
2025-06-08 21:24:59.587 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-08 21:24:59.592 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-08 21:24:59.639 [JavaFX-Launcher] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-08 21:24:59.699 [JavaFX-Launcher] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [pe.edu.upeu.proyecto_restaurant.modelo.Empleado] and [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] share the entity name 'Empleado' (entity names must be distinct)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:39)
	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.hibernate.DuplicateMappingException: Entity classes [pe.edu.upeu.proyecto_restaurant.modelo.Empleado] and [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] share the entity name 'Empleado' (entity names must be distinct)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addEntityBinding(InFlightMetadataCollectorImpl.java:360)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:262)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:404)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:266)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:281)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:324)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 16 common frames omitted
2025-06-08 21:30:21.143 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:30:21.150 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:30:21.151 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:30:21.152 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:30:21.161 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:30:21.165 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:30:21.206 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:30:21.437 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:30:21.449 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:30:21.450 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:30:21.451 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:30:21.452 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:30:21.453 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:30:21.544 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - Starting application using Java 23.0.2 with PID 1568 (started by USUARIO in C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant)
2025-06-08 21:30:21.547 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-08 21:30:22.569 [JavaFX-Launcher] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-08 21:30:22.700 [JavaFX-Launcher] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 114 ms. Found 10 JPA repository interfaces.
2025-06-08 21:30:23.230 [JavaFX-Launcher] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@33909752
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/USUARIO/Documents/ProyectoRestaurantJava/ProyectoRestaurant/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		pe.edu.upeu.proyecto_restaurant.modulo.Categoria
		pe.edu.upeu.proyecto_restaurant.modulo.Cliente
		pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
		pe.edu.upeu.proyecto_restaurant.modulo.Empleado
		pe.edu.upeu.proyecto_restaurant.modulo.Factura
		pe.edu.upeu.proyecto_restaurant.modulo.Menu
		pe.edu.upeu.proyecto_restaurant.modulo.Mesa
		pe.edu.upeu.proyecto_restaurant.modulo.Pedido
		pe.edu.upeu.proyecto_restaurant.modulo.Producto
		pe.edu.upeu.proyecto_restaurant.modulo.Seccion]
	Mapping files names []
	Properties []
2025-06-08 21:30:23.245 [JavaFX-Launcher] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-06-08 21:30:23.248 [JavaFX-Launcher] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-06-08 21:30:23.328 [JavaFX-Launcher] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-08 21:30:23.330 [JavaFX-Launcher] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found
2025-06-08 21:30:23.359 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-06-08 21:30:23.360 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-06-08 21:30:23.363 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:30:23.363 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:30:23.364 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-06-08 21:30:23.367 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-06-08 21:30:23.368 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-06-08 21:30:23.370 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:30:23.371 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-06-08 21:30:23.373 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-06-08 21:30:23.373 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:30:23.375 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-06-08 21:30:23.384 [JavaFX-Launcher] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-06-08 21:30:23.386 [JavaFX-Launcher] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-08 21:30:23.486 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@457600f3
2025-06-08 21:30:23.487 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@457600f3
2025-06-08 21:30:23.488 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@457600f3
2025-06-08 21:30:23.488 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@202bbb41
2025-06-08 21:30:23.489 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@202bbb41
2025-06-08 21:30:23.489 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7eda0429
2025-06-08 21:30:23.489 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7eda0429
2025-06-08 21:30:23.490 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6b100978
2025-06-08 21:30:23.490 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6b100978
2025-06-08 21:30:23.490 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1e14fd71
2025-06-08 21:30:23.490 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1e14fd71
2025-06-08 21:30:23.491 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1e14fd71
2025-06-08 21:30:23.491 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6318ac41
2025-06-08 21:30:23.492 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6318ac41
2025-06-08 21:30:23.492 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6318ac41
2025-06-08 21:30:23.493 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4d4d1747
2025-06-08 21:30:23.493 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4d4d1747
2025-06-08 21:30:23.493 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@267d9c5f
2025-06-08 21:30:23.494 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1fbb0294
2025-06-08 21:30:23.494 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1fbb0294
2025-06-08 21:30:23.495 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3967cf86
2025-06-08 21:30:23.496 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1c3510c2
2025-06-08 21:30:23.496 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@56e0f87f
2025-06-08 21:30:23.497 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@56e0f87f
2025-06-08 21:30:23.498 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@56e0f87f
2025-06-08 21:30:23.499 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1108ef95
2025-06-08 21:30:23.499 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@1108ef95
2025-06-08 21:30:23.499 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1108ef95
2025-06-08 21:30:23.500 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@161419cd
2025-06-08 21:30:23.500 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@161419cd
2025-06-08 21:30:23.500 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@161419cd
2025-06-08 21:30:23.500 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2293b8cd
2025-06-08 21:30:23.501 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2293b8cd
2025-06-08 21:30:23.501 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2293b8cd
2025-06-08 21:30:23.502 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@73618fe0
2025-06-08 21:30:23.502 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@73618fe0
2025-06-08 21:30:23.503 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73618fe0
2025-06-08 21:30:23.504 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@25c3b25e
2025-06-08 21:30:23.504 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@25c3b25e
2025-06-08 21:30:23.504 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@132f0d5a
2025-06-08 21:30:23.505 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@132f0d5a
2025-06-08 21:30:23.505 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@2c459a22
2025-06-08 21:30:23.505 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@2c459a22
2025-06-08 21:30:23.506 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2c459a22
2025-06-08 21:30:23.507 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@53241ec5
2025-06-08 21:30:23.508 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@6bcd17bd
2025-06-08 21:30:23.508 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6bcd17bd
2025-06-08 21:30:23.509 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@638243
2025-06-08 21:30:23.510 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@778ce7
2025-06-08 21:30:23.510 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@778ce7
2025-06-08 21:30:23.511 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@778ce7
2025-06-08 21:30:23.512 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7356681a
2025-06-08 21:30:23.512 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7025f932
2025-06-08 21:30:23.514 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6cc80cef
2025-06-08 21:30:23.515 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5064a525
2025-06-08 21:30:23.515 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5064a525
2025-06-08 21:30:23.515 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1032118b
2025-06-08 21:30:23.516 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1032118b
2025-06-08 21:30:23.516 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4f0186d6
2025-06-08 21:30:23.517 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@638254ad
2025-06-08 21:30:23.517 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@163a9875
2025-06-08 21:30:23.518 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@16847d70
2025-06-08 21:30:23.519 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@55f06e40
2025-06-08 21:30:23.519 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@24a66f6f
2025-06-08 21:30:23.520 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@661db2be
2025-06-08 21:30:23.520 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@661db2be
2025-06-08 21:30:23.521 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@53c73cf0
2025-06-08 21:30:23.522 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@53c73cf0
2025-06-08 21:30:23.523 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@513daa6
2025-06-08 21:30:23.524 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@513daa6
2025-06-08 21:30:23.525 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1259107c
2025-06-08 21:30:23.526 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1259107c
2025-06-08 21:30:23.527 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@19dac8cb
2025-06-08 21:30:23.528 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@19dac8cb
2025-06-08 21:30:23.530 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@739047bc
2025-06-08 21:30:23.532 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@68cd7582
2025-06-08 21:30:23.533 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@324d5217
2025-06-08 21:30:23.534 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@324d5217
2025-06-08 21:30:23.535 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7d9e5805
2025-06-08 21:30:23.538 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@c425dad
2025-06-08 21:30:23.538 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@f2058c2
2025-06-08 21:30:23.540 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@57a56edb
2025-06-08 21:30:23.540 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@57a56edb
2025-06-08 21:30:23.540 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@58744a5a
2025-06-08 21:30:23.541 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@46c5cbcc
2025-06-08 21:30:23.541 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@4b2e7d9e
2025-06-08 21:30:23.541 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4b2e7d9e
2025-06-08 21:30:23.543 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@37810196
2025-06-08 21:30:23.544 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@37810196
2025-06-08 21:30:23.546 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4dddaba6
2025-06-08 21:30:23.547 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4dddaba6
2025-06-08 21:30:23.548 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4dddaba6
2025-06-08 21:30:23.550 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@25ae827a
2025-06-08 21:30:23.551 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@25ae827a
2025-06-08 21:30:23.552 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@25ae827a
2025-06-08 21:30:23.553 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1dd4c9dc
2025-06-08 21:30:23.554 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@246f920
2025-06-08 21:30:23.555 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@53aa1640
2025-06-08 21:30:23.555 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@53aa1640
2025-06-08 21:30:23.556 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@680bafc0
2025-06-08 21:30:23.557 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@680bafc0
2025-06-08 21:30:23.558 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@680bafc0
2025-06-08 21:30:23.558 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7dca986e
2025-06-08 21:30:23.559 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4870e10e
2025-06-08 21:30:23.560 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4b6be656
2025-06-08 21:30:23.561 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4b6be656
2025-06-08 21:30:23.562 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7e2b3554
2025-06-08 21:30:23.563 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7e2b3554
2025-06-08 21:30:23.564 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7e2b3554
2025-06-08 21:30:23.565 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@570bdb17
2025-06-08 21:30:23.566 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@570bdb17
2025-06-08 21:30:23.567 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@18bc3869
2025-06-08 21:30:23.568 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@18bc3869
2025-06-08 21:30:23.568 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@cf1247e
2025-06-08 21:30:23.569 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@cf1247e
2025-06-08 21:30:23.569 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2b572121
2025-06-08 21:30:23.570 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2b572121
2025-06-08 21:30:23.571 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@228d843f
2025-06-08 21:30:23.571 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@228d843f
2025-06-08 21:30:23.572 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5b8b9f77
2025-06-08 21:30:23.573 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@5e5c82ac
2025-06-08 21:30:23.573 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@4c10ee6f
2025-06-08 21:30:23.574 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@27227ae
2025-06-08 21:30:23.574 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@58570b0
2025-06-08 21:30:23.584 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@d1e080e
2025-06-08 21:30:23.586 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@d1e080e
2025-06-08 21:30:23.589 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@42714e4f
2025-06-08 21:30:23.590 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@63796dbf
2025-06-08 21:30:23.591 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@61a22b3f
2025-06-08 21:30:23.592 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@480b0958
2025-06-08 21:30:23.592 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@403520
2025-06-08 21:30:23.593 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@28fcb402
2025-06-08 21:30:23.593 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@587789f1
2025-06-08 21:30:23.594 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@48261a6e
2025-06-08 21:30:23.595 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@49cedf7f
2025-06-08 21:30:23.605 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@758535cb] into BootstrapContext; was [null]
2025-06-08 21:30:23.605 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@758535cb) [was null]
2025-06-08 21:30:23.606 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@309f8a9c] into BootstrapContext; was [null]
2025-06-08 21:30:23.607 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@a7b061a] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4424a325]
2025-06-08 21:30:23.644 [JavaFX-Launcher] DEBUG o.h.j.b.i.PersistenceUnitInfoDescriptor - Pushing class transformers for PU named 'default' on loading classloader jdk.internal.loader.ClassLoaders$AppClassLoader@33909752
2025-06-08 21:30:23.921 [JavaFX-Launcher] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-08 21:30:23.922 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@758535cb]
2025-06-08 21:30:23.923 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@758535cb]
2025-06-08 21:30:23.960 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-08 21:30:24.107 [JavaFX-Launcher] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@36a9f4dc
2025-06-08 21:30:24.111 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-08 21:30:24.123 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : SQLite
	version : 3.46.0
	  major : 3
	  minor : 46
2025-06-08 21:30:24.123 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : SQLite JDBC
	version : 3.46.0.0
	  major : 3
	  minor : 46
2025-06-08 21:30:24.124 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2
2025-06-08 21:30:24.186 [JavaFX-Launcher] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.community.dialect.SQLiteDialect, version: 3.46
2025-06-08 21:30:24.200 [JavaFX-Launcher] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-06-08 21:30:24.201 [JavaFX-Launcher] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2025-06-08 21:30:24.239 [JavaFX-Launcher] DEBUG org.hibernate.orm.jdbc.lob - HHH10010005: Disabling contextual LOB creation as createClob() method threw error : java.sql.SQLFeatureNotSupportedException
2025-06-08 21:30:24.258 [JavaFX-Launcher] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 3.46
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-08 21:30:24.295 [JavaFX-Launcher] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(PRIMITIVE_ARRAY_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-06-08 21:30:24.298 [JavaFX-Launcher] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STRING_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-08 21:30:24.310 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-06-08 21:30:24.312 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:30:24.313 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:30:24.326 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:30:24.330 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:30:24.331 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:30:24.332 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:30:24.333 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:30:24.334 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:30:24.336 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:30:24.337 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:30:24.340 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:30:24.347 [JavaFX-Launcher] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3b669c96] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5a58785c]
2025-06-08 21:30:24.474 [JavaFX-Launcher] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-06-08 21:30:24.537 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:30:24.568 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Categoria
2025-06-08 21:30:24.601 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Categoria on table categoria
2025-06-08 21:30:24.637 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:30:24.696 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_categoria')
2025-06-08 21:30:24.702 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:30:24.704 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:30:24.714 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCategoria with lazy=false
2025-06-08 21:30:24.725 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:idCategoria]
2025-06-08 21:30:24.736 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCategoria
2025-06-08 21:30:24.742 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.id_categoria
2025-06-08 21:30:24.744 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCategoria
2025-06-08 21:30:24.756 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_categoria)]), idCategoria, identity, , ...)
2025-06-08 21:30:24.760 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:30:24.762 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:30:24.765 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:estado]
2025-06-08 21:30:24.768 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:30:24.770 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.estado
2025-06-08 21:30:24.772 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:30:24.773 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:30:24.777 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:30:24.778 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:nombre]
2025-06-08 21:30:24.779 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:30:24.785 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.nombre
2025-06-08 21:30:24.786 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:30:24.793 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:30:24.806 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:30:24.808 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Cliente
2025-06-08 21:30:24.809 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Cliente on table cliente
2025-06-08 21:30:24.815 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:30:24.820 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_cliente')
2025-06-08 21:30:24.821 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:30:24.823 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:30:24.824 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCliente with lazy=false
2025-06-08 21:30:24.825 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:idCliente]
2025-06-08 21:30:24.826 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCliente
2025-06-08 21:30:24.828 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.id_cliente
2025-06-08 21:30:24.832 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCliente
2025-06-08 21:30:24.833 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_cliente)]), idCliente, identity, , ...)
2025-06-08 21:30:24.834 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='apellido')
2025-06-08 21:30:24.835 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property apellido with lazy=false
2025-06-08 21:30:24.836 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:apellido]
2025-06-08 21:30:24.837 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for apellido
2025-06-08 21:30:24.838 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.apellido
2025-06-08 21:30:24.838 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property apellido
2025-06-08 21:30:24.840 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cant_visitas')
2025-06-08 21:30:24.840 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantVisitas with lazy=false
2025-06-08 21:30:24.841 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:cantVisitas]
2025-06-08 21:30:24.842 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantVisitas
2025-06-08 21:30:24.843 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.cant_visitas
2025-06-08 21:30:24.846 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantVisitas
2025-06-08 21:30:24.853 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='dni')
2025-06-08 21:30:24.854 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property dni with lazy=false
2025-06-08 21:30:24.855 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:dni]
2025-06-08 21:30:24.855 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for dni
2025-06-08 21:30:24.856 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.dni
2025-06-08 21:30:24.857 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property dni
2025-06-08 21:30:24.858 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
2025-06-08 21:30:24.859 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-06-08 21:30:24.861 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:email]
2025-06-08 21:30:24.862 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email
2025-06-08 21:30:24.862 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.email
2025-06-08 21:30:24.863 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property email
2025-06-08 21:30:24.865 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:30:24.868 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:30:24.868 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:estado]
2025-06-08 21:30:24.869 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:30:24.870 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.estado
2025-06-08 21:30:24.871 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:30:24.872 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:30:24.873 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:30:24.874 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:nombre]
2025-06-08 21:30:24.875 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:30:24.875 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.nombre
2025-06-08 21:30:24.876 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:30:24.877 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='telefono')
2025-06-08 21:30:24.879 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property telefono with lazy=false
2025-06-08 21:30:24.880 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:telefono]
2025-06-08 21:30:24.883 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for telefono
2025-06-08 21:30:24.885 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.telefono
2025-06-08 21:30:24.886 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property telefono
2025-06-08 21:30:24.888 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:30:24.889 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:30:24.890 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name DetPedido
2025-06-08 21:30:24.892 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.DetPedido on table detalle_pedido
2025-06-08 21:30:24.895 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:30:24.916 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_detalle_pedido')
2025-06-08 21:30:24.918 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:30:24.918 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:30:24.919 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idDetallePedido with lazy=false
2025-06-08 21:30:24.920 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:idDetallePedido]
2025-06-08 21:30:24.922 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idDetallePedido
2025-06-08 21:30:24.922 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.id_detalle_pedido
2025-06-08 21:30:24.923 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idDetallePedido
2025-06-08 21:30:24.924 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_detalle_pedido)]), idDetallePedido, identity, , ...)
2025-06-08 21:30:24.926 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cantidad')
2025-06-08 21:30:24.930 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantidad with lazy=false
2025-06-08 21:30:24.931 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:cantidad]
2025-06-08 21:30:24.934 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantidad
2025-06-08 21:30:24.935 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.cantidad
2025-06-08 21:30:24.936 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantidad
2025-06-08 21:30:24.936 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:30:24.937 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:30:24.938 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:estado]
2025-06-08 21:30:24.938 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:30:24.938 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.estado
2025-06-08 21:30:24.939 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:30:24.941 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_factura',referencedColumn='id_factura')
2025-06-08 21:30:24.944 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:30:24.952 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property factura
2025-06-08 21:30:24.953 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='igv')
2025-06-08 21:30:24.954 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property igv with lazy=false
2025-06-08 21:30:24.955 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:igv]
2025-06-08 21:30:24.956 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for igv
2025-06-08 21:30:24.957 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.igv
2025-06-08 21:30:24.959 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property igv
2025-06-08 21:30:24.962 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:30:24.964 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:30:24.968 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:30:24.973 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio_unitario')
2025-06-08 21:30:24.982 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precioUnitario with lazy=false
2025-06-08 21:30:25.040 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:precioUnitario]
2025-06-08 21:30:25.057 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precioUnitario
2025-06-08 21:30:25.097 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.precio_unitario
2025-06-08 21:30:25.131 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property precioUnitario
2025-06-08 21:30:25.148 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_producto',referencedColumn='id_producto')
2025-06-08 21:30:25.149 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:30:25.150 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property producto
2025-06-08 21:30:25.154 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='subtotal')
2025-06-08 21:30:25.157 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property subtotal with lazy=false
2025-06-08 21:30:25.158 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:subtotal]
2025-06-08 21:30:25.159 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for subtotal
2025-06-08 21:30:25.160 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.subtotal
2025-06-08 21:30:25.161 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property subtotal
2025-06-08 21:30:25.162 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:30:25.163 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:30:25.164 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:total]
2025-06-08 21:30:25.165 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:30:25.165 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.total
2025-06-08 21:30:25.166 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:30:25.167 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:30:25.168 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:30:25.169 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Empleado
2025-06-08 21:30:25.169 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Empleado on table empleado
2025-06-08 21:30:25.170 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:30:25.173 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_empleado')
2025-06-08 21:30:25.174 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:30:25.175 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:30:25.175 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idEmpleado with lazy=false
2025-06-08 21:30:25.176 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:idEmpleado]
2025-06-08 21:30:25.177 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idEmpleado
2025-06-08 21:30:25.177 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.id_empleado
2025-06-08 21:30:25.178 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idEmpleado
2025-06-08 21:30:25.178 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_empleado)]), idEmpleado, identity, , ...)
2025-06-08 21:30:25.179 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:30:25.180 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:30:25.180 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:estado]
2025-06-08 21:30:25.181 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:30:25.182 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.estado
2025-06-08 21:30:25.183 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:30:25.184 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:30:25.184 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:30:25.185 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:nombre]
2025-06-08 21:30:25.186 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:30:25.186 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.nombre
2025-06-08 21:30:25.187 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:30:25.188 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password')
2025-06-08 21:30:25.202 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-06-08 21:30:25.203 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:password]
2025-06-08 21:30:25.204 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password
2025-06-08 21:30:25.205 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.password
2025-06-08 21:30:25.205 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property password
2025-06-08 21:30:25.206 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='rol')
2025-06-08 21:30:25.207 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property rol with lazy=false
2025-06-08 21:30:25.208 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:rol]
2025-06-08 21:30:25.208 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for rol
2025-06-08 21:30:25.209 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.rol
2025-06-08 21:30:25.210 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property rol
2025-06-08 21:30:25.211 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='usuario')
2025-06-08 21:30:25.212 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property usuario with lazy=false
2025-06-08 21:30:25.212 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:usuario]
2025-06-08 21:30:25.213 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for usuario
2025-06-08 21:30:25.215 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.usuario
2025-06-08 21:30:25.215 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property usuario
2025-06-08 21:30:25.216 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:30:25.218 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:30:25.218 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Factura
2025-06-08 21:30:25.219 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Factura on table factura
2025-06-08 21:30:25.220 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:30:25.225 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_factura')
2025-06-08 21:30:25.226 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:30:25.226 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:30:25.227 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idFactura with lazy=false
2025-06-08 21:30:25.227 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:idFactura]
2025-06-08 21:30:25.228 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idFactura
2025-06-08 21:30:25.228 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.id_factura
2025-06-08 21:30:25.229 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idFactura
2025-06-08 21:30:25.229 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_factura)]), idFactura, identity, , ...)
2025-06-08 21:30:25.230 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_cliente',referencedColumn='id_cliente')
2025-06-08 21:30:25.231 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:30:25.231 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cliente
2025-06-08 21:30:25.232 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='codigo')
2025-06-08 21:30:25.233 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codigo with lazy=false
2025-06-08 21:30:25.234 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:codigo]
2025-06-08 21:30:25.234 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codigo
2025-06-08 21:30:25.235 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.codigo
2025-06-08 21:30:25.235 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property codigo
2025-06-08 21:30:25.235 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:30:25.235 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:30:25.235 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:estado]
2025-06-08 21:30:25.236 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:30:25.236 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.estado
2025-06-08 21:30:25.236 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:30:25.237 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fecha_emision')
2025-06-08 21:30:25.237 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaEmision with lazy=false
2025-06-08 21:30:25.238 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:fechaEmision]
2025-06-08 21:30:25.238 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaEmision
2025-06-08 21:30:25.238 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.fecha_emision
2025-06-08 21:30:25.238 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaEmision
2025-06-08 21:30:25.239 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='igv')
2025-06-08 21:30:25.239 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property igv with lazy=false
2025-06-08 21:30:25.239 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:igv]
2025-06-08 21:30:25.239 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for igv
2025-06-08 21:30:25.239 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.igv
2025-06-08 21:30:25.239 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property igv
2025-06-08 21:30:25.240 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:30:25.240 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:30:25.241 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:30:25.241 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='subtotal')
2025-06-08 21:30:25.241 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property subtotal with lazy=false
2025-06-08 21:30:25.242 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:subtotal]
2025-06-08 21:30:25.242 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for subtotal
2025-06-08 21:30:25.242 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.subtotal
2025-06-08 21:30:25.242 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property subtotal
2025-06-08 21:30:25.243 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:30:25.244 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:30:25.244 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:total]
2025-06-08 21:30:25.245 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:30:25.245 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.total
2025-06-08 21:30:25.246 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:30:25.247 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:30:25.249 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:30:25.249 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Menu
2025-06-08 21:30:25.250 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Menu on table menu
2025-06-08 21:30:25.250 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:30:25.253 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_menu')
2025-06-08 21:30:25.253 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:30:25.253 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:30:25.254 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idMenu with lazy=false
2025-06-08 21:30:25.254 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Menu:idMenu]
2025-06-08 21:30:25.255 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idMenu
2025-06-08 21:30:25.255 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: menu.id_menu
2025-06-08 21:30:25.255 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idMenu
2025-06-08 21:30:25.256 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_menu)]), idMenu, identity, , ...)
2025-06-08 21:30:25.256 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cod_pedido')
2025-06-08 21:30:25.257 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codPedido with lazy=false
2025-06-08 21:30:25.257 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Menu:codPedido]
2025-06-08 21:30:25.257 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codPedido
2025-06-08 21:30:25.257 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: menu.cod_pedido
2025-06-08 21:30:25.258 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property codPedido
2025-06-08 21:30:25.258 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:30:25.259 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:30:25.260 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:30:25.260 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_producto',referencedColumn='id_producto')
2025-06-08 21:30:25.261 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:30:25.262 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property producto
2025-06-08 21:30:25.263 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:30:25.264 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:30:25.265 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Mesa
2025-06-08 21:30:25.265 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Mesa on table mesa
2025-06-08 21:30:25.266 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:30:25.268 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_mesa')
2025-06-08 21:30:25.268 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:30:25.269 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:30:25.269 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idMesa with lazy=false
2025-06-08 21:30:25.269 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:idMesa]
2025-06-08 21:30:25.270 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idMesa
2025-06-08 21:30:25.270 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.id_mesa
2025-06-08 21:30:25.270 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idMesa
2025-06-08 21:30:25.271 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_mesa)]), idMesa, identity, , ...)
2025-06-08 21:30:25.271 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='capacidad')
2025-06-08 21:30:25.272 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property capacidad with lazy=false
2025-06-08 21:30:25.272 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:capacidad]
2025-06-08 21:30:25.272 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for capacidad
2025-06-08 21:30:25.272 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.capacidad
2025-06-08 21:30:25.272 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property capacidad
2025-06-08 21:30:25.272 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='detalle')
2025-06-08 21:30:25.273 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property detalle with lazy=false
2025-06-08 21:30:25.273 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:detalle]
2025-06-08 21:30:25.273 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for detalle
2025-06-08 21:30:25.273 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.detalle
2025-06-08 21:30:25.273 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property detalle
2025-06-08 21:30:25.274 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:30:25.274 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:30:25.274 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:estado]
2025-06-08 21:30:25.275 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:30:25.275 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.estado
2025-06-08 21:30:25.276 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:30:25.276 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='numero')
2025-06-08 21:30:25.277 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property numero with lazy=false
2025-06-08 21:30:25.278 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:numero]
2025-06-08 21:30:25.278 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for numero
2025-06-08 21:30:25.279 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.numero
2025-06-08 21:30:25.279 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property numero
2025-06-08 21:30:25.281 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:30:25.281 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:30:25.282 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Pedido
2025-06-08 21:30:25.282 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Pedido on table pedido
2025-06-08 21:30:25.283 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:30:25.286 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_pedido')
2025-06-08 21:30:25.286 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:30:25.286 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:30:25.287 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idPedido with lazy=false
2025-06-08 21:30:25.287 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:idPedido]
2025-06-08 21:30:25.287 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idPedido
2025-06-08 21:30:25.287 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.id_pedido
2025-06-08 21:30:25.288 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idPedido
2025-06-08 21:30:25.288 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_pedido)]), idPedido, identity, , ...)
2025-06-08 21:30:25.288 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cant_pedidos')
2025-06-08 21:30:25.288 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantPedidos with lazy=false
2025-06-08 21:30:25.289 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:cantPedidos]
2025-06-08 21:30:25.289 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantPedidos
2025-06-08 21:30:25.289 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.cant_pedidos
2025-06-08 21:30:25.289 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantPedidos
2025-06-08 21:30:25.289 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_cliente',referencedColumn='id_cliente')
2025-06-08 21:30:25.290 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:30:25.290 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cliente
2025-06-08 21:30:25.290 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_empleado',referencedColumn='id_empleado')
2025-06-08 21:30:25.291 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:30:25.291 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property empleado
2025-06-08 21:30:25.292 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:30:25.293 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:30:25.293 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:estado]
2025-06-08 21:30:25.294 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:30:25.294 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.estado
2025-06-08 21:30:25.294 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:30:25.295 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fecha_hora')
2025-06-08 21:30:25.296 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaHora with lazy=false
2025-06-08 21:30:25.296 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:fechaHora]
2025-06-08 21:30:25.297 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaHora
2025-06-08 21:30:25.297 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.fecha_hora
2025-06-08 21:30:25.298 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaHora
2025-06-08 21:30:25.298 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_mesa',referencedColumn='id_mesa')
2025-06-08 21:30:25.298 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:30:25.298 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property mesa
2025-06-08 21:30:25.299 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:30:25.299 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:30:25.299 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:total]
2025-06-08 21:30:25.300 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:30:25.300 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.total
2025-06-08 21:30:25.300 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:30:25.300 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:30:25.301 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:30:25.301 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Producto
2025-06-08 21:30:25.302 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Producto on table producto
2025-06-08 21:30:25.302 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:30:25.304 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_producto')
2025-06-08 21:30:25.304 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:30:25.304 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:30:25.305 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idProducto with lazy=false
2025-06-08 21:30:25.305 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:idProducto]
2025-06-08 21:30:25.305 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idProducto
2025-06-08 21:30:25.305 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.id_producto
2025-06-08 21:30:25.305 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idProducto
2025-06-08 21:30:25.306 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_producto)]), idProducto, identity, , ...)
2025-06-08 21:30:25.306 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_categoria',referencedColumn='id_categoria')
2025-06-08 21:30:25.306 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:30:25.306 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property categoria
2025-06-08 21:30:25.307 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='descripcion')
2025-06-08 21:30:25.307 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property descripcion with lazy=false
2025-06-08 21:30:25.307 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:descripcion]
2025-06-08 21:30:25.307 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for descripcion
2025-06-08 21:30:25.308 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.descripcion
2025-06-08 21:30:25.308 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property descripcion
2025-06-08 21:30:25.309 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:30:25.309 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:30:25.310 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:estado]
2025-06-08 21:30:25.310 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:30:25.311 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.estado
2025-06-08 21:30:25.311 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:30:25.312 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:30:25.312 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:30:25.313 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:nombre]
2025-06-08 21:30:25.313 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:30:25.314 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.nombre
2025-06-08 21:30:25.314 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:30:25.315 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio')
2025-06-08 21:30:25.315 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precio with lazy=false
2025-06-08 21:30:25.315 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:precio]
2025-06-08 21:30:25.315 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precio
2025-06-08 21:30:25.315 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.precio
2025-06-08 21:30:25.315 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property precio
2025-06-08 21:30:25.315 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_seccion',referencedColumn='id_seccion')
2025-06-08 21:30:25.316 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:30:25.316 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property seccion
2025-06-08 21:30:25.316 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='stock')
2025-06-08 21:30:25.316 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property stock with lazy=false
2025-06-08 21:30:25.317 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:stock]
2025-06-08 21:30:25.317 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for stock
2025-06-08 21:30:25.317 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.stock
2025-06-08 21:30:25.317 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property stock
2025-06-08 21:30:25.318 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:30:25.319 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:30:25.320 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Seccion
2025-06-08 21:30:25.320 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Seccion on table seccion
2025-06-08 21:30:25.321 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:30:25.322 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_seccion')
2025-06-08 21:30:25.323 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:30:25.323 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:30:25.324 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idSeccion with lazy=false
2025-06-08 21:30:25.324 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:idSeccion]
2025-06-08 21:30:25.324 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idSeccion
2025-06-08 21:30:25.324 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.id_seccion
2025-06-08 21:30:25.324 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idSeccion
2025-06-08 21:30:25.325 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_seccion)]), idSeccion, identity, , ...)
2025-06-08 21:30:25.325 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='detalle')
2025-06-08 21:30:25.325 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property detalle with lazy=false
2025-06-08 21:30:25.325 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:detalle]
2025-06-08 21:30:25.325 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for detalle
2025-06-08 21:30:25.326 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.detalle
2025-06-08 21:30:25.326 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property detalle
2025-06-08 21:30:25.327 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:30:25.327 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:30:25.328 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:estado]
2025-06-08 21:30:25.328 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:30:25.328 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.estado
2025-06-08 21:30:25.329 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:30:25.330 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:30:25.332 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idCategoria
2025-06-08 21:30:25.334 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:30:25.334 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:30:25.334 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idCliente
2025-06-08 21:30:25.335 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apellido
2025-06-08 21:30:25.335 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantVisitas
2025-06-08 21:30:25.336 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for dni
2025-06-08 21:30:25.336 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-06-08 21:30:25.336 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:30:25.336 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:30:25.337 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for telefono
2025-06-08 21:30:25.337 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idDetallePedido
2025-06-08 21:30:25.337 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantidad
2025-06-08 21:30:25.337 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:30:25.337 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for igv
2025-06-08 21:30:25.338 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precioUnitario
2025-06-08 21:30:25.338 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for subtotal
2025-06-08 21:30:25.338 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:30:25.338 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idEmpleado
2025-06-08 21:30:25.338 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:30:25.339 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:30:25.339 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-06-08 21:30:25.339 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for rol
2025-06-08 21:30:25.339 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for usuario
2025-06-08 21:30:25.339 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idFactura
2025-06-08 21:30:25.340 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codigo
2025-06-08 21:30:25.340 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:30:25.340 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaEmision
2025-06-08 21:30:25.340 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for igv
2025-06-08 21:30:25.340 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for subtotal
2025-06-08 21:30:25.341 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:30:25.341 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idMenu
2025-06-08 21:30:25.341 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codPedido
2025-06-08 21:30:25.341 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idMesa
2025-06-08 21:30:25.341 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for capacidad
2025-06-08 21:30:25.342 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for detalle
2025-06-08 21:30:25.342 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:30:25.342 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for numero
2025-06-08 21:30:25.342 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idPedido
2025-06-08 21:30:25.342 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantPedidos
2025-06-08 21:30:25.343 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:30:25.343 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaHora
2025-06-08 21:30:25.344 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:30:25.344 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idProducto
2025-06-08 21:30:25.344 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for descripcion
2025-06-08 21:30:25.345 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:30:25.345 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:30:25.346 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precio
2025-06-08 21:30:25.346 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for stock
2025-06-08 21:30:25.347 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idSeccion
2025-06-08 21:30:25.347 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for detalle
2025-06-08 21:30:25.348 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:30:25.356 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_categoria] to be non-null as it is part of the primary key for table [categoria]
2025-06-08 21:30:25.356 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_cliente] to be non-null as it is part of the primary key for table [cliente]
2025-06-08 21:30:25.357 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_detalle_pedido] to be non-null as it is part of the primary key for table [detalle_pedido]
2025-06-08 21:30:25.357 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_empleado] to be non-null as it is part of the primary key for table [empleado]
2025-06-08 21:30:25.357 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_factura] to be non-null as it is part of the primary key for table [factura]
2025-06-08 21:30:25.357 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_menu] to be non-null as it is part of the primary key for table [menu]
2025-06-08 21:30:25.357 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_mesa] to be non-null as it is part of the primary key for table [mesa]
2025-06-08 21:30:25.358 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_pedido] to be non-null as it is part of the primary key for table [pedido]
2025-06-08 21:30:25.358 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_producto] to be non-null as it is part of the primary key for table [producto]
2025-06-08 21:30:25.358 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_seccion] to be non-null as it is part of the primary key for table [seccion]
2025-06-08 21:30:25.613 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2025-06-08 21:30:25.665 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:30:25.666 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=23, javafx.runtime.version=21.0.1+6, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@3bd0cc8c, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.community.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant\target\classes;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter\3.5.0\spring-boot-starter-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot\3.5.0\spring-boot-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-context\6.2.7\spring-context-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-expression\6.2.7\spring-expression-6.2.7.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-observation\1.15.0\micrometer-observation-1.15.0.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-commons\1.15.0\micrometer-commons-1.15.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.5.0\spring-boot-autoconfigure-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.5.0\spring-boot-starter-logging-3.5.0.jar;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\USUARIO\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-core\6.2.7\spring-core-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jcl\6.2.7\spring-jcl-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\yaml\snakeyaml\2.4\snakeyaml-2.4.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.5.0\spring-boot-starter-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.5.0\spring-boot-starter-jdbc-3.5.0.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jdbc\6.2.7\spring-jdbc-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-core\6.6.15.Final\hibernate-core-6.6.15.Final.jar;C:\Users\USUARIO\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\USUARIO\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\USUARIO\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\USUARIO\.m2\repository\net\bytebuddy\byte-buddy\1.17.5\byte-buddy-1.17.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\USUARIO\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\USUARIO\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-jpa\3.5.0\spring-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-commons\3.5.0\spring-data-commons-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-orm\6.2.7\spring-orm-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aop\6.2.7\spring-aop-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-tx\6.2.7\spring-tx-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-beans\6.2.7\spring-beans-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aspects\6.2.7\spring-aspects-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\USUARIO\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\USUARIO\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-community-dialects\6.4.4.Final\hibernate-community-dialects-6.4.4.Final.jar;C:\Users\USUARIO\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\USUARIO\.m2\repository\org\xerial\sqlite-jdbc\3.46.0.0\sqlite-jdbc-3.46.0.0.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\USUARIO\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.0\jackson-annotations-2.17.0.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.2.Final\hibernate-validator-7.0.2.Final.jar;C:\Users\USUARIO\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-fxml\21.0.1\javafx-fxml-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-fxml\21.0.1\javafx-fxml-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-swing\21.0.1\javafx-swing-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-swing\21.0.1\javafx-swing-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\bootstrapfx\bootstrapfx-core\0.2.4\bootstrapfx-core-0.2.4.jar;C:\Users\USUARIO\.m2\repository\io\github\mkpaz\atlantafx-base\2.0.0\atlantafx-base-2.0.0.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-javafx\12.3.1\ikonli-javafx-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-core\12.3.1\ikonli-core-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-fontawesome5-pack\12.3.1\ikonli-fontawesome5-pack-12.3.1.jar;C:\Users\USUARIO\.m2\repository\net\sf\jasperreports\jasperreports\6.20.0\jasperreports-6.20.0.jar;C:\Users\USUARIO\.m2\repository\commons-beanutils\commons-beanutils\1.9.4\commons-beanutils-1.9.4.jar;C:\Users\USUARIO\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\USUARIO\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\USUARIO\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-collections4\4.2\commons-collections4-4.2.jar;C:\Users\USUARIO\.m2\repository\com\lowagie\itext\2.1.7.js10\itext-2.1.7.js10.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcprov-jdk15on\1.70\bcprov-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcutil-jdk15on\1.70\bcutil-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jcommon\1.0.23\jcommon-1.0.23.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jfreechart\1.0.19\jfreechart-1.0.19.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\jdt\ecj\3.21.0\ecj-3.21.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.19.0\jackson-core-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.19.0\jackson-databind-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-xml\2.19.0\jackson-dataformat-xml-2.19.0.jar;C:\Users\USUARIO\.m2\repository\org\codehaus\woodstox\stax2-api\4.2.2\stax2-api-4.2.2.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\woodstox\woodstox-core\7.1.0\woodstox-core-7.1.0.jar;C:\Users\USUARIO\.m2\repository\win\zqxu\jrviewer-fx\0.1.1\jrviewer-fx-0.1.1.jar;C:\Users\USUARIO\.m2\repository\jakarta\el\jakarta.el-api\4.0.0\jakarta.el-api-4.0.0.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jakarta.el\4.0.2\jakarta.el-4.0.2.jar;C:\Users\USUARIO\.m2\repository\com\miglayout\miglayout\3.7.4\miglayout-3.7.4.jar;C:\Users\USUARIO\.m2\repository\org\apache\groovy\groovy\4.0.6\groovy-4.0.6.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml\5.2.3\poi-ooxml-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi\5.2.3\poi-5.2.3.jar;C:\Users\USUARIO\.m2\repository\commons-codec\commons-codec\1.18.0\commons-codec-1.18.0.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-math3\3.6.1\commons-math3-3.6.1.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\SparseBitSet\1.2\SparseBitSet-1.2.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml-lite\5.2.3\poi-ooxml-lite-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\xmlbeans\xmlbeans\5.1.1\xmlbeans-5.1.1.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-compress\1.21\commons-compress-1.21.jar;C:\Users\USUARIO\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\USUARIO\.m2\repository\com\github\virtuald\curvesapi\1.07\curvesapi-1.07.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar, LOGBACK_ROLLINGPOLICY_MAX_FILE_SIZE=10485760, java.vm.vendor=Oracle Corporation, LOG_PATH=logs/, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Bogota, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, javafx.version=21.0.1, os.name=Windows 11, java.vm.specification.version=23, APPLICATION_NAME=ProyectoRestaurant, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=MX, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk-23\bin, sun.java.command=pe.edu.upeu.proyecto_restaurant.AppRestaurant, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.use_sql_comments=true, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@784cf1ef, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\USUARIO, user.language=es, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-23, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7-58, user.name=USUARIO, stdout.encoding=cp850, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, FILE_LOG_PATTERN=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, LOG_FILE=logs/restaurant.log, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\USUARIO\AppData\Local\Temp\, java.version=23.0.2, LOGBACK_ROLLINGPOLICY_CLEAN_HISTORY_ON_START=false, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=1568, sun.os.patch.level=, CONSOLE_LOG_CHARSET=IBM850, LOGBACK_ROLLINGPOLICY_MAX_HISTORY=30, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@49c9870a, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-23\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;c:\Users\USUARIO\AppData\Local\Programs\cursor\resources\app\bin;C:\Users\USUARIO\AppData\Local\Programs\Python\Python313\Scripts\;C:\Users\USUARIO\AppData\Local\Programs\Python\Launcher\;C:\Users\USUARIO\AppData\Local\Microsoft\WindowsApps;C:\Users\USUARIO\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\USUARIO\AppData\Roaming\npm;C:\flutter\bin;C:\Users\USUARIO\AppData\Local\Programs\Python\Python313\;C:\ffpmg\bin;C:\Users\USUARIO\Downloads\apache-maven-3.9.9\bin;C:\Users\USUARIO\AppData\Local\GitHubDesktop\bin;C:\Users\USUARIO\AppData\Local\Microsoft\WinGet\Packages\Schniz.fnm_Microsoft.Winget.Source_8wekyb3d8bbwe;C:\Users\USUARIO\AppData\Local\Programs\cursor\resources\app\bin;., stderr.encoding=cp850, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=23.0.2+7-58, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), CONSOLE_LOG_PATTERN=%d{HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{36}) - %msg%n, java.class.version=67.0, LOGGED_APPLICATION_NAME=[ProyectoRestaurant] , LOGBACK_ROLLINGPOLICY_TOTAL_SIZE_CAP=104857600}
2025-06-08 21:30:25.670 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-06-08 21:30:25.682 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:30:25.682 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:30:25.682 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:30:25.683 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:30:25.684 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:30:25.684 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:30:25.684 [JavaFX-Launcher] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:30:25.686 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:30:25.687 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:30:25.687 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:30:25.688 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:30:25.688 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:30:25.688 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:30:25.689 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:30:25.689 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:30:25.728 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:30:25.729 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:30:25.732 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:30:25.733 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:30:25.736 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:30:25.736 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:30:25.739 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:30:25.740 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:30:25.743 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:30:25.744 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:30:25.749 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:30:25.750 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:30:25.753 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:30:25.753 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:30:25.755 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:30:25.756 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:30:25.758 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:30:25.758 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:30:25.763 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:30:25.805 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-06-08 21:30:25.806 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-06-08 21:30:25.807 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-06-08 21:30:25.807 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-06-08 21:30:25.809 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1b566139] under count; prior registration was null
2025-06-08 21:30:25.811 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7b91ca2d] under every; prior registration was null
2025-06-08 21:30:25.812 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@293d2363] under any; prior registration was null
2025-06-08 21:30:25.813 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-06-08 21:30:25.814 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-06-08 21:30:25.814 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-06-08 21:30:25.814 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-06-08 21:30:25.814 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-06-08 21:30:25.815 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-06-08 21:30:25.815 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-06-08 21:30:25.815 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-06-08 21:30:25.815 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-06-08 21:30:25.816 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-06-08 21:30:25.816 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-06-08 21:30:25.816 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-06-08 21:30:25.816 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-06-08 21:30:25.816 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-06-08 21:30:25.817 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-06-08 21:30:25.817 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-06-08 21:30:25.817 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-06-08 21:30:25.819 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@19c67447] under sinh; prior registration was null
2025-06-08 21:30:25.819 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7301b0f3] under cosh; prior registration was null
2025-06-08 21:30:25.819 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3702f1d1] under tanh; prior registration was null
2025-06-08 21:30:25.819 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@31592657] under pi; prior registration was null
2025-06-08 21:30:25.820 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b970877] under log; prior registration was null
2025-06-08 21:30:25.820 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-06-08 21:30:25.820 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-06-08 21:30:25.821 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-06-08 21:30:25.821 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-06-08 21:30:25.821 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-06-08 21:30:25.821 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-06-08 21:30:25.822 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-06-08 21:30:25.822 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-06-08 21:30:25.822 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-06-08 21:30:25.822 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-06-08 21:30:25.823 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-06-08 21:30:25.823 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-06-08 21:30:25.824 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4f08dd57] under position; prior registration was null
2025-06-08 21:30:25.826 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@57defd96] under overlay; prior registration was null
2025-06-08 21:30:25.828 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5177a6fa] under trim; prior registration was null
2025-06-08 21:30:25.830 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4aa9119] under cast; prior registration was null
2025-06-08 21:30:25.830 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ba249a9] under collate; prior registration was null
2025-06-08 21:30:25.832 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@656e3e6e] under extract; prior registration was null
2025-06-08 21:30:25.832 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-06-08 21:30:25.832 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-06-08 21:30:25.833 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@25ac01fe] under ifnull; prior registration was null
2025-06-08 21:30:25.833 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-06-08 21:30:25.834 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-06-08 21:30:25.835 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@5f212d71] under pad; prior registration was null
2025-06-08 21:30:25.836 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@2164516d] under str; prior registration was null
2025-06-08 21:30:25.838 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6f2190cc] under format; prior registration was null
2025-06-08 21:30:25.839 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@766ff838] under timestampadd; prior registration was null
2025-06-08 21:30:25.841 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1bf77324] under timestampdiff; prior registration was null
2025-06-08 21:30:25.841 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-06-08 21:30:25.841 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-06-08 21:30:25.842 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7fe03b11] under current_date; prior registration was null
2025-06-08 21:30:25.842 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2b3d2762] under current_time; prior registration was null
2025-06-08 21:30:25.843 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@17cf50d7] under current_timestamp; prior registration was null
2025-06-08 21:30:25.843 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-06-08 21:30:25.843 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-06-08 21:30:25.843 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-06-08 21:30:25.844 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@38a215b8] under local_date; prior registration was null
2025-06-08 21:30:25.844 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4664890e] under local_time; prior registration was null
2025-06-08 21:30:25.844 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4a0b097] under local_datetime; prior registration was null
2025-06-08 21:30:25.845 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6904013c] under offset_datetime; prior registration was null
2025-06-08 21:30:25.845 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-06-08 21:30:25.846 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-06-08 21:30:25.846 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-06-08 21:30:25.847 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-06-08 21:30:25.847 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@41a3d671] under instant; prior registration was null
2025-06-08 21:30:25.847 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-06-08 21:30:25.848 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@34c3888a] under sql; prior registration was null
2025-06-08 21:30:25.848 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f38252b] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-06-08 21:30:25.848 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c09db3f] under left; prior registration was NamedSqmFunctionTemplate(left)
2025-06-08 21:30:25.848 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11566191] under right; prior registration was NamedSqmFunctionTemplate(right)
2025-06-08 21:30:25.848 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@39793ce9] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-06-08 21:30:25.849 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(length)] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-06-08 21:30:25.849 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-06-08 21:30:25.849 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under least; prior registration was NamedSqmFunctionTemplate(least)
2025-06-08 21:30:25.849 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under greatest; prior registration was NamedSqmFunctionTemplate(greatest)
2025-06-08 21:30:25.849 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-06-08 21:30:25.849 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-06-08 21:30:25.851 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@7aa208cd] under trunc; prior registration was null
2025-06-08 21:30:25.852 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-06-08 21:30:25.852 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b970877
2025-06-08 21:30:25.852 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-06-08 21:30:25.852 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-06-08 21:30:25.852 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-06-08 21:30:25.853 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-06-08 21:30:25.853 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2025-06-08 21:30:25.853 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : chr -> char
2025-06-08 21:30:25.854 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@30c8c816] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-06-08 21:30:25.854 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1aab1dd5] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2025-06-08 21:30:25.854 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@61a09bf] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2025-06-08 21:30:25.854 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(strftime)] under format; prior registration was org.hibernate.dialect.function.FormatFunction@6f2190cc
2025-06-08 21:30:25.855 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-06-08 21:30:25.855 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-06-08 21:30:25.856 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-06-08 21:30:25.856 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-06-08 21:30:25.856 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-06-08 21:30:25.857 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-06-08 21:30:25.858 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@3fb1d360] under listagg; prior registration was null
2025-06-08 21:30:25.860 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg)
2025-06-08 21:30:25.862 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-06-08 21:30:25.863 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2025-06-08 21:30:25.864 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-06-08 21:30:25.864 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-06-08 21:30:25.865 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-06-08 21:30:25.865 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg)
2025-06-08 21:30:25.865 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type)
2025-06-08 21:30:25.865 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-06-08 21:30:25.865 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg)
2025-06-08 21:30:25.866 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-06-08 21:30:25.866 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-06-08 21:30:25.866 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-06-08 21:30:25.866 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-06-08 21:30:25.866 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2025-06-08 21:30:25.866 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-06-08 21:30:25.867 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-06-08 21:30:25.867 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-06-08 21:30:25.867 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date
2025-06-08 21:30:25.867 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time
2025-06-08 21:30:25.867 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp
2025-06-08 21:30:25.867 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date
2025-06-08 21:30:25.868 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant
2025-06-08 21:30:25.868 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time
2025-06-08 21:30:25.868 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp
2025-06-08 21:30:25.868 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-06-08 21:30:25.869 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-06-08 21:30:25.869 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-06-08 21:30:25.869 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2025-06-08 21:30:25.869 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-06-08 21:30:25.870 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-06-08 21:30:25.870 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value
2025-06-08 21:30:25.870 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg)
2025-06-08 21:30:25.870 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-06-08 21:30:25.870 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-06-08 21:30:25.870 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-06-08 21:30:25.871 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant
2025-06-08 21:30:25.871 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-06-08 21:30:25.871 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value
2025-06-08 21:30:25.871 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-06-08 21:30:25.871 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-06-08 21:30:25.871 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-06-08 21:30:25.871 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-06-08 21:30:25.872 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-06-08 21:30:25.872 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-06-08 21:30:25.872 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date
2025-06-08 21:30:25.872 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime
2025-06-08 21:30:25.872 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time
2025-06-08 21:30:25.873 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date
2025-06-08 21:30:25.873 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime
2025-06-08 21:30:25.873 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time
2025-06-08 21:30:25.873 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(pattern, string[, start])
2025-06-08 21:30:25.874 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-06-08 21:30:25.874 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string)
2025-06-08 21:30:25.874 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding])
2025-06-08 21:30:25.874 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-06-08 21:30:25.875 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg)
2025-06-08 21:30:25.875 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg)
2025-06-08 21:30:25.875 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-06-08 21:30:25.875 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-06-08 21:30:25.876 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1)
2025-06-08 21:30:25.876 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-06-08 21:30:25.876 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-06-08 21:30:25.876 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2025-06-08 21:30:25.877 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-06-08 21:30:25.877 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi
2025-06-08 21:30:25.877 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-06-08 21:30:25.877 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-06-08 21:30:25.878 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-06-08 21:30:25.878 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-06-08 21:30:25.879 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-06-08 21:30:25.879 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-06-08 21:30:25.879 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number()
2025-06-08 21:30:25.880 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding])
2025-06-08 21:30:25.880 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-06-08 21:30:25.880 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-06-08 21:30:25.880 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-06-08 21:30:25.881 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-06-08 21:30:25.881 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql
2025-06-08 21:30:25.881 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-06-08 21:30:25.881 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg)
2025-06-08 21:30:25.881 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-06-08 21:30:25.881 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-06-08 21:30:25.881 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg)
2025-06-08 21:30:25.882 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-06-08 21:30:25.882 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-06-08 21:30:25.882 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-06-08 21:30:25.882 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-06-08 21:30:25.882 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-06-08 21:30:25.882 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... )
2025-06-08 21:30:25.883 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... )
2025-06-08 21:30:25.883 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string)
2025-06-08 21:30:25.887 [JavaFX-Launcher] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048)
2025-06-08 21:30:25.963 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:30:25.965 [JavaFX-Launcher] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-06-08 21:30:26.037 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.043 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.050 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.050 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.050 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:30:26.050 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:30:26.221 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Factura]: private accessor [cliente]
2025-06-08 21:30:26.226 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.227 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.249 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:30:26.249 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:30:26.269 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Empleado]: private accessor [estado]
2025-06-08 21:30:26.270 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:30:26.270 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:30:26.288 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Seccion]: private accessor [detalle]
2025-06-08 21:30:26.289 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:30:26.289 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:30:26.316 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Cliente]: private accessor [apellido]
2025-06-08 21:30:26.317 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.318 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.318 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.318 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.318 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:30:26.319 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:30:26.331 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Menu]: private accessor [codPedido]
2025-06-08 21:30:26.331 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.332 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.333 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.333 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.333 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.333 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.333 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.334 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.334 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:30:26.334 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:30:26.350 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido]: private accessor [cantidad]
2025-06-08 21:30:26.351 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.352 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.352 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.353 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.353 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.354 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.354 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.354 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:30:26.354 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:30:26.370 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Producto]: private accessor [categoria]
2025-06-08 21:30:26.371 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.371 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.372 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:30:26.372 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:30:26.387 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Categoria]: private accessor [estado]
2025-06-08 21:30:26.389 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:30:26.389 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:30:26.403 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Mesa]: private accessor [capacidad]
2025-06-08 21:30:26.404 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.404 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.405 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.405 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.405 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.406 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.406 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:30:26.406 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:30:26.421 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Pedido]: private accessor [cantPedidos]
2025-06-08 21:30:26.422 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.422 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.423 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:30:26.456 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks
2025-06-08 21:30:26.457 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente]
2025-06-08 21:30:26.463 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido]
2025-06-08 21:30:26.464 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Factura) `staticFetchableList` generator
2025-06-08 21:30:26.465 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Empleado) `staticFetchableList` generator
2025-06-08 21:30:26.465 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Seccion) `staticFetchableList` generator
2025-06-08 21:30:26.465 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Cliente) `staticFetchableList` generator
2025-06-08 21:30:26.466 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido]
2025-06-08 21:30:26.466 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto]
2025-06-08 21:30:26.466 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Menu) `staticFetchableList` generator
2025-06-08 21:30:26.466 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura]
2025-06-08 21:30:26.467 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido]
2025-06-08 21:30:26.467 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto]
2025-06-08 21:30:26.467 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.DetPedido) `staticFetchableList` generator
2025-06-08 21:30:26.467 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria]
2025-06-08 21:30:26.468 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion]
2025-06-08 21:30:26.468 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Producto) `staticFetchableList` generator
2025-06-08 21:30:26.468 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Categoria) `staticFetchableList` generator
2025-06-08 21:30:26.468 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Mesa) `staticFetchableList` generator
2025-06-08 21:30:26.468 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente]
2025-06-08 21:30:26.469 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado]
2025-06-08 21:30:26.469 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa]
2025-06-08 21:30:26.469 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Pedido) `staticFetchableList` generator
2025-06-08 21:30:26.557 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2025-06-08 21:30:26.560 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Factura)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura] 
2025-06-08 21:30:26.575 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7bf1c4a3] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente] 
2025-06-08 21:30:26.578 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:30:26.585 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4db9692b] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido] 
2025-06-08 21:30:26.586 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:30:26.586 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2d33cb19] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente] 
2025-06-08 21:30:26.587 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:30:26.587 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@185ba2ae] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado] 
2025-06-08 21:30:26.588 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:30:26.588 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@47c96698] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa] 
2025-06-08 21:30:26.588 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:30:26.598 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.cantVisitas]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.email]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.nombre]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.telefono]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.codigo]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.fechaEmision]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.igv]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.rol]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.subtotal]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.total]

2025-06-08 21:30:26.603 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (f1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura) {
          primaryTableReference : factura as f1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente) {
              primaryTableReference : cliente as c1_0
            }
            left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido) {
              primaryTableReference : pedido as p1_0
              TableGroupJoins {
                left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente) {
                  primaryTableReference : cliente as c2_0
                }
                left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado) {
                  primaryTableReference : empleado as e1_0
                }
                left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa) {
                  primaryTableReference : mesa as m1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:30:26.615 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:30:26.616 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Factura */ select id_factura from factura where id_factura=?
2025-06-08 21:30:26.616 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Factura */insert into factura (id_cliente,codigo,estado,fecha_emision,igv,id_pedido,subtotal,total) values (?,?,?,?,?,?,?,?)
2025-06-08 21:30:26.617 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Factura */update factura set id_cliente=?,codigo=?,estado=?,fecha_emision=?,igv=?,id_pedido=?,subtotal=?,total=? where id_factura=?
2025-06-08 21:30:26.617 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Factura */delete from factura where id_factura=?
2025-06-08 21:30:26.618 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:30:26.618 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:30:26.618 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.rol]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.usuario]

2025-06-08 21:30:26.619 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:30:26.619 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:30:26.619 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Empleado */ select id_empleado from empleado where id_empleado=?
2025-06-08 21:30:26.619 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */insert into empleado (estado,nombre,password,rol,usuario) values (?,?,?,?,?)
2025-06-08 21:30:26.620 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */update empleado set estado=?,nombre=?,password=?,rol=?,usuario=? where id_empleado=?
2025-06-08 21:30:26.620 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */delete from empleado where id_empleado=?
2025-06-08 21:30:26.620 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:30:26.620 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Seccion)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] 
2025-06-08 21:30:26.621 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Seccion]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion.detalle]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion.estado]

2025-06-08 21:30:26.621 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Seccion) {
          primaryTableReference : seccion as s1_0
        }
      }
    }

2025-06-08 21:30:26.621 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:30:26.622 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Seccion */ select id_seccion from seccion where id_seccion=?
2025-06-08 21:30:26.622 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */insert into seccion (detalle,estado) values (?,?)
2025-06-08 21:30:26.622 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */update seccion set detalle=?,estado=? where id_seccion=?
2025-06-08 21:30:26.623 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */delete from seccion where id_seccion=?
2025-06-08 21:30:26.623 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:30:26.623 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Cliente)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] 
2025-06-08 21:30:26.623 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Cliente]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.cantVisitas]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.email]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.nombre]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.telefono]

2025-06-08 21:30:26.624 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Cliente) {
          primaryTableReference : cliente as c1_0
        }
      }
    }

2025-06-08 21:30:26.624 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:30:26.625 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Cliente */ select id_cliente from cliente where id_cliente=?
2025-06-08 21:30:26.625 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */insert into cliente (apellido,cant_visitas,dni,email,estado,nombre,telefono) values (?,?,?,?,?,?,?)
2025-06-08 21:30:26.625 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */update cliente set apellido=?,cant_visitas=?,dni=?,email=?,estado=?,nombre=?,telefono=? where id_cliente=?
2025-06-08 21:30:26.625 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */delete from cliente where id_cliente=?
2025-06-08 21:30:26.626 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:30:26.626 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Menu)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu] 
2025-06-08 21:30:26.627 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@27993426] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido] 
2025-06-08 21:30:26.628 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:30:26.628 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4a8c7c57] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente] 
2025-06-08 21:30:26.629 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:30:26.630 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5709328e] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado] 
2025-06-08 21:30:26.630 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:30:26.631 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@f1fc5ff] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa] 
2025-06-08 21:30:26.631 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m2_0
2025-06-08 21:30:26.632 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6149e83e] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto] 
2025-06-08 21:30:26.633 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p2_0
2025-06-08 21:30:26.633 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@480e5e84] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria] 
2025-06-08 21:30:26.633 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:30:26.634 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@568d9849] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion] 
2025-06-08 21:30:26.634 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:30:26.635 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.codPedido]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.rol]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.total]
 |  \-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.descripcion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.precio]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion.detalle]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.stock]

2025-06-08 21:30:26.636 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu) {
          primaryTableReference : menu as m1_0
          TableGroupJoins {
            left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido) {
              primaryTableReference : pedido as p1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente) {
                  primaryTableReference : cliente as c1_0
                }
                left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado) {
                  primaryTableReference : empleado as e1_0
                }
                left  join LazyTableGroup (m2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa) {
                  primaryTableReference : mesa as m2_0
                }
              }
            }
            left  join LazyTableGroup (p2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto) {
              primaryTableReference : producto as p2_0
              TableGroupJoins {
                left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria) {
                  primaryTableReference : categoria as c2_0
                }
                left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion) {
                  primaryTableReference : seccion as s1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:30:26.636 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:30:26.637 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Menu */ select id_menu from menu where id_menu=?
2025-06-08 21:30:26.637 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Menu */insert into menu (cod_pedido,id_pedido,id_producto) values (?,?,?)
2025-06-08 21:30:26.638 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Menu */update menu set cod_pedido=?,id_pedido=?,id_producto=? where id_menu=?
2025-06-08 21:30:26.638 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Menu */delete from menu where id_menu=?
2025-06-08 21:30:26.638 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : dp1_0
2025-06-08 21:30:26.638 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.DetPedido)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] 
2025-06-08 21:30:26.638 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@96a8b85] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura] 
2025-06-08 21:30:26.639 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2025-06-08 21:30:26.639 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@332a0e52] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente] 
2025-06-08 21:30:26.639 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:30:26.639 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@9df87ae] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido] 
2025-06-08 21:30:26.640 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:30:26.640 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4aaa6f90] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente] 
2025-06-08 21:30:26.640 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:30:26.641 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@17c1e3e3] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado] 
2025-06-08 21:30:26.641 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:30:26.642 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@747a37d7] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa] 
2025-06-08 21:30:26.642 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:30:26.643 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@16d2c01] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido] 
2025-06-08 21:30:26.645 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p2_0
2025-06-08 21:30:26.646 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@643fe444] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente] 
2025-06-08 21:30:26.646 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c3_0
2025-06-08 21:30:26.647 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6af48d78] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado] 
2025-06-08 21:30:26.647 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e2_0
2025-06-08 21:30:26.647 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2577691d] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa] 
2025-06-08 21:30:26.648 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m2_0
2025-06-08 21:30:26.648 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@669bebe6] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto] 
2025-06-08 21:30:26.649 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p3_0
2025-06-08 21:30:26.649 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7d1d3eb5] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria] 
2025-06-08 21:30:26.649 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c4_0
2025-06-08 21:30:26.650 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@334cf323] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion] 
2025-06-08 21:30:26.650 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:30:26.650 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.cantidad]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.estado]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.telefono]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.codigo]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.fechaEmision]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.igv]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cantPedidos]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.apellido]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.cantVisitas]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.dni]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.email]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.estado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.nombre]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.telefono]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.estado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.nombre]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.password]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.rol]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.usuario]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.fechaHora]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.capacidad]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.detalle]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.estado]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.numero]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.total]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.subtotal]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.igv]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.rol]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.precioUnitario]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.descripcion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.precio]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion.detalle]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.stock]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.subtotal]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.total]

2025-06-08 21:30:26.651 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (dp1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido) {
          primaryTableReference : detalle_pedido as dp1_0
          TableGroupJoins {
            left  join LazyTableGroup (f1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura) {
              primaryTableReference : factura as f1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente) {
                  primaryTableReference : cliente as c1_0
                }
                left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido) {
                  primaryTableReference : pedido as p1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente) {
                      primaryTableReference : cliente as c2_0
                    }
                    left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado) {
                      primaryTableReference : empleado as e1_0
                    }
                    left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa) {
                      primaryTableReference : mesa as m1_0
                    }
                  }
                }
              }
            }
             join LazyTableGroup (p2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido) {
              primaryTableReference : pedido as p2_0
              TableGroupJoins {
                left  join LazyTableGroup (c3 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente) {
                  primaryTableReference : cliente as c3_0
                }
                left  join LazyTableGroup (e2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado) {
                  primaryTableReference : empleado as e2_0
                }
                left  join LazyTableGroup (m2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa) {
                  primaryTableReference : mesa as m2_0
                }
              }
            }
             join LazyTableGroup (p3 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto) {
              primaryTableReference : producto as p3_0
              TableGroupJoins {
                left  join LazyTableGroup (c4 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria) {
                  primaryTableReference : categoria as c4_0
                }
                left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion) {
                  primaryTableReference : seccion as s1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:30:26.652 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:30:26.653 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */ select id_detalle_pedido from detalle_pedido where id_detalle_pedido=?
2025-06-08 21:30:26.653 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */insert into detalle_pedido (cantidad,estado,id_factura,igv,id_pedido,precio_unitario,id_producto,subtotal,total) values (?,?,?,?,?,?,?,?,?)
2025-06-08 21:30:26.653 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */update detalle_pedido set cantidad=?,estado=?,id_factura=?,igv=?,id_pedido=?,precio_unitario=?,id_producto=?,subtotal=?,total=? where id_detalle_pedido=?
2025-06-08 21:30:26.654 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */delete from detalle_pedido where id_detalle_pedido=?
2025-06-08 21:30:26.654 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:30:26.654 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Producto)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto] 
2025-06-08 21:30:26.654 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@14105146] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria] 
2025-06-08 21:30:26.655 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:30:26.655 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@ec3de7] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion] 
2025-06-08 21:30:26.655 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:30:26.655 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.descripcion]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.precio]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion.detalle]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.stock]

2025-06-08 21:30:26.656 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto) {
          primaryTableReference : producto as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria) {
              primaryTableReference : categoria as c1_0
            }
            left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion) {
              primaryTableReference : seccion as s1_0
            }
          }
        }
      }
    }

2025-06-08 21:30:26.656 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:30:26.657 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Producto */ select id_producto from producto where id_producto=?
2025-06-08 21:30:26.657 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Producto */insert into producto (id_categoria,descripcion,estado,nombre,precio,id_seccion,stock) values (?,?,?,?,?,?,?)
2025-06-08 21:30:26.657 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Producto */update producto set id_categoria=?,descripcion=?,estado=?,nombre=?,precio=?,id_seccion=?,stock=? where id_producto=?
2025-06-08 21:30:26.657 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Producto */delete from producto where id_producto=?
2025-06-08 21:30:26.657 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:30:26.657 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Categoria)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] 
2025-06-08 21:30:26.658 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Categoria]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Categoria.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Categoria.nombre]

2025-06-08 21:30:26.658 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Categoria) {
          primaryTableReference : categoria as c1_0
        }
      }
    }

2025-06-08 21:30:26.658 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:30:26.659 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Categoria */ select id_categoria from categoria where id_categoria=?
2025-06-08 21:30:26.659 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */insert into categoria (estado,nombre) values (?,?)
2025-06-08 21:30:26.659 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */update categoria set estado=?,nombre=? where id_categoria=?
2025-06-08 21:30:26.659 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */delete from categoria where id_categoria=?
2025-06-08 21:30:26.660 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:30:26.660 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Mesa)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] 
2025-06-08 21:30:26.661 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Mesa]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.capacidad]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.detalle]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.numero]

2025-06-08 21:30:26.661 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Mesa) {
          primaryTableReference : mesa as m1_0
        }
      }
    }

2025-06-08 21:30:26.662 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:30:26.662 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Mesa */ select id_mesa from mesa where id_mesa=?
2025-06-08 21:30:26.663 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */insert into mesa (capacidad,detalle,estado,numero) values (?,?,?,?)
2025-06-08 21:30:26.663 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */update mesa set capacidad=?,detalle=?,estado=?,numero=? where id_mesa=?
2025-06-08 21:30:26.664 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */delete from mesa where id_mesa=?
2025-06-08 21:30:26.664 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:30:26.664 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Pedido)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] 
2025-06-08 21:30:26.665 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@64773e86] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente] 
2025-06-08 21:30:26.665 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:30:26.665 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@583f45b9] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado] 
2025-06-08 21:30:26.666 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:30:26.666 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5771a7d] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa] 
2025-06-08 21:30:26.666 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:30:26.667 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cantPedidos]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.cantVisitas]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.email]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.nombre]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.telefono]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.password]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.rol]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.usuario]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.fechaHora]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.capacidad]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.detalle]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.numero]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.total]

2025-06-08 21:30:26.667 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido) {
          primaryTableReference : pedido as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente) {
              primaryTableReference : cliente as c1_0
            }
            left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado) {
              primaryTableReference : empleado as e1_0
            }
            left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa) {
              primaryTableReference : mesa as m1_0
            }
          }
        }
      }
    }

2025-06-08 21:30:26.668 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:30:26.668 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Pedido */ select id_pedido from pedido where id_pedido=?
2025-06-08 21:30:26.668 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */insert into pedido (cant_pedidos,id_cliente,id_empleado,estado,fecha_hora,id_mesa,total) values (?,?,?,?,?,?,?)
2025-06-08 21:30:26.668 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */update pedido set cant_pedidos=?,id_cliente=?,id_empleado=?,estado=?,fecha_hora=?,id_mesa=?,total=? where id_pedido=?
2025-06-08 21:30:26.668 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */delete from pedido where id_pedido=?
2025-06-08 21:30:26.697 [JavaFX-Launcher] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-08 21:30:26.698 [JavaFX-Launcher] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3b669c96] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@3d3bd554]
2025-06-08 21:30:26.700 [JavaFX-Launcher] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries
2025-06-08 21:30:26.700 [JavaFX-Launcher] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries
2025-06-08 21:30:26.750 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : categoria
2025-06-08 21:30:26.759 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : cliente
2025-06-08 21:30:26.760 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : detalle_pedido
2025-06-08 21:30:26.760 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : empleado
2025-06-08 21:30:26.761 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : factura
2025-06-08 21:30:26.762 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : menu
2025-06-08 21:30:26.762 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : mesa
2025-06-08 21:30:26.763 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : pedido
2025-06-08 21:30:26.763 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : producto
2025-06-08 21:30:26.763 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : seccion
2025-06-08 21:30:26.765 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3f6b76d6
2025-06-08 21:30:26.766 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: dc1b61b6-6707-49c8-80a7-ced3150184a5 (<unnamed>)
2025-06-08 21:30:26.766 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-06-08 21:30:26.767 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory
2025-06-08 21:30:26.767 [JavaFX-Launcher] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-08 21:30:26.968 [JavaFX-Launcher] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2025-06-08 21:30:27.155 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy105.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:39)
	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:30:27.190 [JavaFX-Launcher] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-08 21:30:27.196 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy105.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:147)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:39)
	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:30:27.268 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy105.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:39)
	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:30:27.456 [JavaFX-Launcher] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:30:27.460 [JavaFX-Launcher] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-06-08 21:30:27.461 [JavaFX-Launcher] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-06-08 21:30:27.464 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:30:27.464 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-06-08 21:30:27.465 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:30:27.465 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:30:27.466 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:30:27.467 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:30:27.467 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:30:27.469 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:30:27.470 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:30:27.471 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:30:27.471 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:30:27.471 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:30:27.472 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:30:27.730 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - Started application in 7.152 seconds (process running for 8.475)
2025-06-08 21:30:28.050 [JavaFX-Launcher] INFO  p.e.u.p.ProyectoRestaurantApplication - === LISTADO DE EMPLEADOS ===
2025-06-08 21:30:28.069 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-08 21:30:28.069 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - begin
2025-06-08 21:30:28.164 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:30:28.166 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3))] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:30:28.181 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3)]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).rol]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).usuario]

2025-06-08 21:30:28.182 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3)) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:30:28.202 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:30:28.206 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id_empleado,
        e1_0.estado,
        e1_0.nombre,
        e1_0.password,
        e1_0.rol,
        e1_0.usuario 
    from
        empleado e1_0
2025-06-08 21:30:28.230 [JavaFX-Launcher] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3) -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3))@207611399 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:30:28.256 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - committing
2025-06-08 21:30:28.259 [JavaFX-Launcher] INFO  p.e.u.p.ProyectoRestaurantApplication - Empleado: Empleado(idEmpleado=1, nombre=admin-juan, usuario=admin, password=123, estado=activo, rol=admin)
2025-06-08 21:30:28.260 [JavaFX-Launcher] INFO  p.e.u.p.ProyectoRestaurantApplication - Empleado: Empleado(idEmpleado=2, nombre=caj-carlos, usuario=caj, password=123, estado=activo, rol=cajero)
2025-06-08 21:30:28.260 [JavaFX-Launcher] INFO  p.e.u.p.ProyectoRestaurantApplication - Empleado: Empleado(idEmpleado=3, nombre=jhon, usuario=cont, password=123, estado=activo, rol=contador)
2025-06-08 21:30:28.261 [JavaFX-Launcher] INFO  p.e.u.p.ProyectoRestaurantApplication - ===========================
2025-06-08 21:30:35.646 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Intentando autenticar usuario: admin
2025-06-08 21:30:35.733 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:30:35.734 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2))] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:30:35.742 [JavaFX Application Thread] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4b65b1a9
2025-06-08 21:30:35.744 [JavaFX Application Thread] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).usuario) 
2025-06-08 21:30:35.762 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2)]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).rol]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).usuario]

2025-06-08 21:30:35.763 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2)) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:30:35.769 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:30:35.770 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id_empleado,
        e1_0.estado,
        e1_0.nombre,
        e1_0.password,
        e1_0.rol,
        e1_0.usuario 
    from
        empleado e1_0 
    where
        e1_0.usuario=?
2025-06-08 21:30:35.777 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2) -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2))@1618034372 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:30:35.786 [JavaFX Application Thread] WARN  p.e.u.p.control.ControlLogin - Error de autenticación: Credenciales inválidas para usuario: admin
2025-06-08 21:30:43.424 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Intentando autenticar usuario: admin
2025-06-08 21:30:43.427 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:30:43.428 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2))] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:30:43.429 [JavaFX Application Thread] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@27a81095
2025-06-08 21:30:43.430 [JavaFX Application Thread] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).usuario) 
2025-06-08 21:30:43.431 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2)]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).rol]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).usuario]

2025-06-08 21:30:43.432 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2)) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:30:43.433 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:30:43.434 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id_empleado,
        e1_0.estado,
        e1_0.nombre,
        e1_0.password,
        e1_0.rol,
        e1_0.usuario 
    from
        empleado e1_0 
    where
        e1_0.usuario=?
2025-06-08 21:30:43.437 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2) -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2))@1713998329 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:30:43.439 [JavaFX Application Thread] WARN  p.e.u.p.control.ControlLogin - Error de autenticación: Credenciales inválidas para usuario: admin
2025-06-08 21:30:50.638 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Intentando autenticar usuario: caj
2025-06-08 21:30:50.640 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:30:50.641 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2))] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:30:50.642 [JavaFX Application Thread] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@38d3c699
2025-06-08 21:30:50.643 [JavaFX Application Thread] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).usuario) 
2025-06-08 21:30:50.644 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2)]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).rol]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).usuario]

2025-06-08 21:30:50.646 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2)) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:30:50.647 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:30:50.648 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id_empleado,
        e1_0.estado,
        e1_0.nombre,
        e1_0.password,
        e1_0.rol,
        e1_0.usuario 
    from
        empleado e1_0 
    where
        e1_0.usuario=?
2025-06-08 21:30:50.653 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2) -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2))@1947203533 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:30:50.656 [JavaFX Application Thread] WARN  p.e.u.p.control.ControlLogin - Error de autenticación: Credenciales inválidas para usuario: caj
2025-06-08 21:30:53.895 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Intentando autenticar usuario: caj
2025-06-08 21:30:53.898 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:30:53.899 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2))] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:30:53.901 [JavaFX Application Thread] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2762cc5f
2025-06-08 21:30:53.902 [JavaFX Application Thread] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).usuario) 
2025-06-08 21:30:53.903 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2)]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).rol]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).usuario]

2025-06-08 21:30:53.904 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2)) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:30:53.906 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:30:53.907 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id_empleado,
        e1_0.estado,
        e1_0.nombre,
        e1_0.password,
        e1_0.rol,
        e1_0.usuario 
    from
        empleado e1_0 
    where
        e1_0.usuario=?
2025-06-08 21:30:53.913 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2) -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2))@688524709 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:30:53.917 [JavaFX Application Thread] WARN  p.e.u.p.control.ControlLogin - Error de autenticación: Credenciales inválidas para usuario: caj
2025-06-08 21:30:59.298 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Intentando autenticar usuario: admin
2025-06-08 21:30:59.300 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:30:59.301 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2))] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:30:59.303 [JavaFX Application Thread] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@350722a4
2025-06-08 21:30:59.304 [JavaFX Application Thread] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).usuario) 
2025-06-08 21:30:59.305 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2)]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).rol]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).usuario]

2025-06-08 21:30:59.307 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2)) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:30:59.308 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:30:59.309 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id_empleado,
        e1_0.estado,
        e1_0.nombre,
        e1_0.password,
        e1_0.rol,
        e1_0.usuario 
    from
        empleado e1_0 
    where
        e1_0.usuario=?
2025-06-08 21:30:59.312 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2) -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2))@1791165712 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:30:59.314 [JavaFX Application Thread] WARN  p.e.u.p.control.ControlLogin - Error de autenticación: Credenciales inválidas para usuario: admin
2025-06-08 21:31:01.841 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Intentando autenticar usuario: admin
2025-06-08 21:31:01.843 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:31:01.843 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2))] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:31:01.845 [JavaFX Application Thread] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1a897ae1
2025-06-08 21:31:01.845 [JavaFX Application Thread] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).usuario) 
2025-06-08 21:31:01.846 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2)]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).rol]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).usuario]

2025-06-08 21:31:01.847 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2)) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:31:01.848 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:31:01.849 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id_empleado,
        e1_0.estado,
        e1_0.nombre,
        e1_0.password,
        e1_0.rol,
        e1_0.usuario 
    from
        empleado e1_0 
    where
        e1_0.usuario=?
2025-06-08 21:31:01.852 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2) -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2))@261328742 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:31:01.854 [JavaFX Application Thread] WARN  p.e.u.p.control.ControlLogin - Error de autenticación: Credenciales inválidas para usuario: admin
2025-06-08 21:31:06.032 [JavaFX Application Thread] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-08 21:31:06.045 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing
2025-06-08 21:31:06.047 [JavaFX Application Thread] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7b828bc8] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3d3bd554]
2025-06-08 21:31:06.048 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2025-06-08 21:31:06.051 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2025-06-08 21:31:06.053 [JavaFX Application Thread] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-08 21:31:06.064 [JavaFX Application Thread] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-08 21:33:29.172 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:33:29.178 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:33:29.179 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:33:29.180 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:33:29.196 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:33:29.198 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:33:29.244 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:33:29.457 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:33:29.477 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:33:29.478 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:33:29.480 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:33:29.481 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:33:29.482 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:33:29.625 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - Starting application using Java 23.0.2 with PID 11936 (started by USUARIO in C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant)
2025-06-08 21:33:29.628 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-08 21:33:30.636 [JavaFX-Launcher] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-08 21:33:30.901 [JavaFX-Launcher] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 245 ms. Found 10 JPA repository interfaces.
2025-06-08 21:33:31.400 [JavaFX-Launcher] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@33909752
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/USUARIO/Documents/ProyectoRestaurantJava/ProyectoRestaurant/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		pe.edu.upeu.proyecto_restaurant.modulo.Categoria
		pe.edu.upeu.proyecto_restaurant.modulo.Cliente
		pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
		pe.edu.upeu.proyecto_restaurant.modulo.Empleado
		pe.edu.upeu.proyecto_restaurant.modulo.Factura
		pe.edu.upeu.proyecto_restaurant.modulo.Menu
		pe.edu.upeu.proyecto_restaurant.modulo.Mesa
		pe.edu.upeu.proyecto_restaurant.modulo.Pedido
		pe.edu.upeu.proyecto_restaurant.modulo.Producto
		pe.edu.upeu.proyecto_restaurant.modulo.Seccion]
	Mapping files names []
	Properties []
2025-06-08 21:33:31.412 [JavaFX-Launcher] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-06-08 21:33:31.416 [JavaFX-Launcher] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-06-08 21:33:31.497 [JavaFX-Launcher] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-08 21:33:31.499 [JavaFX-Launcher] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found
2025-06-08 21:33:31.530 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-06-08 21:33:31.532 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-06-08 21:33:31.534 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:33:31.535 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:33:31.536 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-06-08 21:33:31.538 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-06-08 21:33:31.539 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-06-08 21:33:31.541 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:33:31.542 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-06-08 21:33:31.544 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-06-08 21:33:31.544 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:33:31.546 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-06-08 21:33:31.556 [JavaFX-Launcher] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-06-08 21:33:31.558 [JavaFX-Launcher] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-08 21:33:31.664 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10691bb9
2025-06-08 21:33:31.665 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10691bb9
2025-06-08 21:33:31.666 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@10691bb9
2025-06-08 21:33:31.667 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@333631b6
2025-06-08 21:33:31.667 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@333631b6
2025-06-08 21:33:31.668 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@b2a9e54
2025-06-08 21:33:31.668 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@b2a9e54
2025-06-08 21:33:31.668 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4024a387
2025-06-08 21:33:31.669 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4024a387
2025-06-08 21:33:31.669 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1848cce9
2025-06-08 21:33:31.669 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1848cce9
2025-06-08 21:33:31.669 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1848cce9
2025-06-08 21:33:31.669 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1a71e5d7
2025-06-08 21:33:31.670 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1a71e5d7
2025-06-08 21:33:31.670 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1a71e5d7
2025-06-08 21:33:31.671 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@457600f3
2025-06-08 21:33:31.671 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@457600f3
2025-06-08 21:33:31.672 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@202bbb41
2025-06-08 21:33:31.672 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7eda0429
2025-06-08 21:33:31.673 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7eda0429
2025-06-08 21:33:31.674 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6b100978
2025-06-08 21:33:31.674 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1e14fd71
2025-06-08 21:33:31.675 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6318ac41
2025-06-08 21:33:31.675 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6318ac41
2025-06-08 21:33:31.676 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6318ac41
2025-06-08 21:33:31.676 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4d4d1747
2025-06-08 21:33:31.676 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4d4d1747
2025-06-08 21:33:31.676 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4d4d1747
2025-06-08 21:33:31.677 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@267d9c5f
2025-06-08 21:33:31.677 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@267d9c5f
2025-06-08 21:33:31.677 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@267d9c5f
2025-06-08 21:33:31.677 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1fbb0294
2025-06-08 21:33:31.678 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1fbb0294
2025-06-08 21:33:31.678 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1fbb0294
2025-06-08 21:33:31.678 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3967cf86
2025-06-08 21:33:31.678 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3967cf86
2025-06-08 21:33:31.678 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3967cf86
2025-06-08 21:33:31.679 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1c3510c2
2025-06-08 21:33:31.679 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1c3510c2
2025-06-08 21:33:31.680 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@56e0f87f
2025-06-08 21:33:31.680 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@56e0f87f
2025-06-08 21:33:31.680 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@1108ef95
2025-06-08 21:33:31.680 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@1108ef95
2025-06-08 21:33:31.681 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1108ef95
2025-06-08 21:33:31.681 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@161419cd
2025-06-08 21:33:31.682 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2293b8cd
2025-06-08 21:33:31.683 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2293b8cd
2025-06-08 21:33:31.684 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@73618fe0
2025-06-08 21:33:31.685 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@25c3b25e
2025-06-08 21:33:31.685 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@25c3b25e
2025-06-08 21:33:31.686 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@25c3b25e
2025-06-08 21:33:31.687 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@132f0d5a
2025-06-08 21:33:31.687 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@2c459a22
2025-06-08 21:33:31.687 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@53241ec5
2025-06-08 21:33:31.688 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6bcd17bd
2025-06-08 21:33:31.688 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6bcd17bd
2025-06-08 21:33:31.688 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@638243
2025-06-08 21:33:31.689 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@638243
2025-06-08 21:33:31.689 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@778ce7
2025-06-08 21:33:31.689 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7356681a
2025-06-08 21:33:31.689 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7025f932
2025-06-08 21:33:31.690 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6cc80cef
2025-06-08 21:33:31.690 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5064a525
2025-06-08 21:33:31.690 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1032118b
2025-06-08 21:33:31.691 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4f0186d6
2025-06-08 21:33:31.691 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4f0186d6
2025-06-08 21:33:31.692 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@638254ad
2025-06-08 21:33:31.692 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@638254ad
2025-06-08 21:33:31.692 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@163a9875
2025-06-08 21:33:31.693 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@163a9875
2025-06-08 21:33:31.693 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@16847d70
2025-06-08 21:33:31.693 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@16847d70
2025-06-08 21:33:31.693 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@55f06e40
2025-06-08 21:33:31.694 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@55f06e40
2025-06-08 21:33:31.694 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@24a66f6f
2025-06-08 21:33:31.694 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@661db2be
2025-06-08 21:33:31.694 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@53c73cf0
2025-06-08 21:33:31.695 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@53c73cf0
2025-06-08 21:33:31.695 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@513daa6
2025-06-08 21:33:31.695 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1259107c
2025-06-08 21:33:31.695 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@19dac8cb
2025-06-08 21:33:31.696 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@739047bc
2025-06-08 21:33:31.696 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@739047bc
2025-06-08 21:33:31.696 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@68cd7582
2025-06-08 21:33:31.696 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@324d5217
2025-06-08 21:33:31.697 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@7d9e5805
2025-06-08 21:33:31.697 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7d9e5805
2025-06-08 21:33:31.698 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@c425dad
2025-06-08 21:33:31.699 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@c425dad
2025-06-08 21:33:31.699 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@f2058c2
2025-06-08 21:33:31.700 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@f2058c2
2025-06-08 21:33:31.701 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@f2058c2
2025-06-08 21:33:31.702 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@57a56edb
2025-06-08 21:33:31.703 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@57a56edb
2025-06-08 21:33:31.703 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@57a56edb
2025-06-08 21:33:31.704 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@58744a5a
2025-06-08 21:33:31.705 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4b2e7d9e
2025-06-08 21:33:31.705 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@37810196
2025-06-08 21:33:31.705 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@37810196
2025-06-08 21:33:31.705 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4dddaba6
2025-06-08 21:33:31.706 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4dddaba6
2025-06-08 21:33:31.706 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4dddaba6
2025-06-08 21:33:31.707 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@25ae827a
2025-06-08 21:33:31.707 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1dd4c9dc
2025-06-08 21:33:31.708 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@22e6e641
2025-06-08 21:33:31.708 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@22e6e641
2025-06-08 21:33:31.709 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@246f920
2025-06-08 21:33:31.709 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@246f920
2025-06-08 21:33:31.709 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@246f920
2025-06-08 21:33:31.710 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@53aa1640
2025-06-08 21:33:31.710 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@53aa1640
2025-06-08 21:33:31.710 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@680bafc0
2025-06-08 21:33:31.710 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@680bafc0
2025-06-08 21:33:31.710 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7dca986e
2025-06-08 21:33:31.711 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7dca986e
2025-06-08 21:33:31.711 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4870e10e
2025-06-08 21:33:31.711 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4870e10e
2025-06-08 21:33:31.711 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4b6be656
2025-06-08 21:33:31.711 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4b6be656
2025-06-08 21:33:31.712 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@7e2b3554
2025-06-08 21:33:31.712 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@570bdb17
2025-06-08 21:33:31.713 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@18bc3869
2025-06-08 21:33:31.714 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@cf1247e
2025-06-08 21:33:31.714 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2b572121
2025-06-08 21:33:31.720 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@583d638f
2025-06-08 21:33:31.720 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@583d638f
2025-06-08 21:33:31.722 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1ecd3817
2025-06-08 21:33:31.723 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@23008e9
2025-06-08 21:33:31.723 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3fbdc549
2025-06-08 21:33:31.724 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6638f22c
2025-06-08 21:33:31.724 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1142737c
2025-06-08 21:33:31.724 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@13b746fd
2025-06-08 21:33:31.724 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@42714e4f
2025-06-08 21:33:31.725 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@63796dbf
2025-06-08 21:33:31.725 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@61a22b3f
2025-06-08 21:33:31.729 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@18ff16dd] into BootstrapContext; was [null]
2025-06-08 21:33:31.730 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@18ff16dd) [was null]
2025-06-08 21:33:31.731 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@54935340] into BootstrapContext; was [null]
2025-06-08 21:33:31.732 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@758535cb] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@67f3b342]
2025-06-08 21:33:31.759 [JavaFX-Launcher] DEBUG o.h.j.b.i.PersistenceUnitInfoDescriptor - Pushing class transformers for PU named 'default' on loading classloader jdk.internal.loader.ClassLoaders$AppClassLoader@33909752
2025-06-08 21:33:31.996 [JavaFX-Launcher] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-08 21:33:31.997 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@18ff16dd]
2025-06-08 21:33:31.997 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@18ff16dd]
2025-06-08 21:33:32.037 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-08 21:33:32.189 [JavaFX-Launcher] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@45d9db9a
2025-06-08 21:33:32.192 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-08 21:33:32.202 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : SQLite
	version : 3.46.0
	  major : 3
	  minor : 46
2025-06-08 21:33:32.203 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : SQLite JDBC
	version : 3.46.0.0
	  major : 3
	  minor : 46
2025-06-08 21:33:32.204 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2
2025-06-08 21:33:32.237 [JavaFX-Launcher] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.community.dialect.SQLiteDialect, version: 3.46
2025-06-08 21:33:32.243 [JavaFX-Launcher] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-06-08 21:33:32.244 [JavaFX-Launcher] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2025-06-08 21:33:32.270 [JavaFX-Launcher] DEBUG org.hibernate.orm.jdbc.lob - HHH10010005: Disabling contextual LOB creation as createClob() method threw error : java.sql.SQLFeatureNotSupportedException
2025-06-08 21:33:32.277 [JavaFX-Launcher] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 3.46
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-08 21:33:32.301 [JavaFX-Launcher] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(PRIMITIVE_ARRAY_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-06-08 21:33:32.302 [JavaFX-Launcher] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STRING_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-08 21:33:32.308 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-06-08 21:33:32.309 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:33:32.310 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:33:32.313 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:33:32.314 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:33:32.315 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:33:32.316 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:33:32.317 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:33:32.317 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:33:32.320 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:33:32.321 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:33:32.321 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:33:32.323 [JavaFX-Launcher] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71b68788] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@11825df6]
2025-06-08 21:33:32.375 [JavaFX-Launcher] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-06-08 21:33:32.410 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:33:32.422 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Categoria
2025-06-08 21:33:32.435 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Categoria on table categoria
2025-06-08 21:33:32.448 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:33:32.476 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_categoria')
2025-06-08 21:33:32.479 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:33:32.479 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:33:32.487 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCategoria with lazy=false
2025-06-08 21:33:32.492 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:idCategoria]
2025-06-08 21:33:32.499 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCategoria
2025-06-08 21:33:32.504 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.id_categoria
2025-06-08 21:33:32.506 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCategoria
2025-06-08 21:33:32.511 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_categoria)]), idCategoria, identity, , ...)
2025-06-08 21:33:32.513 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:33:32.513 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:33:32.514 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:estado]
2025-06-08 21:33:32.515 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:33:32.516 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.estado
2025-06-08 21:33:32.517 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:33:32.518 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:33:32.519 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:33:32.520 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:nombre]
2025-06-08 21:33:32.520 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:33:32.521 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.nombre
2025-06-08 21:33:32.521 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:33:32.524 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:33:32.533 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:33:32.534 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Cliente
2025-06-08 21:33:32.535 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Cliente on table cliente
2025-06-08 21:33:32.536 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:33:32.538 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_cliente')
2025-06-08 21:33:32.539 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:33:32.540 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:33:32.540 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCliente with lazy=false
2025-06-08 21:33:32.541 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:idCliente]
2025-06-08 21:33:32.541 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCliente
2025-06-08 21:33:32.542 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.id_cliente
2025-06-08 21:33:32.542 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCliente
2025-06-08 21:33:32.543 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_cliente)]), idCliente, identity, , ...)
2025-06-08 21:33:32.543 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='apellido')
2025-06-08 21:33:32.544 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property apellido with lazy=false
2025-06-08 21:33:32.544 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:apellido]
2025-06-08 21:33:32.544 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for apellido
2025-06-08 21:33:32.545 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.apellido
2025-06-08 21:33:32.545 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property apellido
2025-06-08 21:33:32.546 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cant_visitas')
2025-06-08 21:33:32.546 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantVisitas with lazy=false
2025-06-08 21:33:32.547 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:cantVisitas]
2025-06-08 21:33:32.548 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantVisitas
2025-06-08 21:33:32.549 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.cant_visitas
2025-06-08 21:33:32.550 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantVisitas
2025-06-08 21:33:32.553 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='dni')
2025-06-08 21:33:32.554 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property dni with lazy=false
2025-06-08 21:33:32.554 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:dni]
2025-06-08 21:33:32.555 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for dni
2025-06-08 21:33:32.555 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.dni
2025-06-08 21:33:32.556 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property dni
2025-06-08 21:33:32.557 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
2025-06-08 21:33:32.558 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-06-08 21:33:32.558 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:email]
2025-06-08 21:33:32.559 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email
2025-06-08 21:33:32.559 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.email
2025-06-08 21:33:32.559 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property email
2025-06-08 21:33:32.560 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:33:32.560 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:33:32.561 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:estado]
2025-06-08 21:33:32.561 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:33:32.562 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.estado
2025-06-08 21:33:32.562 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:33:32.563 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:33:32.564 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:33:32.564 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:nombre]
2025-06-08 21:33:32.564 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:33:32.565 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.nombre
2025-06-08 21:33:32.566 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:33:32.567 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='telefono')
2025-06-08 21:33:32.567 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property telefono with lazy=false
2025-06-08 21:33:32.568 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:telefono]
2025-06-08 21:33:32.569 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for telefono
2025-06-08 21:33:32.569 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.telefono
2025-06-08 21:33:32.570 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property telefono
2025-06-08 21:33:32.570 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:33:32.571 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:33:32.572 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name DetPedido
2025-06-08 21:33:32.572 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.DetPedido on table detalle_pedido
2025-06-08 21:33:32.573 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:33:32.583 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_detalle_pedido')
2025-06-08 21:33:32.584 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:33:32.585 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:33:32.586 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idDetallePedido with lazy=false
2025-06-08 21:33:32.587 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:idDetallePedido]
2025-06-08 21:33:32.588 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idDetallePedido
2025-06-08 21:33:32.589 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.id_detalle_pedido
2025-06-08 21:33:32.589 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idDetallePedido
2025-06-08 21:33:32.590 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_detalle_pedido)]), idDetallePedido, identity, , ...)
2025-06-08 21:33:32.591 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cantidad')
2025-06-08 21:33:32.591 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantidad with lazy=false
2025-06-08 21:33:32.592 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:cantidad]
2025-06-08 21:33:32.593 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantidad
2025-06-08 21:33:32.593 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.cantidad
2025-06-08 21:33:32.593 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantidad
2025-06-08 21:33:32.594 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:33:32.595 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:33:32.595 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:estado]
2025-06-08 21:33:32.596 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:33:32.596 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.estado
2025-06-08 21:33:32.597 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:33:32.600 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_factura',referencedColumn='id_factura')
2025-06-08 21:33:32.603 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:33:32.611 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property factura
2025-06-08 21:33:32.612 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='igv')
2025-06-08 21:33:32.614 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property igv with lazy=false
2025-06-08 21:33:32.615 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:igv]
2025-06-08 21:33:32.616 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for igv
2025-06-08 21:33:32.616 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.igv
2025-06-08 21:33:32.617 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property igv
2025-06-08 21:33:32.619 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:33:32.621 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:33:32.621 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:33:32.621 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio_unitario')
2025-06-08 21:33:32.623 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precioUnitario with lazy=false
2025-06-08 21:33:32.623 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:precioUnitario]
2025-06-08 21:33:32.624 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precioUnitario
2025-06-08 21:33:32.624 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.precio_unitario
2025-06-08 21:33:32.625 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property precioUnitario
2025-06-08 21:33:32.626 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_producto',referencedColumn='id_producto')
2025-06-08 21:33:32.627 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:33:32.628 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property producto
2025-06-08 21:33:32.628 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='subtotal')
2025-06-08 21:33:32.629 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property subtotal with lazy=false
2025-06-08 21:33:32.630 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:subtotal]
2025-06-08 21:33:32.630 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for subtotal
2025-06-08 21:33:32.631 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.subtotal
2025-06-08 21:33:32.632 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property subtotal
2025-06-08 21:33:32.633 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:33:32.634 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:33:32.635 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:total]
2025-06-08 21:33:32.636 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:33:32.637 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.total
2025-06-08 21:33:32.637 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:33:32.638 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:33:32.639 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:33:32.640 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Empleado
2025-06-08 21:33:32.641 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Empleado on table empleado
2025-06-08 21:33:32.642 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:33:32.645 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_empleado')
2025-06-08 21:33:32.645 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:33:32.646 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:33:32.646 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-06-08 21:33:32.647 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:id]
2025-06-08 21:33:32.648 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id
2025-06-08 21:33:32.649 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.id_empleado
2025-06-08 21:33:32.649 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property id
2025-06-08 21:33:32.650 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_empleado)]), id, identity, , ...)
2025-06-08 21:33:32.651 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='apellido')
2025-06-08 21:33:32.652 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property apellido with lazy=false
2025-06-08 21:33:32.653 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:apellido]
2025-06-08 21:33:32.653 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for apellido
2025-06-08 21:33:32.653 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.apellido
2025-06-08 21:33:32.654 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property apellido
2025-06-08 21:33:32.654 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='dni')
2025-06-08 21:33:32.655 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property dni with lazy=false
2025-06-08 21:33:32.655 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:dni]
2025-06-08 21:33:32.655 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for dni
2025-06-08 21:33:32.655 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.dni
2025-06-08 21:33:32.656 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property dni
2025-06-08 21:33:32.657 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:33:32.657 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:33:32.657 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:estado]
2025-06-08 21:33:32.657 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:33:32.657 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.estado
2025-06-08 21:33:32.659 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:33:32.659 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:33:32.660 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:33:32.660 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:nombre]
2025-06-08 21:33:32.661 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:33:32.661 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.nombre
2025-06-08 21:33:32.661 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:33:32.663 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password')
2025-06-08 21:33:32.663 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-06-08 21:33:32.663 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:password]
2025-06-08 21:33:32.665 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password
2025-06-08 21:33:32.666 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.password
2025-06-08 21:33:32.666 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property password
2025-06-08 21:33:32.667 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='rol')
2025-06-08 21:33:32.668 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property rol with lazy=false
2025-06-08 21:33:32.669 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:rol]
2025-06-08 21:33:32.670 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for rol
2025-06-08 21:33:32.670 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.rol
2025-06-08 21:33:32.670 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property rol
2025-06-08 21:33:32.671 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='telefono')
2025-06-08 21:33:32.671 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property telefono with lazy=false
2025-06-08 21:33:32.672 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:telefono]
2025-06-08 21:33:32.672 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for telefono
2025-06-08 21:33:32.673 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.telefono
2025-06-08 21:33:32.673 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property telefono
2025-06-08 21:33:32.674 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='usuario')
2025-06-08 21:33:32.674 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property usuario with lazy=false
2025-06-08 21:33:32.674 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:usuario]
2025-06-08 21:33:32.674 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for usuario
2025-06-08 21:33:32.674 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.usuario
2025-06-08 21:33:32.676 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property usuario
2025-06-08 21:33:32.677 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:33:32.678 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:33:32.679 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Factura
2025-06-08 21:33:32.679 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Factura on table factura
2025-06-08 21:33:32.680 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:33:32.688 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_factura')
2025-06-08 21:33:32.689 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:33:32.689 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:33:32.691 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idFactura with lazy=false
2025-06-08 21:33:32.691 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:idFactura]
2025-06-08 21:33:32.691 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idFactura
2025-06-08 21:33:32.691 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.id_factura
2025-06-08 21:33:32.691 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idFactura
2025-06-08 21:33:32.691 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_factura)]), idFactura, identity, , ...)
2025-06-08 21:33:32.692 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_cliente',referencedColumn='id_cliente')
2025-06-08 21:33:32.692 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:33:32.692 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cliente
2025-06-08 21:33:32.693 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='codigo')
2025-06-08 21:33:32.693 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codigo with lazy=false
2025-06-08 21:33:32.694 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:codigo]
2025-06-08 21:33:32.694 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codigo
2025-06-08 21:33:32.694 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.codigo
2025-06-08 21:33:32.695 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property codigo
2025-06-08 21:33:32.695 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:33:32.696 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:33:32.696 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:estado]
2025-06-08 21:33:32.697 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:33:32.697 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.estado
2025-06-08 21:33:32.697 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:33:32.698 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fecha_emision')
2025-06-08 21:33:32.698 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaEmision with lazy=false
2025-06-08 21:33:32.699 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:fechaEmision]
2025-06-08 21:33:32.699 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaEmision
2025-06-08 21:33:32.700 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.fecha_emision
2025-06-08 21:33:32.701 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaEmision
2025-06-08 21:33:32.702 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='igv')
2025-06-08 21:33:32.702 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property igv with lazy=false
2025-06-08 21:33:32.702 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:igv]
2025-06-08 21:33:32.702 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for igv
2025-06-08 21:33:32.703 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.igv
2025-06-08 21:33:32.703 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property igv
2025-06-08 21:33:32.704 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:33:32.705 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:33:32.706 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:33:32.706 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='subtotal')
2025-06-08 21:33:32.706 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property subtotal with lazy=false
2025-06-08 21:33:32.706 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:subtotal]
2025-06-08 21:33:32.707 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for subtotal
2025-06-08 21:33:32.707 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.subtotal
2025-06-08 21:33:32.707 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property subtotal
2025-06-08 21:33:32.707 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:33:32.707 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:33:32.707 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:total]
2025-06-08 21:33:32.708 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:33:32.708 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.total
2025-06-08 21:33:32.708 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:33:32.709 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:33:32.709 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:33:32.710 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Menu
2025-06-08 21:33:32.710 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Menu on table menu
2025-06-08 21:33:32.710 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:33:32.712 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_menu')
2025-06-08 21:33:32.713 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:33:32.713 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:33:32.713 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idMenu with lazy=false
2025-06-08 21:33:32.713 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Menu:idMenu]
2025-06-08 21:33:32.714 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idMenu
2025-06-08 21:33:32.714 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: menu.id_menu
2025-06-08 21:33:32.714 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idMenu
2025-06-08 21:33:32.715 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_menu)]), idMenu, identity, , ...)
2025-06-08 21:33:32.715 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cod_pedido')
2025-06-08 21:33:32.716 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codPedido with lazy=false
2025-06-08 21:33:32.717 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Menu:codPedido]
2025-06-08 21:33:32.717 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codPedido
2025-06-08 21:33:32.718 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: menu.cod_pedido
2025-06-08 21:33:32.718 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property codPedido
2025-06-08 21:33:32.719 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:33:32.719 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:33:32.720 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:33:32.721 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_producto',referencedColumn='id_producto')
2025-06-08 21:33:32.721 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:33:32.722 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property producto
2025-06-08 21:33:32.723 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:33:32.724 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:33:32.725 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Mesa
2025-06-08 21:33:32.725 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Mesa on table mesa
2025-06-08 21:33:32.726 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:33:32.728 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_mesa')
2025-06-08 21:33:32.728 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:33:32.728 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:33:32.729 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idMesa with lazy=false
2025-06-08 21:33:32.729 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:idMesa]
2025-06-08 21:33:32.730 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idMesa
2025-06-08 21:33:32.731 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.id_mesa
2025-06-08 21:33:32.732 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idMesa
2025-06-08 21:33:32.732 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_mesa)]), idMesa, identity, , ...)
2025-06-08 21:33:32.733 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='capacidad')
2025-06-08 21:33:32.734 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property capacidad with lazy=false
2025-06-08 21:33:32.735 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:capacidad]
2025-06-08 21:33:32.735 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for capacidad
2025-06-08 21:33:32.736 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.capacidad
2025-06-08 21:33:32.736 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property capacidad
2025-06-08 21:33:32.736 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='detalle')
2025-06-08 21:33:32.737 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property detalle with lazy=false
2025-06-08 21:33:32.737 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:detalle]
2025-06-08 21:33:32.738 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for detalle
2025-06-08 21:33:32.739 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.detalle
2025-06-08 21:33:32.739 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property detalle
2025-06-08 21:33:32.740 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:33:32.740 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:33:32.741 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:estado]
2025-06-08 21:33:32.741 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:33:32.742 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.estado
2025-06-08 21:33:32.742 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:33:32.742 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='numero')
2025-06-08 21:33:32.743 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property numero with lazy=false
2025-06-08 21:33:32.743 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:numero]
2025-06-08 21:33:32.743 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for numero
2025-06-08 21:33:32.743 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.numero
2025-06-08 21:33:32.744 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property numero
2025-06-08 21:33:32.744 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:33:32.745 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:33:32.745 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Pedido
2025-06-08 21:33:32.746 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Pedido on table pedido
2025-06-08 21:33:32.747 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:33:32.749 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_pedido')
2025-06-08 21:33:32.749 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:33:32.750 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:33:32.750 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idPedido with lazy=false
2025-06-08 21:33:32.751 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:idPedido]
2025-06-08 21:33:32.752 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idPedido
2025-06-08 21:33:32.752 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.id_pedido
2025-06-08 21:33:32.752 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idPedido
2025-06-08 21:33:32.753 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_pedido)]), idPedido, identity, , ...)
2025-06-08 21:33:32.754 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cant_pedidos')
2025-06-08 21:33:32.754 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantPedidos with lazy=false
2025-06-08 21:33:32.755 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:cantPedidos]
2025-06-08 21:33:32.755 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantPedidos
2025-06-08 21:33:32.755 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.cant_pedidos
2025-06-08 21:33:32.755 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantPedidos
2025-06-08 21:33:32.756 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_cliente',referencedColumn='id_cliente')
2025-06-08 21:33:32.757 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:33:32.757 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cliente
2025-06-08 21:33:32.758 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_empleado',referencedColumn='id_empleado')
2025-06-08 21:33:32.759 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:33:32.759 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property empleado
2025-06-08 21:33:32.759 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:33:32.760 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:33:32.760 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:estado]
2025-06-08 21:33:32.760 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:33:32.760 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.estado
2025-06-08 21:33:32.761 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:33:32.761 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fecha_hora')
2025-06-08 21:33:32.761 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaHora with lazy=false
2025-06-08 21:33:32.762 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:fechaHora]
2025-06-08 21:33:32.762 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaHora
2025-06-08 21:33:32.762 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.fecha_hora
2025-06-08 21:33:32.763 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaHora
2025-06-08 21:33:32.764 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_mesa',referencedColumn='id_mesa')
2025-06-08 21:33:32.764 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:33:32.765 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property mesa
2025-06-08 21:33:32.766 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:33:32.766 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:33:32.767 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:total]
2025-06-08 21:33:32.767 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:33:32.768 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.total
2025-06-08 21:33:32.768 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:33:32.769 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:33:32.770 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:33:32.770 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Producto
2025-06-08 21:33:32.770 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Producto on table producto
2025-06-08 21:33:32.771 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:33:32.774 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_producto')
2025-06-08 21:33:32.774 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:33:32.775 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:33:32.775 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idProducto with lazy=false
2025-06-08 21:33:32.775 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:idProducto]
2025-06-08 21:33:32.776 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idProducto
2025-06-08 21:33:32.776 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.id_producto
2025-06-08 21:33:32.777 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idProducto
2025-06-08 21:33:32.778 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_producto)]), idProducto, identity, , ...)
2025-06-08 21:33:32.778 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_categoria',referencedColumn='id_categoria')
2025-06-08 21:33:32.779 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:33:32.779 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property categoria
2025-06-08 21:33:32.779 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='descripcion')
2025-06-08 21:33:32.780 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property descripcion with lazy=false
2025-06-08 21:33:32.780 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:descripcion]
2025-06-08 21:33:32.780 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for descripcion
2025-06-08 21:33:32.781 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.descripcion
2025-06-08 21:33:32.781 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property descripcion
2025-06-08 21:33:32.782 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:33:32.782 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:33:32.783 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:estado]
2025-06-08 21:33:32.783 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:33:32.784 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.estado
2025-06-08 21:33:32.784 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:33:32.785 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:33:32.785 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:33:32.786 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:nombre]
2025-06-08 21:33:32.786 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:33:32.787 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.nombre
2025-06-08 21:33:32.787 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:33:32.787 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio')
2025-06-08 21:33:32.788 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precio with lazy=false
2025-06-08 21:33:32.788 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:precio]
2025-06-08 21:33:32.789 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precio
2025-06-08 21:33:32.789 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.precio
2025-06-08 21:33:32.789 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property precio
2025-06-08 21:33:32.790 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_seccion',referencedColumn='id_seccion')
2025-06-08 21:33:32.790 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:33:32.791 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property seccion
2025-06-08 21:33:32.791 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='stock')
2025-06-08 21:33:32.792 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property stock with lazy=false
2025-06-08 21:33:32.792 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:stock]
2025-06-08 21:33:32.792 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for stock
2025-06-08 21:33:32.793 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.stock
2025-06-08 21:33:32.793 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property stock
2025-06-08 21:33:32.794 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:33:32.794 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:33:32.795 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Seccion
2025-06-08 21:33:32.795 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Seccion on table seccion
2025-06-08 21:33:32.795 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:33:32.798 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_seccion')
2025-06-08 21:33:32.799 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:33:32.799 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:33:32.799 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idSeccion with lazy=false
2025-06-08 21:33:32.800 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:idSeccion]
2025-06-08 21:33:32.801 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idSeccion
2025-06-08 21:33:32.801 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.id_seccion
2025-06-08 21:33:32.801 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idSeccion
2025-06-08 21:33:32.802 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_seccion)]), idSeccion, identity, , ...)
2025-06-08 21:33:32.802 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='detalle')
2025-06-08 21:33:32.803 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property detalle with lazy=false
2025-06-08 21:33:32.803 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:detalle]
2025-06-08 21:33:32.803 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for detalle
2025-06-08 21:33:32.804 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.detalle
2025-06-08 21:33:32.804 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property detalle
2025-06-08 21:33:32.805 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:33:32.805 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:33:32.805 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:estado]
2025-06-08 21:33:32.805 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:33:32.806 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.estado
2025-06-08 21:33:32.806 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:33:32.807 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:33:32.808 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idCategoria
2025-06-08 21:33:32.810 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:33:32.811 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:33:32.811 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idCliente
2025-06-08 21:33:32.812 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apellido
2025-06-08 21:33:32.812 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantVisitas
2025-06-08 21:33:32.812 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for dni
2025-06-08 21:33:32.813 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-06-08 21:33:32.813 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:33:32.813 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:33:32.813 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for telefono
2025-06-08 21:33:32.814 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idDetallePedido
2025-06-08 21:33:32.814 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantidad
2025-06-08 21:33:32.815 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:33:32.815 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for igv
2025-06-08 21:33:32.815 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precioUnitario
2025-06-08 21:33:32.816 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for subtotal
2025-06-08 21:33:32.816 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:33:32.817 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-06-08 21:33:32.817 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apellido
2025-06-08 21:33:32.818 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for dni
2025-06-08 21:33:32.818 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:33:32.819 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:33:32.819 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-06-08 21:33:32.819 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for rol
2025-06-08 21:33:32.819 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for telefono
2025-06-08 21:33:32.819 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for usuario
2025-06-08 21:33:32.819 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idFactura
2025-06-08 21:33:32.820 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codigo
2025-06-08 21:33:32.820 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:33:32.820 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaEmision
2025-06-08 21:33:32.820 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for igv
2025-06-08 21:33:32.820 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for subtotal
2025-06-08 21:33:32.820 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:33:32.821 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idMenu
2025-06-08 21:33:32.821 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codPedido
2025-06-08 21:33:32.821 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idMesa
2025-06-08 21:33:32.821 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for capacidad
2025-06-08 21:33:32.821 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for detalle
2025-06-08 21:33:32.822 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:33:32.822 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for numero
2025-06-08 21:33:32.822 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idPedido
2025-06-08 21:33:32.822 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantPedidos
2025-06-08 21:33:32.823 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:33:32.823 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaHora
2025-06-08 21:33:32.823 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:33:32.824 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idProducto
2025-06-08 21:33:32.824 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for descripcion
2025-06-08 21:33:32.824 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:33:32.824 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:33:32.825 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precio
2025-06-08 21:33:32.825 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for stock
2025-06-08 21:33:32.825 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idSeccion
2025-06-08 21:33:32.825 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for detalle
2025-06-08 21:33:32.825 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:33:32.836 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_categoria] to be non-null as it is part of the primary key for table [categoria]
2025-06-08 21:33:32.836 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_cliente] to be non-null as it is part of the primary key for table [cliente]
2025-06-08 21:33:32.836 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_detalle_pedido] to be non-null as it is part of the primary key for table [detalle_pedido]
2025-06-08 21:33:32.837 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_empleado] to be non-null as it is part of the primary key for table [empleado]
2025-06-08 21:33:32.837 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_factura] to be non-null as it is part of the primary key for table [factura]
2025-06-08 21:33:32.837 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_menu] to be non-null as it is part of the primary key for table [menu]
2025-06-08 21:33:32.838 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_mesa] to be non-null as it is part of the primary key for table [mesa]
2025-06-08 21:33:32.838 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_pedido] to be non-null as it is part of the primary key for table [pedido]
2025-06-08 21:33:32.838 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_producto] to be non-null as it is part of the primary key for table [producto]
2025-06-08 21:33:32.838 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_seccion] to be non-null as it is part of the primary key for table [seccion]
2025-06-08 21:33:33.124 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2025-06-08 21:33:33.163 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:33:33.165 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=23, javafx.runtime.version=21.0.1+6, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@7a98592a, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.community.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant\target\classes;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter\3.5.0\spring-boot-starter-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot\3.5.0\spring-boot-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-context\6.2.7\spring-context-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-expression\6.2.7\spring-expression-6.2.7.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-observation\1.15.0\micrometer-observation-1.15.0.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-commons\1.15.0\micrometer-commons-1.15.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.5.0\spring-boot-autoconfigure-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.5.0\spring-boot-starter-logging-3.5.0.jar;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\USUARIO\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-core\6.2.7\spring-core-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jcl\6.2.7\spring-jcl-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\yaml\snakeyaml\2.4\snakeyaml-2.4.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.5.0\spring-boot-starter-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.5.0\spring-boot-starter-jdbc-3.5.0.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jdbc\6.2.7\spring-jdbc-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-core\6.6.15.Final\hibernate-core-6.6.15.Final.jar;C:\Users\USUARIO\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\USUARIO\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\USUARIO\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\USUARIO\.m2\repository\net\bytebuddy\byte-buddy\1.17.5\byte-buddy-1.17.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\USUARIO\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\USUARIO\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-jpa\3.5.0\spring-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-commons\3.5.0\spring-data-commons-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-orm\6.2.7\spring-orm-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aop\6.2.7\spring-aop-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-tx\6.2.7\spring-tx-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-beans\6.2.7\spring-beans-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aspects\6.2.7\spring-aspects-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\USUARIO\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\USUARIO\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-community-dialects\6.4.4.Final\hibernate-community-dialects-6.4.4.Final.jar;C:\Users\USUARIO\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\USUARIO\.m2\repository\org\xerial\sqlite-jdbc\3.46.0.0\sqlite-jdbc-3.46.0.0.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\USUARIO\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.0\jackson-annotations-2.17.0.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.2.Final\hibernate-validator-7.0.2.Final.jar;C:\Users\USUARIO\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-fxml\21.0.1\javafx-fxml-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-fxml\21.0.1\javafx-fxml-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-swing\21.0.1\javafx-swing-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-swing\21.0.1\javafx-swing-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\bootstrapfx\bootstrapfx-core\0.2.4\bootstrapfx-core-0.2.4.jar;C:\Users\USUARIO\.m2\repository\io\github\mkpaz\atlantafx-base\2.0.0\atlantafx-base-2.0.0.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-javafx\12.3.1\ikonli-javafx-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-core\12.3.1\ikonli-core-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-fontawesome5-pack\12.3.1\ikonli-fontawesome5-pack-12.3.1.jar;C:\Users\USUARIO\.m2\repository\net\sf\jasperreports\jasperreports\6.20.0\jasperreports-6.20.0.jar;C:\Users\USUARIO\.m2\repository\commons-beanutils\commons-beanutils\1.9.4\commons-beanutils-1.9.4.jar;C:\Users\USUARIO\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\USUARIO\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\USUARIO\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-collections4\4.2\commons-collections4-4.2.jar;C:\Users\USUARIO\.m2\repository\com\lowagie\itext\2.1.7.js10\itext-2.1.7.js10.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcprov-jdk15on\1.70\bcprov-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcutil-jdk15on\1.70\bcutil-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jcommon\1.0.23\jcommon-1.0.23.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jfreechart\1.0.19\jfreechart-1.0.19.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\jdt\ecj\3.21.0\ecj-3.21.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.19.0\jackson-core-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.19.0\jackson-databind-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-xml\2.19.0\jackson-dataformat-xml-2.19.0.jar;C:\Users\USUARIO\.m2\repository\org\codehaus\woodstox\stax2-api\4.2.2\stax2-api-4.2.2.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\woodstox\woodstox-core\7.1.0\woodstox-core-7.1.0.jar;C:\Users\USUARIO\.m2\repository\win\zqxu\jrviewer-fx\0.1.1\jrviewer-fx-0.1.1.jar;C:\Users\USUARIO\.m2\repository\jakarta\el\jakarta.el-api\4.0.0\jakarta.el-api-4.0.0.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jakarta.el\4.0.2\jakarta.el-4.0.2.jar;C:\Users\USUARIO\.m2\repository\com\miglayout\miglayout\3.7.4\miglayout-3.7.4.jar;C:\Users\USUARIO\.m2\repository\org\apache\groovy\groovy\4.0.6\groovy-4.0.6.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml\5.2.3\poi-ooxml-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi\5.2.3\poi-5.2.3.jar;C:\Users\USUARIO\.m2\repository\commons-codec\commons-codec\1.18.0\commons-codec-1.18.0.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-math3\3.6.1\commons-math3-3.6.1.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\SparseBitSet\1.2\SparseBitSet-1.2.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml-lite\5.2.3\poi-ooxml-lite-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\xmlbeans\xmlbeans\5.1.1\xmlbeans-5.1.1.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-compress\1.21\commons-compress-1.21.jar;C:\Users\USUARIO\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\USUARIO\.m2\repository\com\github\virtuald\curvesapi\1.07\curvesapi-1.07.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar, LOGBACK_ROLLINGPOLICY_MAX_FILE_SIZE=10485760, java.vm.vendor=Oracle Corporation, LOG_PATH=logs/, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Bogota, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, javafx.version=21.0.1, os.name=Windows 11, java.vm.specification.version=23, APPLICATION_NAME=ProyectoRestaurant, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=MX, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk-23\bin, sun.java.command=pe.edu.upeu.proyecto_restaurant.AppRestaurant, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.use_sql_comments=true, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7877d6d6, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\USUARIO, user.language=es, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-23, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7-58, user.name=USUARIO, stdout.encoding=cp850, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, FILE_LOG_PATTERN=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, LOG_FILE=logs/restaurant.log, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\USUARIO\AppData\Local\Temp\, java.version=23.0.2, LOGBACK_ROLLINGPOLICY_CLEAN_HISTORY_ON_START=false, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=11936, sun.os.patch.level=, CONSOLE_LOG_CHARSET=IBM850, LOGBACK_ROLLINGPOLICY_MAX_HISTORY=30, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4df97623, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-23\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;c:\Users\USUARIO\AppData\Local\Programs\cursor\resources\app\bin;C:\Users\USUARIO\AppData\Local\Programs\Python\Python313\Scripts\;C:\Users\USUARIO\AppData\Local\Programs\Python\Launcher\;C:\Users\USUARIO\AppData\Local\Microsoft\WindowsApps;C:\Users\USUARIO\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\USUARIO\AppData\Roaming\npm;C:\flutter\bin;C:\Users\USUARIO\AppData\Local\Programs\Python\Python313\;C:\ffpmg\bin;C:\Users\USUARIO\Downloads\apache-maven-3.9.9\bin;C:\Users\USUARIO\AppData\Local\GitHubDesktop\bin;C:\Users\USUARIO\AppData\Local\Microsoft\WinGet\Packages\Schniz.fnm_Microsoft.Winget.Source_8wekyb3d8bbwe;C:\Users\USUARIO\AppData\Local\Programs\cursor\resources\app\bin;., stderr.encoding=cp850, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=23.0.2+7-58, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), CONSOLE_LOG_PATTERN=%d{HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{36}) - %msg%n, java.class.version=67.0, LOGGED_APPLICATION_NAME=[ProyectoRestaurant] , LOGBACK_ROLLINGPOLICY_TOTAL_SIZE_CAP=104857600}
2025-06-08 21:33:33.169 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-06-08 21:33:33.176 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:33:33.177 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:33:33.177 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:33:33.177 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:33:33.178 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:33:33.178 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:33:33.178 [JavaFX-Launcher] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:33:33.180 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:33:33.181 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:33:33.181 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:33:33.182 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:33:33.182 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:33:33.183 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:33:33.184 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:33:33.184 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:33:33.220 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:33:33.221 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:33:33.225 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:33:33.225 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:33:33.227 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:33:33.228 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:33:33.232 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:33:33.232 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:33:33.236 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:33:33.236 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:33:33.244 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:33:33.244 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:33:33.248 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:33:33.248 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:33:33.250 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:33:33.251 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:33:33.253 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:33:33.253 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:33:33.256 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:33:33.295 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-06-08 21:33:33.295 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-06-08 21:33:33.297 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-06-08 21:33:33.298 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-06-08 21:33:33.301 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7e36d6f9] under count; prior registration was null
2025-06-08 21:33:33.303 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1f7b8ae2] under every; prior registration was null
2025-06-08 21:33:33.303 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@15f191c0] under any; prior registration was null
2025-06-08 21:33:33.304 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-06-08 21:33:33.304 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-06-08 21:33:33.305 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-06-08 21:33:33.305 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-06-08 21:33:33.305 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-06-08 21:33:33.305 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-06-08 21:33:33.305 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-06-08 21:33:33.305 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-06-08 21:33:33.305 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-06-08 21:33:33.306 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-06-08 21:33:33.306 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-06-08 21:33:33.306 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-06-08 21:33:33.306 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-06-08 21:33:33.307 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-06-08 21:33:33.307 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-06-08 21:33:33.307 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-06-08 21:33:33.307 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-06-08 21:33:33.309 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1889448f] under sinh; prior registration was null
2025-06-08 21:33:33.309 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2c42c8f8] under cosh; prior registration was null
2025-06-08 21:33:33.309 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@23e94f0d] under tanh; prior registration was null
2025-06-08 21:33:33.310 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@187e4a76] under pi; prior registration was null
2025-06-08 21:33:33.310 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4a01d8ca] under log; prior registration was null
2025-06-08 21:33:33.311 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-06-08 21:33:33.311 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-06-08 21:33:33.312 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-06-08 21:33:33.312 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-06-08 21:33:33.312 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-06-08 21:33:33.313 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-06-08 21:33:33.313 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-06-08 21:33:33.313 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-06-08 21:33:33.314 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-06-08 21:33:33.314 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-06-08 21:33:33.315 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-06-08 21:33:33.315 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-06-08 21:33:33.316 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@1e27d2c7] under position; prior registration was null
2025-06-08 21:33:33.318 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6befeaba] under overlay; prior registration was null
2025-06-08 21:33:33.320 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@6d74868f] under trim; prior registration was null
2025-06-08 21:33:33.321 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@da4fe79] under cast; prior registration was null
2025-06-08 21:33:33.322 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55f7f084] under collate; prior registration was null
2025-06-08 21:33:33.323 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@263de88e] under extract; prior registration was null
2025-06-08 21:33:33.323 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-06-08 21:33:33.324 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-06-08 21:33:33.324 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@ccaa188] under ifnull; prior registration was null
2025-06-08 21:33:33.324 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-06-08 21:33:33.325 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-06-08 21:33:33.325 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2b5d7093] under pad; prior registration was null
2025-06-08 21:33:33.326 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@55afaf3] under str; prior registration was null
2025-06-08 21:33:33.329 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@75b3a0f1] under format; prior registration was null
2025-06-08 21:33:33.330 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@758129d9] under timestampadd; prior registration was null
2025-06-08 21:33:33.332 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@255af37b] under timestampdiff; prior registration was null
2025-06-08 21:33:33.333 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-06-08 21:33:33.333 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-06-08 21:33:33.334 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@20cd665e] under current_date; prior registration was null
2025-06-08 21:33:33.335 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@8643959] under current_time; prior registration was null
2025-06-08 21:33:33.335 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1bf77324] under current_timestamp; prior registration was null
2025-06-08 21:33:33.336 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-06-08 21:33:33.336 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-06-08 21:33:33.336 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-06-08 21:33:33.336 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3d1d2285] under local_date; prior registration was null
2025-06-08 21:33:33.336 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@76294cee] under local_time; prior registration was null
2025-06-08 21:33:33.336 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5f2e0d83] under local_datetime; prior registration was null
2025-06-08 21:33:33.337 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7fe03b11] under offset_datetime; prior registration was null
2025-06-08 21:33:33.337 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-06-08 21:33:33.337 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-06-08 21:33:33.337 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-06-08 21:33:33.337 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-06-08 21:33:33.337 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2b3d2762] under instant; prior registration was null
2025-06-08 21:33:33.337 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-06-08 21:33:33.337 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@4a0b097] under sql; prior registration was null
2025-06-08 21:33:33.338 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6904013c] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-06-08 21:33:33.338 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@41a3d671] under left; prior registration was NamedSqmFunctionTemplate(left)
2025-06-08 21:33:33.338 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@23ed1bb2] under right; prior registration was NamedSqmFunctionTemplate(right)
2025-06-08 21:33:33.338 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@22482350] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-06-08 21:33:33.338 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(length)] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-06-08 21:33:33.338 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-06-08 21:33:33.340 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under least; prior registration was NamedSqmFunctionTemplate(least)
2025-06-08 21:33:33.340 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under greatest; prior registration was NamedSqmFunctionTemplate(greatest)
2025-06-08 21:33:33.340 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-06-08 21:33:33.340 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-06-08 21:33:33.341 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@421a3142] under trunc; prior registration was null
2025-06-08 21:33:33.341 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-06-08 21:33:33.341 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4a01d8ca
2025-06-08 21:33:33.343 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-06-08 21:33:33.343 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-06-08 21:33:33.343 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-06-08 21:33:33.343 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-06-08 21:33:33.343 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2025-06-08 21:33:33.343 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : chr -> char
2025-06-08 21:33:33.345 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@a3112a4] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-06-08 21:33:33.345 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3962f6ef] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2025-06-08 21:33:33.345 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7aa208cd] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2025-06-08 21:33:33.346 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(strftime)] under format; prior registration was org.hibernate.dialect.function.FormatFunction@75b3a0f1
2025-06-08 21:33:33.346 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-06-08 21:33:33.346 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-06-08 21:33:33.346 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-06-08 21:33:33.348 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-06-08 21:33:33.348 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-06-08 21:33:33.348 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-06-08 21:33:33.349 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@1aab1dd5] under listagg; prior registration was null
2025-06-08 21:33:33.352 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg)
2025-06-08 21:33:33.352 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-06-08 21:33:33.353 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2025-06-08 21:33:33.353 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-06-08 21:33:33.353 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-06-08 21:33:33.353 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-06-08 21:33:33.353 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg)
2025-06-08 21:33:33.354 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type)
2025-06-08 21:33:33.354 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-06-08 21:33:33.354 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg)
2025-06-08 21:33:33.354 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-06-08 21:33:33.354 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-06-08 21:33:33.354 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-06-08 21:33:33.355 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-06-08 21:33:33.355 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2025-06-08 21:33:33.355 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-06-08 21:33:33.355 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-06-08 21:33:33.355 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-06-08 21:33:33.356 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date
2025-06-08 21:33:33.356 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time
2025-06-08 21:33:33.356 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp
2025-06-08 21:33:33.356 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date
2025-06-08 21:33:33.356 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant
2025-06-08 21:33:33.357 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time
2025-06-08 21:33:33.357 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp
2025-06-08 21:33:33.357 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-06-08 21:33:33.358 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-06-08 21:33:33.358 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-06-08 21:33:33.358 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2025-06-08 21:33:33.358 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-06-08 21:33:33.359 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-06-08 21:33:33.359 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value
2025-06-08 21:33:33.359 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg)
2025-06-08 21:33:33.359 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-06-08 21:33:33.360 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-06-08 21:33:33.360 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-06-08 21:33:33.360 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant
2025-06-08 21:33:33.360 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-06-08 21:33:33.360 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value
2025-06-08 21:33:33.360 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-06-08 21:33:33.361 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-06-08 21:33:33.361 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-06-08 21:33:33.361 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-06-08 21:33:33.361 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-06-08 21:33:33.361 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-06-08 21:33:33.362 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date
2025-06-08 21:33:33.362 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime
2025-06-08 21:33:33.362 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time
2025-06-08 21:33:33.362 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date
2025-06-08 21:33:33.362 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime
2025-06-08 21:33:33.363 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time
2025-06-08 21:33:33.363 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(pattern, string[, start])
2025-06-08 21:33:33.364 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-06-08 21:33:33.365 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string)
2025-06-08 21:33:33.365 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding])
2025-06-08 21:33:33.365 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-06-08 21:33:33.365 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg)
2025-06-08 21:33:33.366 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg)
2025-06-08 21:33:33.366 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-06-08 21:33:33.367 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-06-08 21:33:33.367 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1)
2025-06-08 21:33:33.367 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-06-08 21:33:33.368 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-06-08 21:33:33.368 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2025-06-08 21:33:33.369 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-06-08 21:33:33.369 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi
2025-06-08 21:33:33.369 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-06-08 21:33:33.369 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-06-08 21:33:33.369 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-06-08 21:33:33.369 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-06-08 21:33:33.369 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-06-08 21:33:33.369 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-06-08 21:33:33.370 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number()
2025-06-08 21:33:33.370 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding])
2025-06-08 21:33:33.370 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-06-08 21:33:33.370 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-06-08 21:33:33.370 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-06-08 21:33:33.370 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-06-08 21:33:33.370 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql
2025-06-08 21:33:33.370 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-06-08 21:33:33.371 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg)
2025-06-08 21:33:33.371 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-06-08 21:33:33.371 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-06-08 21:33:33.371 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg)
2025-06-08 21:33:33.371 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-06-08 21:33:33.371 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-06-08 21:33:33.371 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-06-08 21:33:33.371 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-06-08 21:33:33.372 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-06-08 21:33:33.372 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... )
2025-06-08 21:33:33.372 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... )
2025-06-08 21:33:33.372 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string)
2025-06-08 21:33:33.376 [JavaFX-Launcher] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048)
2025-06-08 21:33:33.444 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:33:33.446 [JavaFX-Launcher] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-06-08 21:33:33.520 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.544 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.550 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.551 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.551 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:33:33.552 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:33:33.715 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Factura]: private accessor [cliente]
2025-06-08 21:33:33.720 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.721 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.745 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:33:33.745 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:33:33.772 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Empleado]: private accessor [apellido]
2025-06-08 21:33:33.774 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:33:33.774 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:33:33.792 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Seccion]: private accessor [detalle]
2025-06-08 21:33:33.794 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:33:33.794 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:33:33.812 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Cliente]: private accessor [apellido]
2025-06-08 21:33:33.814 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.815 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.816 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.816 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.817 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:33:33.817 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:33:33.834 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Menu]: private accessor [codPedido]
2025-06-08 21:33:33.835 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.836 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.838 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.838 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.838 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.838 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.839 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.839 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.839 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:33:33.839 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:33:33.866 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido]: private accessor [cantidad]
2025-06-08 21:33:33.867 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.868 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.868 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.869 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.870 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.870 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.870 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.871 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:33:33.871 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:33:33.891 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Producto]: private accessor [categoria]
2025-06-08 21:33:33.892 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.892 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.894 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:33:33.894 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:33:33.907 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Categoria]: private accessor [estado]
2025-06-08 21:33:33.909 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:33:33.910 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:33:33.932 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Mesa]: private accessor [capacidad]
2025-06-08 21:33:33.934 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.934 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.935 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.936 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.936 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.936 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.937 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:33:33.937 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:33:33.956 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Pedido]: private accessor [cantPedidos]
2025-06-08 21:33:33.957 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.957 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.958 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:33:33.995 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks
2025-06-08 21:33:33.996 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente]
2025-06-08 21:33:34.003 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido]
2025-06-08 21:33:34.004 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Factura) `staticFetchableList` generator
2025-06-08 21:33:34.005 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Empleado) `staticFetchableList` generator
2025-06-08 21:33:34.005 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Seccion) `staticFetchableList` generator
2025-06-08 21:33:34.006 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Cliente) `staticFetchableList` generator
2025-06-08 21:33:34.006 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido]
2025-06-08 21:33:34.007 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto]
2025-06-08 21:33:34.007 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Menu) `staticFetchableList` generator
2025-06-08 21:33:34.008 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura]
2025-06-08 21:33:34.008 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido]
2025-06-08 21:33:34.009 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto]
2025-06-08 21:33:34.009 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.DetPedido) `staticFetchableList` generator
2025-06-08 21:33:34.010 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria]
2025-06-08 21:33:34.011 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion]
2025-06-08 21:33:34.011 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Producto) `staticFetchableList` generator
2025-06-08 21:33:34.012 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Categoria) `staticFetchableList` generator
2025-06-08 21:33:34.012 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Mesa) `staticFetchableList` generator
2025-06-08 21:33:34.013 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente]
2025-06-08 21:33:34.013 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado]
2025-06-08 21:33:34.014 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa]
2025-06-08 21:33:34.015 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Pedido) `staticFetchableList` generator
2025-06-08 21:33:34.122 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2025-06-08 21:33:34.124 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Factura)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura] 
2025-06-08 21:33:34.137 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5220a553] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente] 
2025-06-08 21:33:34.139 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:33:34.143 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4b508b5f] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido] 
2025-06-08 21:33:34.144 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:33:34.145 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1434f5b] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente] 
2025-06-08 21:33:34.145 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:33:34.147 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1d3beb33] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado] 
2025-06-08 21:33:34.147 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:33:34.148 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@e2de298] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa] 
2025-06-08 21:33:34.148 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:33:34.155 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.cantVisitas]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.email]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.nombre]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.telefono]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.codigo]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.fechaEmision]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.igv]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.rol]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.telefono]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.subtotal]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.total]

2025-06-08 21:33:34.159 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (f1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura) {
          primaryTableReference : factura as f1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente) {
              primaryTableReference : cliente as c1_0
            }
            left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido) {
              primaryTableReference : pedido as p1_0
              TableGroupJoins {
                left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente) {
                  primaryTableReference : cliente as c2_0
                }
                left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado) {
                  primaryTableReference : empleado as e1_0
                }
                left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa) {
                  primaryTableReference : mesa as m1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:33:34.172 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:33:34.172 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Factura */ select id_factura from factura where id_factura=?
2025-06-08 21:33:34.173 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Factura */insert into factura (id_cliente,codigo,estado,fecha_emision,igv,id_pedido,subtotal,total) values (?,?,?,?,?,?,?,?)
2025-06-08 21:33:34.173 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Factura */update factura set id_cliente=?,codigo=?,estado=?,fecha_emision=?,igv=?,id_pedido=?,subtotal=?,total=? where id_factura=?
2025-06-08 21:33:34.174 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Factura */delete from factura where id_factura=?
2025-06-08 21:33:34.174 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:33:34.174 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:33:34.175 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.rol]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.telefono]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.usuario]

2025-06-08 21:33:34.175 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:33:34.176 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:33:34.176 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Empleado */ select id_empleado from empleado where id_empleado=?
2025-06-08 21:33:34.176 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */insert into empleado (apellido,dni,estado,nombre,password,rol,telefono,usuario) values (?,?,?,?,?,?,?,?)
2025-06-08 21:33:34.176 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */update empleado set apellido=?,dni=?,estado=?,nombre=?,password=?,rol=?,telefono=?,usuario=? where id_empleado=?
2025-06-08 21:33:34.177 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */delete from empleado where id_empleado=?
2025-06-08 21:33:34.177 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:33:34.177 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Seccion)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] 
2025-06-08 21:33:34.177 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Seccion]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion.detalle]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion.estado]

2025-06-08 21:33:34.178 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Seccion) {
          primaryTableReference : seccion as s1_0
        }
      }
    }

2025-06-08 21:33:34.178 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:33:34.179 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Seccion */ select id_seccion from seccion where id_seccion=?
2025-06-08 21:33:34.179 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */insert into seccion (detalle,estado) values (?,?)
2025-06-08 21:33:34.179 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */update seccion set detalle=?,estado=? where id_seccion=?
2025-06-08 21:33:34.180 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */delete from seccion where id_seccion=?
2025-06-08 21:33:34.180 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:33:34.180 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Cliente)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] 
2025-06-08 21:33:34.181 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Cliente]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.cantVisitas]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.email]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.nombre]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.telefono]

2025-06-08 21:33:34.181 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Cliente) {
          primaryTableReference : cliente as c1_0
        }
      }
    }

2025-06-08 21:33:34.182 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:33:34.183 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Cliente */ select id_cliente from cliente where id_cliente=?
2025-06-08 21:33:34.183 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */insert into cliente (apellido,cant_visitas,dni,email,estado,nombre,telefono) values (?,?,?,?,?,?,?)
2025-06-08 21:33:34.183 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */update cliente set apellido=?,cant_visitas=?,dni=?,email=?,estado=?,nombre=?,telefono=? where id_cliente=?
2025-06-08 21:33:34.184 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */delete from cliente where id_cliente=?
2025-06-08 21:33:34.184 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:33:34.184 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Menu)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu] 
2025-06-08 21:33:34.185 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@583f45b9] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido] 
2025-06-08 21:33:34.185 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:33:34.185 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5771a7d] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente] 
2025-06-08 21:33:34.186 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:33:34.186 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2988419d] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado] 
2025-06-08 21:33:34.186 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:33:34.187 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@74d6d924] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa] 
2025-06-08 21:33:34.187 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m2_0
2025-06-08 21:33:34.188 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@56e6488a] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto] 
2025-06-08 21:33:34.188 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p2_0
2025-06-08 21:33:34.189 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6b7f14d9] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria] 
2025-06-08 21:33:34.189 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:33:34.190 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@103482] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion] 
2025-06-08 21:33:34.190 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:33:34.191 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.codPedido]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.rol]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.telefono]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.total]
 |  \-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.descripcion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.precio]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion.detalle]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.stock]

2025-06-08 21:33:34.192 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu) {
          primaryTableReference : menu as m1_0
          TableGroupJoins {
            left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido) {
              primaryTableReference : pedido as p1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente) {
                  primaryTableReference : cliente as c1_0
                }
                left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado) {
                  primaryTableReference : empleado as e1_0
                }
                left  join LazyTableGroup (m2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa) {
                  primaryTableReference : mesa as m2_0
                }
              }
            }
            left  join LazyTableGroup (p2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto) {
              primaryTableReference : producto as p2_0
              TableGroupJoins {
                left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria) {
                  primaryTableReference : categoria as c2_0
                }
                left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion) {
                  primaryTableReference : seccion as s1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:33:34.192 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:33:34.193 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Menu */ select id_menu from menu where id_menu=?
2025-06-08 21:33:34.193 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Menu */insert into menu (cod_pedido,id_pedido,id_producto) values (?,?,?)
2025-06-08 21:33:34.193 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Menu */update menu set cod_pedido=?,id_pedido=?,id_producto=? where id_menu=?
2025-06-08 21:33:34.193 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Menu */delete from menu where id_menu=?
2025-06-08 21:33:34.193 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : dp1_0
2025-06-08 21:33:34.193 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.DetPedido)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] 
2025-06-08 21:33:34.194 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@260b7096] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura] 
2025-06-08 21:33:34.195 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2025-06-08 21:33:34.195 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@35417152] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente] 
2025-06-08 21:33:34.196 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:33:34.197 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@34f4f75c] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido] 
2025-06-08 21:33:34.197 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:33:34.198 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@180714b5] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente] 
2025-06-08 21:33:34.199 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:33:34.200 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@65f548e3] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado] 
2025-06-08 21:33:34.201 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:33:34.201 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5b807eee] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa] 
2025-06-08 21:33:34.202 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:33:34.203 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@48dd2cd5] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido] 
2025-06-08 21:33:34.204 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p2_0
2025-06-08 21:33:34.205 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7eb734ee] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente] 
2025-06-08 21:33:34.206 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c3_0
2025-06-08 21:33:34.206 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6c639ca2] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado] 
2025-06-08 21:33:34.207 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e2_0
2025-06-08 21:33:34.207 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@ed899a4] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa] 
2025-06-08 21:33:34.207 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m2_0
2025-06-08 21:33:34.208 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7daae1ca] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto] 
2025-06-08 21:33:34.208 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p3_0
2025-06-08 21:33:34.209 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3afdaad5] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria] 
2025-06-08 21:33:34.209 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c4_0
2025-06-08 21:33:34.210 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4a0bb7a4] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion] 
2025-06-08 21:33:34.210 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:33:34.211 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.cantidad]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.estado]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.telefono]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.codigo]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.fechaEmision]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.igv]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cantPedidos]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.apellido]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.cantVisitas]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.dni]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.email]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.estado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.nombre]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.telefono]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.apellido]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.dni]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.estado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.nombre]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.password]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.rol]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.telefono]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.usuario]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.fechaHora]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.capacidad]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.detalle]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.estado]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.numero]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.total]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.subtotal]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.igv]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.rol]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.telefono]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.precioUnitario]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.descripcion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.precio]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion.detalle]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.stock]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.subtotal]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.total]

2025-06-08 21:33:34.212 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (dp1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido) {
          primaryTableReference : detalle_pedido as dp1_0
          TableGroupJoins {
            left  join LazyTableGroup (f1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura) {
              primaryTableReference : factura as f1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente) {
                  primaryTableReference : cliente as c1_0
                }
                left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido) {
                  primaryTableReference : pedido as p1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente) {
                      primaryTableReference : cliente as c2_0
                    }
                    left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado) {
                      primaryTableReference : empleado as e1_0
                    }
                    left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa) {
                      primaryTableReference : mesa as m1_0
                    }
                  }
                }
              }
            }
             join LazyTableGroup (p2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido) {
              primaryTableReference : pedido as p2_0
              TableGroupJoins {
                left  join LazyTableGroup (c3 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente) {
                  primaryTableReference : cliente as c3_0
                }
                left  join LazyTableGroup (e2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado) {
                  primaryTableReference : empleado as e2_0
                }
                left  join LazyTableGroup (m2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa) {
                  primaryTableReference : mesa as m2_0
                }
              }
            }
             join LazyTableGroup (p3 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto) {
              primaryTableReference : producto as p3_0
              TableGroupJoins {
                left  join LazyTableGroup (c4 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria) {
                  primaryTableReference : categoria as c4_0
                }
                left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion) {
                  primaryTableReference : seccion as s1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:33:34.214 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:33:34.214 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */ select id_detalle_pedido from detalle_pedido where id_detalle_pedido=?
2025-06-08 21:33:34.214 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */insert into detalle_pedido (cantidad,estado,id_factura,igv,id_pedido,precio_unitario,id_producto,subtotal,total) values (?,?,?,?,?,?,?,?,?)
2025-06-08 21:33:34.215 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */update detalle_pedido set cantidad=?,estado=?,id_factura=?,igv=?,id_pedido=?,precio_unitario=?,id_producto=?,subtotal=?,total=? where id_detalle_pedido=?
2025-06-08 21:33:34.215 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */delete from detalle_pedido where id_detalle_pedido=?
2025-06-08 21:33:34.216 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:33:34.217 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Producto)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto] 
2025-06-08 21:33:34.218 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2a5a0789] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria] 
2025-06-08 21:33:34.218 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:33:34.219 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7da6ab15] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion] 
2025-06-08 21:33:34.219 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:33:34.220 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.descripcion]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.precio]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion.detalle]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.stock]

2025-06-08 21:33:34.221 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto) {
          primaryTableReference : producto as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria) {
              primaryTableReference : categoria as c1_0
            }
            left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion) {
              primaryTableReference : seccion as s1_0
            }
          }
        }
      }
    }

2025-06-08 21:33:34.222 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:33:34.222 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Producto */ select id_producto from producto where id_producto=?
2025-06-08 21:33:34.222 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Producto */insert into producto (id_categoria,descripcion,estado,nombre,precio,id_seccion,stock) values (?,?,?,?,?,?,?)
2025-06-08 21:33:34.223 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Producto */update producto set id_categoria=?,descripcion=?,estado=?,nombre=?,precio=?,id_seccion=?,stock=? where id_producto=?
2025-06-08 21:33:34.223 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Producto */delete from producto where id_producto=?
2025-06-08 21:33:34.223 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:33:34.224 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Categoria)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] 
2025-06-08 21:33:34.224 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Categoria]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Categoria.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Categoria.nombre]

2025-06-08 21:33:34.225 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Categoria) {
          primaryTableReference : categoria as c1_0
        }
      }
    }

2025-06-08 21:33:34.225 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:33:34.225 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Categoria */ select id_categoria from categoria where id_categoria=?
2025-06-08 21:33:34.225 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */insert into categoria (estado,nombre) values (?,?)
2025-06-08 21:33:34.226 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */update categoria set estado=?,nombre=? where id_categoria=?
2025-06-08 21:33:34.226 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */delete from categoria where id_categoria=?
2025-06-08 21:33:34.226 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:33:34.227 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Mesa)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] 
2025-06-08 21:33:34.227 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Mesa]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.capacidad]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.detalle]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.numero]

2025-06-08 21:33:34.228 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Mesa) {
          primaryTableReference : mesa as m1_0
        }
      }
    }

2025-06-08 21:33:34.228 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:33:34.229 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Mesa */ select id_mesa from mesa where id_mesa=?
2025-06-08 21:33:34.229 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */insert into mesa (capacidad,detalle,estado,numero) values (?,?,?,?)
2025-06-08 21:33:34.229 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */update mesa set capacidad=?,detalle=?,estado=?,numero=? where id_mesa=?
2025-06-08 21:33:34.229 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */delete from mesa where id_mesa=?
2025-06-08 21:33:34.230 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:33:34.231 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Pedido)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] 
2025-06-08 21:33:34.231 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@78ced27b] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente] 
2025-06-08 21:33:34.232 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:33:34.233 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2eb363e5] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado] 
2025-06-08 21:33:34.234 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:33:34.235 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@44728412] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa] 
2025-06-08 21:33:34.235 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:33:34.236 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cantPedidos]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.cantVisitas]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.email]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.nombre]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.telefono]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.password]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.rol]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.telefono]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.usuario]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.fechaHora]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.capacidad]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.detalle]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.numero]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.total]

2025-06-08 21:33:34.237 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido) {
          primaryTableReference : pedido as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente) {
              primaryTableReference : cliente as c1_0
            }
            left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado) {
              primaryTableReference : empleado as e1_0
            }
            left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa) {
              primaryTableReference : mesa as m1_0
            }
          }
        }
      }
    }

2025-06-08 21:33:34.237 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:33:34.238 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Pedido */ select id_pedido from pedido where id_pedido=?
2025-06-08 21:33:34.238 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */insert into pedido (cant_pedidos,id_cliente,id_empleado,estado,fecha_hora,id_mesa,total) values (?,?,?,?,?,?,?)
2025-06-08 21:33:34.238 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */update pedido set cant_pedidos=?,id_cliente=?,id_empleado=?,estado=?,fecha_hora=?,id_mesa=?,total=? where id_pedido=?
2025-06-08 21:33:34.238 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */delete from pedido where id_pedido=?
2025-06-08 21:33:34.268 [JavaFX-Launcher] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-08 21:33:34.269 [JavaFX-Launcher] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71b68788] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@744bc504]
2025-06-08 21:33:34.270 [JavaFX-Launcher] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries
2025-06-08 21:33:34.271 [JavaFX-Launcher] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries
2025-06-08 21:33:34.320 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : categoria
2025-06-08 21:33:34.320 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : cliente
2025-06-08 21:33:34.321 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : detalle_pedido
2025-06-08 21:33:34.324 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    alter table empleado 
       add column apellido varchar(100) not null
2025-06-08 21:33:34.328 [JavaFX-Launcher] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table empleado 
       add column apellido varchar(100) not null" via JDBC [[SQLITE_ERROR] SQL error or missing database (Cannot add a NOT NULL column with default value NULL)]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table empleado 
       add column apellido varchar(100) not null" via JDBC [[SQLITE_ERROR] SQL error or missing database (Cannot add a NOT NULL column with default value NULL)]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1430)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:39)
	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (Cannot add a NOT NULL column with default value NULL)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:988)
	at org.sqlite.core.CoreStatement.exec(CoreStatement.java:91)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:43)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 38 common frames omitted
2025-06-08 21:33:34.334 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    alter table empleado 
       add column dni varchar(8) not null unique
2025-06-08 21:33:34.335 [JavaFX-Launcher] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table empleado 
       add column dni varchar(8) not null unique" via JDBC [[SQLITE_ERROR] SQL error or missing database (Cannot add a UNIQUE column)]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table empleado 
       add column dni varchar(8) not null unique" via JDBC [[SQLITE_ERROR] SQL error or missing database (Cannot add a UNIQUE column)]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1430)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:39)
	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (Cannot add a UNIQUE column)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:132)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:54)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:43)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 38 common frames omitted
2025-06-08 21:33:34.337 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    alter table empleado 
       add column telefono varchar(9)
2025-06-08 21:33:34.367 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : factura
2025-06-08 21:33:34.367 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : menu
2025-06-08 21:33:34.368 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : mesa
2025-06-08 21:33:34.368 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : pedido
2025-06-08 21:33:34.368 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : producto
2025-06-08 21:33:34.368 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : seccion
2025-06-08 21:33:34.371 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    alter table empleado 
       drop constraint UKanilfn0t89ht43r8n8lthr5b6
2025-06-08 21:33:34.374 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@310c71ac
2025-06-08 21:33:34.374 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: df5f1cea-ae3a-4768-aab3-6783c749bf6e (<unnamed>)
2025-06-08 21:33:34.375 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-06-08 21:33:34.375 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory
2025-06-08 21:33:34.375 [JavaFX-Launcher] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-08 21:33:34.671 [JavaFX-Launcher] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2025-06-08 21:33:34.926 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy105.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:147)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:39)
	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:33:35.008 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy105.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:39)
	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:33:35.032 [JavaFX-Launcher] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-08 21:33:35.036 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy105.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:39)
	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:33:35.219 [JavaFX-Launcher] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:33:35.223 [JavaFX-Launcher] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-06-08 21:33:35.224 [JavaFX-Launcher] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-06-08 21:33:35.226 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:33:35.227 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-06-08 21:33:35.228 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:33:35.228 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:33:35.229 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:33:35.230 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:33:35.230 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:33:35.233 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:33:35.234 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:33:35.234 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:33:35.234 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:33:35.235 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:33:35.235 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:33:35.473 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - Started application in 6.943 seconds (process running for 7.995)
2025-06-08 21:33:35.777 [JavaFX-Launcher] INFO  p.e.u.p.ProyectoRestaurantApplication - === LISTADO DE EMPLEADOS ===
2025-06-08 21:33:35.793 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-08 21:33:35.793 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - begin
2025-06-08 21:33:35.886 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:33:35.887 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3))] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:33:35.902 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3)]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).rol]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).telefono]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).usuario]

2025-06-08 21:33:35.903 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3)) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:33:35.920 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:33:35.925 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id_empleado,
        e1_0.apellido,
        e1_0.dni,
        e1_0.estado,
        e1_0.nombre,
        e1_0.password,
        e1_0.rol,
        e1_0.telefono,
        e1_0.usuario 
    from
        empleado e1_0
2025-06-08 21:33:35.929 [JavaFX-Launcher] DEBUG o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [/* <criteria> */ select e1_0.id_empleado,e1_0.apellido,e1_0.dni,e1_0.estado,e1_0.nombre,e1_0.password,e1_0.rol,e1_0.telefono,e1_0.usuario from empleado e1_0]
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such column: e1_0.apellido)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:132)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.core.CorePreparedStatement.<init>(CorePreparedStatement.java:46)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.<init>(JDBC3PreparedStatement.java:32)
	at org.sqlite.jdbc4.JDBC4PreparedStatement.<init>(JDBC4PreparedStatement.java:25)
	at org.sqlite.jdbc4.JDBC4Connection.prepareStatement(JDBC4Connection.java:34)
	at org.sqlite.jdbc3.JDBC3Connection.prepareStatement(JDBC3Connection.java:225)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:402)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:734)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy110.findAll(Unknown Source)
	at pe.edu.upeu.proyecto_restaurant.service.EmpleadoService.listarTodos(EmpleadoService.java:20)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:48)
	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:33:35.932 [JavaFX-Launcher] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1, SQLState: null
2025-06-08 21:33:35.933 [JavaFX-Launcher] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_ERROR] SQL error or missing database (no such column: e1_0.apellido)
2025-06-08 21:33:35.938 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:543)
	at org.hibernate.internal.ExceptionConverterImpl.rollbackIfNecessary(ExceptionConverterImpl.java:264)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:160)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:151)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:402)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:734)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy110.findAll(Unknown Source)
	at pe.edu.upeu.proyecto_restaurant.service.EmpleadoService.listarTodos(EmpleadoService.java:20)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:48)
	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:33:35.942 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - rolling back
2025-06-08 21:33:35.968 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-08 21:33:35.979 [SpringApplicationShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing
2025-06-08 21:33:35.979 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@75f5039f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@744bc504]
2025-06-08 21:33:35.979 [SpringApplicationShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2025-06-08 21:33:35.982 [SpringApplicationShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2025-06-08 21:33:35.982 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-08 21:33:35.989 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-08 21:34:01.267 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:34:01.275 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:34:01.277 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:34:01.278 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:34:01.291 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:34:01.293 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:34:01.335 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:34:01.551 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:34:01.562 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:34:01.563 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:34:01.564 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:34:01.565 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:34:01.566 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:34:01.678 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - Starting application using Java 23.0.2 with PID 7264 (started by USUARIO in C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant)
2025-06-08 21:34:01.681 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-08 21:34:02.661 [JavaFX-Launcher] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-08 21:34:02.801 [JavaFX-Launcher] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 126 ms. Found 10 JPA repository interfaces.
2025-06-08 21:34:03.350 [JavaFX-Launcher] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@33909752
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/USUARIO/Documents/ProyectoRestaurantJava/ProyectoRestaurant/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		pe.edu.upeu.proyecto_restaurant.modulo.Categoria
		pe.edu.upeu.proyecto_restaurant.modulo.Cliente
		pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
		pe.edu.upeu.proyecto_restaurant.modulo.Empleado
		pe.edu.upeu.proyecto_restaurant.modulo.Factura
		pe.edu.upeu.proyecto_restaurant.modulo.Menu
		pe.edu.upeu.proyecto_restaurant.modulo.Mesa
		pe.edu.upeu.proyecto_restaurant.modulo.Pedido
		pe.edu.upeu.proyecto_restaurant.modulo.Producto
		pe.edu.upeu.proyecto_restaurant.modulo.Seccion]
	Mapping files names []
	Properties []
2025-06-08 21:34:03.360 [JavaFX-Launcher] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-06-08 21:34:03.363 [JavaFX-Launcher] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-06-08 21:34:03.433 [JavaFX-Launcher] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-08 21:34:03.436 [JavaFX-Launcher] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found
2025-06-08 21:34:03.464 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-06-08 21:34:03.465 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-06-08 21:34:03.467 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:34:03.468 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:34:03.469 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-06-08 21:34:03.471 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-06-08 21:34:03.471 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-06-08 21:34:03.473 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:34:03.475 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-06-08 21:34:03.476 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-06-08 21:34:03.477 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:34:03.479 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-06-08 21:34:03.489 [JavaFX-Launcher] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-06-08 21:34:03.491 [JavaFX-Launcher] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-08 21:34:03.590 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10691bb9
2025-06-08 21:34:03.591 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10691bb9
2025-06-08 21:34:03.591 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@10691bb9
2025-06-08 21:34:03.592 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@333631b6
2025-06-08 21:34:03.592 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@333631b6
2025-06-08 21:34:03.593 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@b2a9e54
2025-06-08 21:34:03.593 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@b2a9e54
2025-06-08 21:34:03.593 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4024a387
2025-06-08 21:34:03.594 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4024a387
2025-06-08 21:34:03.594 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1848cce9
2025-06-08 21:34:03.595 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1848cce9
2025-06-08 21:34:03.595 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1848cce9
2025-06-08 21:34:03.595 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1a71e5d7
2025-06-08 21:34:03.596 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1a71e5d7
2025-06-08 21:34:03.596 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1a71e5d7
2025-06-08 21:34:03.597 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@457600f3
2025-06-08 21:34:03.597 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@457600f3
2025-06-08 21:34:03.598 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@202bbb41
2025-06-08 21:34:03.599 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7eda0429
2025-06-08 21:34:03.600 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7eda0429
2025-06-08 21:34:03.601 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6b100978
2025-06-08 21:34:03.602 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1e14fd71
2025-06-08 21:34:03.602 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6318ac41
2025-06-08 21:34:03.602 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6318ac41
2025-06-08 21:34:03.603 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6318ac41
2025-06-08 21:34:03.603 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4d4d1747
2025-06-08 21:34:03.603 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4d4d1747
2025-06-08 21:34:03.604 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4d4d1747
2025-06-08 21:34:03.604 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@267d9c5f
2025-06-08 21:34:03.604 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@267d9c5f
2025-06-08 21:34:03.605 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@267d9c5f
2025-06-08 21:34:03.605 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1fbb0294
2025-06-08 21:34:03.605 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1fbb0294
2025-06-08 21:34:03.605 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1fbb0294
2025-06-08 21:34:03.605 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3967cf86
2025-06-08 21:34:03.606 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3967cf86
2025-06-08 21:34:03.606 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3967cf86
2025-06-08 21:34:03.606 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1c3510c2
2025-06-08 21:34:03.607 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1c3510c2
2025-06-08 21:34:03.607 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@56e0f87f
2025-06-08 21:34:03.608 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@56e0f87f
2025-06-08 21:34:03.608 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@1108ef95
2025-06-08 21:34:03.609 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@1108ef95
2025-06-08 21:34:03.609 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1108ef95
2025-06-08 21:34:03.610 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@161419cd
2025-06-08 21:34:03.610 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2293b8cd
2025-06-08 21:34:03.611 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2293b8cd
2025-06-08 21:34:03.612 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@73618fe0
2025-06-08 21:34:03.613 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@25c3b25e
2025-06-08 21:34:03.614 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@25c3b25e
2025-06-08 21:34:03.616 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@25c3b25e
2025-06-08 21:34:03.617 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@132f0d5a
2025-06-08 21:34:03.617 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@2c459a22
2025-06-08 21:34:03.618 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@53241ec5
2025-06-08 21:34:03.619 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6bcd17bd
2025-06-08 21:34:03.619 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6bcd17bd
2025-06-08 21:34:03.620 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@638243
2025-06-08 21:34:03.620 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@638243
2025-06-08 21:34:03.621 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@778ce7
2025-06-08 21:34:03.621 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7356681a
2025-06-08 21:34:03.622 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7025f932
2025-06-08 21:34:03.622 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6cc80cef
2025-06-08 21:34:03.623 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5064a525
2025-06-08 21:34:03.624 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1032118b
2025-06-08 21:34:03.624 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4f0186d6
2025-06-08 21:34:03.625 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4f0186d6
2025-06-08 21:34:03.625 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@638254ad
2025-06-08 21:34:03.625 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@638254ad
2025-06-08 21:34:03.626 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@163a9875
2025-06-08 21:34:03.626 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@163a9875
2025-06-08 21:34:03.626 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@16847d70
2025-06-08 21:34:03.627 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@16847d70
2025-06-08 21:34:03.627 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@55f06e40
2025-06-08 21:34:03.628 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@55f06e40
2025-06-08 21:34:03.629 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@24a66f6f
2025-06-08 21:34:03.631 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@661db2be
2025-06-08 21:34:03.631 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@53c73cf0
2025-06-08 21:34:03.632 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@53c73cf0
2025-06-08 21:34:03.633 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@513daa6
2025-06-08 21:34:03.633 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1259107c
2025-06-08 21:34:03.634 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@19dac8cb
2025-06-08 21:34:03.635 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@739047bc
2025-06-08 21:34:03.635 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@739047bc
2025-06-08 21:34:03.635 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@68cd7582
2025-06-08 21:34:03.636 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@324d5217
2025-06-08 21:34:03.636 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@7d9e5805
2025-06-08 21:34:03.636 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7d9e5805
2025-06-08 21:34:03.637 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@c425dad
2025-06-08 21:34:03.637 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@c425dad
2025-06-08 21:34:03.637 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@f2058c2
2025-06-08 21:34:03.638 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@f2058c2
2025-06-08 21:34:03.638 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@f2058c2
2025-06-08 21:34:03.638 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@57a56edb
2025-06-08 21:34:03.639 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@57a56edb
2025-06-08 21:34:03.639 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@57a56edb
2025-06-08 21:34:03.640 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@58744a5a
2025-06-08 21:34:03.640 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4b2e7d9e
2025-06-08 21:34:03.641 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@37810196
2025-06-08 21:34:03.642 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@37810196
2025-06-08 21:34:03.642 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4dddaba6
2025-06-08 21:34:03.642 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4dddaba6
2025-06-08 21:34:03.643 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4dddaba6
2025-06-08 21:34:03.643 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@25ae827a
2025-06-08 21:34:03.643 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1dd4c9dc
2025-06-08 21:34:03.644 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@22e6e641
2025-06-08 21:34:03.644 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@22e6e641
2025-06-08 21:34:03.645 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@246f920
2025-06-08 21:34:03.646 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@246f920
2025-06-08 21:34:03.647 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@246f920
2025-06-08 21:34:03.647 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@53aa1640
2025-06-08 21:34:03.648 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@53aa1640
2025-06-08 21:34:03.649 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@680bafc0
2025-06-08 21:34:03.649 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@680bafc0
2025-06-08 21:34:03.650 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7dca986e
2025-06-08 21:34:03.651 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7dca986e
2025-06-08 21:34:03.651 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4870e10e
2025-06-08 21:34:03.651 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4870e10e
2025-06-08 21:34:03.652 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4b6be656
2025-06-08 21:34:03.652 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4b6be656
2025-06-08 21:34:03.652 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@7e2b3554
2025-06-08 21:34:03.653 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@570bdb17
2025-06-08 21:34:03.653 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@18bc3869
2025-06-08 21:34:03.654 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@cf1247e
2025-06-08 21:34:03.654 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2b572121
2025-06-08 21:34:03.658 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@583d638f
2025-06-08 21:34:03.659 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@583d638f
2025-06-08 21:34:03.661 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1ecd3817
2025-06-08 21:34:03.662 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@23008e9
2025-06-08 21:34:03.663 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3fbdc549
2025-06-08 21:34:03.664 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6638f22c
2025-06-08 21:34:03.664 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1142737c
2025-06-08 21:34:03.665 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@13b746fd
2025-06-08 21:34:03.666 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@42714e4f
2025-06-08 21:34:03.666 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@63796dbf
2025-06-08 21:34:03.667 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@61a22b3f
2025-06-08 21:34:03.672 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@18ff16dd] into BootstrapContext; was [null]
2025-06-08 21:34:03.672 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@18ff16dd) [was null]
2025-06-08 21:34:03.673 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@54935340] into BootstrapContext; was [null]
2025-06-08 21:34:03.673 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@758535cb] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@67f3b342]
2025-06-08 21:34:03.700 [JavaFX-Launcher] DEBUG o.h.j.b.i.PersistenceUnitInfoDescriptor - Pushing class transformers for PU named 'default' on loading classloader jdk.internal.loader.ClassLoaders$AppClassLoader@33909752
2025-06-08 21:34:03.968 [JavaFX-Launcher] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-08 21:34:03.969 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@18ff16dd]
2025-06-08 21:34:03.970 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@18ff16dd]
2025-06-08 21:34:04.023 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-08 21:34:04.189 [JavaFX-Launcher] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@45d9db9a
2025-06-08 21:34:04.192 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-08 21:34:04.201 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : SQLite
	version : 3.46.0
	  major : 3
	  minor : 46
2025-06-08 21:34:04.202 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : SQLite JDBC
	version : 3.46.0.0
	  major : 3
	  minor : 46
2025-06-08 21:34:04.202 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2
2025-06-08 21:34:04.233 [JavaFX-Launcher] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.community.dialect.SQLiteDialect, version: 3.46
2025-06-08 21:34:04.237 [JavaFX-Launcher] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-06-08 21:34:04.238 [JavaFX-Launcher] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2025-06-08 21:34:04.259 [JavaFX-Launcher] DEBUG org.hibernate.orm.jdbc.lob - HHH10010005: Disabling contextual LOB creation as createClob() method threw error : java.sql.SQLFeatureNotSupportedException
2025-06-08 21:34:04.267 [JavaFX-Launcher] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 3.46
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-08 21:34:04.291 [JavaFX-Launcher] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(PRIMITIVE_ARRAY_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-06-08 21:34:04.293 [JavaFX-Launcher] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STRING_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-08 21:34:04.301 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-06-08 21:34:04.301 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:34:04.302 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:34:04.307 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:34:04.307 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:34:04.308 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:34:04.309 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:34:04.309 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:34:04.309 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:34:04.310 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:34:04.311 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:34:04.311 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:34:04.314 [JavaFX-Launcher] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71b68788] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@11825df6]
2025-06-08 21:34:04.366 [JavaFX-Launcher] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-06-08 21:34:04.402 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:34:04.414 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Categoria
2025-06-08 21:34:04.427 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Categoria on table categoria
2025-06-08 21:34:04.441 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:34:04.472 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_categoria')
2025-06-08 21:34:04.475 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:34:04.475 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:34:04.484 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCategoria with lazy=false
2025-06-08 21:34:04.491 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:idCategoria]
2025-06-08 21:34:04.501 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCategoria
2025-06-08 21:34:04.509 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.id_categoria
2025-06-08 21:34:04.511 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCategoria
2025-06-08 21:34:04.520 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_categoria)]), idCategoria, identity, , ...)
2025-06-08 21:34:04.523 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:34:04.524 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:34:04.525 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:estado]
2025-06-08 21:34:04.525 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:34:04.526 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.estado
2025-06-08 21:34:04.527 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:34:04.529 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:34:04.530 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:34:04.531 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:nombre]
2025-06-08 21:34:04.532 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:34:04.533 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.nombre
2025-06-08 21:34:04.534 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:34:04.538 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:34:04.549 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:34:04.550 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Cliente
2025-06-08 21:34:04.552 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Cliente on table cliente
2025-06-08 21:34:04.553 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:34:04.556 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_cliente')
2025-06-08 21:34:04.557 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:34:04.558 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:34:04.559 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCliente with lazy=false
2025-06-08 21:34:04.560 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:idCliente]
2025-06-08 21:34:04.560 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCliente
2025-06-08 21:34:04.562 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.id_cliente
2025-06-08 21:34:04.563 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCliente
2025-06-08 21:34:04.564 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_cliente)]), idCliente, identity, , ...)
2025-06-08 21:34:04.566 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='apellido')
2025-06-08 21:34:04.567 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property apellido with lazy=false
2025-06-08 21:34:04.568 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:apellido]
2025-06-08 21:34:04.569 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for apellido
2025-06-08 21:34:04.569 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.apellido
2025-06-08 21:34:04.570 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property apellido
2025-06-08 21:34:04.571 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cant_visitas')
2025-06-08 21:34:04.572 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantVisitas with lazy=false
2025-06-08 21:34:04.573 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:cantVisitas]
2025-06-08 21:34:04.573 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantVisitas
2025-06-08 21:34:04.574 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.cant_visitas
2025-06-08 21:34:04.575 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantVisitas
2025-06-08 21:34:04.580 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='dni')
2025-06-08 21:34:04.581 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property dni with lazy=false
2025-06-08 21:34:04.582 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:dni]
2025-06-08 21:34:04.583 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for dni
2025-06-08 21:34:04.584 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.dni
2025-06-08 21:34:04.585 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property dni
2025-06-08 21:34:04.585 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
2025-06-08 21:34:04.586 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-06-08 21:34:04.587 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:email]
2025-06-08 21:34:04.588 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email
2025-06-08 21:34:04.588 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.email
2025-06-08 21:34:04.589 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property email
2025-06-08 21:34:04.590 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:34:04.591 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:34:04.591 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:estado]
2025-06-08 21:34:04.592 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:34:04.592 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.estado
2025-06-08 21:34:04.592 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:34:04.593 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:34:04.594 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:34:04.594 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:nombre]
2025-06-08 21:34:04.595 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:34:04.596 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.nombre
2025-06-08 21:34:04.597 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:34:04.599 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='telefono')
2025-06-08 21:34:04.600 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property telefono with lazy=false
2025-06-08 21:34:04.601 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:telefono]
2025-06-08 21:34:04.601 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for telefono
2025-06-08 21:34:04.602 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.telefono
2025-06-08 21:34:04.603 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property telefono
2025-06-08 21:34:04.604 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:34:04.606 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:34:04.607 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name DetPedido
2025-06-08 21:34:04.608 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.DetPedido on table detalle_pedido
2025-06-08 21:34:04.609 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:34:04.625 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_detalle_pedido')
2025-06-08 21:34:04.626 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:34:04.626 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:34:04.628 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idDetallePedido with lazy=false
2025-06-08 21:34:04.629 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:idDetallePedido]
2025-06-08 21:34:04.630 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idDetallePedido
2025-06-08 21:34:04.631 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.id_detalle_pedido
2025-06-08 21:34:04.632 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idDetallePedido
2025-06-08 21:34:04.633 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_detalle_pedido)]), idDetallePedido, identity, , ...)
2025-06-08 21:34:04.634 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cantidad')
2025-06-08 21:34:04.635 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantidad with lazy=false
2025-06-08 21:34:04.636 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:cantidad]
2025-06-08 21:34:04.637 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantidad
2025-06-08 21:34:04.637 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.cantidad
2025-06-08 21:34:04.638 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantidad
2025-06-08 21:34:04.639 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:34:04.640 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:34:04.641 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:estado]
2025-06-08 21:34:04.641 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:34:04.642 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.estado
2025-06-08 21:34:04.643 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:34:04.646 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_factura',referencedColumn='id_factura')
2025-06-08 21:34:04.650 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:34:04.661 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property factura
2025-06-08 21:34:04.663 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='igv')
2025-06-08 21:34:04.664 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property igv with lazy=false
2025-06-08 21:34:04.665 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:igv]
2025-06-08 21:34:04.666 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for igv
2025-06-08 21:34:04.667 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.igv
2025-06-08 21:34:04.668 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property igv
2025-06-08 21:34:04.669 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:34:04.670 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:34:04.672 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:34:04.674 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio_unitario')
2025-06-08 21:34:04.675 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precioUnitario with lazy=false
2025-06-08 21:34:04.676 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:precioUnitario]
2025-06-08 21:34:04.676 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precioUnitario
2025-06-08 21:34:04.677 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.precio_unitario
2025-06-08 21:34:04.677 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property precioUnitario
2025-06-08 21:34:04.678 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_producto',referencedColumn='id_producto')
2025-06-08 21:34:04.680 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:34:04.681 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property producto
2025-06-08 21:34:04.682 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='subtotal')
2025-06-08 21:34:04.683 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property subtotal with lazy=false
2025-06-08 21:34:04.684 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:subtotal]
2025-06-08 21:34:04.685 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for subtotal
2025-06-08 21:34:04.686 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.subtotal
2025-06-08 21:34:04.686 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property subtotal
2025-06-08 21:34:04.688 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:34:04.688 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:34:04.689 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:total]
2025-06-08 21:34:04.690 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:34:04.690 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.total
2025-06-08 21:34:04.691 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:34:04.693 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:34:04.694 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:34:04.696 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Empleado
2025-06-08 21:34:04.697 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Empleado on table empleado
2025-06-08 21:34:04.698 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:34:04.701 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_empleado')
2025-06-08 21:34:04.702 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:34:04.702 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:34:04.703 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-06-08 21:34:04.704 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:id]
2025-06-08 21:34:04.704 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id
2025-06-08 21:34:04.705 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.id_empleado
2025-06-08 21:34:04.706 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property id
2025-06-08 21:34:04.706 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_empleado)]), id, identity, , ...)
2025-06-08 21:34:04.708 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='apellido')
2025-06-08 21:34:04.709 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property apellido with lazy=false
2025-06-08 21:34:04.710 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:apellido]
2025-06-08 21:34:04.710 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for apellido
2025-06-08 21:34:04.711 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.apellido
2025-06-08 21:34:04.712 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property apellido
2025-06-08 21:34:04.713 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='dni')
2025-06-08 21:34:04.715 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property dni with lazy=false
2025-06-08 21:34:04.716 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:dni]
2025-06-08 21:34:04.717 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for dni
2025-06-08 21:34:04.718 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.dni
2025-06-08 21:34:04.719 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property dni
2025-06-08 21:34:04.720 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:34:04.721 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:34:04.721 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:estado]
2025-06-08 21:34:04.722 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:34:04.723 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.estado
2025-06-08 21:34:04.723 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:34:04.724 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:34:04.725 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:34:04.726 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:nombre]
2025-06-08 21:34:04.726 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:34:04.728 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.nombre
2025-06-08 21:34:04.729 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:34:04.730 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password')
2025-06-08 21:34:04.731 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-06-08 21:34:04.732 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:password]
2025-06-08 21:34:04.734 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password
2025-06-08 21:34:04.735 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.password
2025-06-08 21:34:04.736 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property password
2025-06-08 21:34:04.737 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='rol')
2025-06-08 21:34:04.738 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property rol with lazy=false
2025-06-08 21:34:04.739 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:rol]
2025-06-08 21:34:04.739 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for rol
2025-06-08 21:34:04.740 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.rol
2025-06-08 21:34:04.741 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property rol
2025-06-08 21:34:04.742 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='telefono')
2025-06-08 21:34:04.743 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property telefono with lazy=false
2025-06-08 21:34:04.743 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:telefono]
2025-06-08 21:34:04.744 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for telefono
2025-06-08 21:34:04.745 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.telefono
2025-06-08 21:34:04.747 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property telefono
2025-06-08 21:34:04.748 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='usuario')
2025-06-08 21:34:04.750 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property usuario with lazy=false
2025-06-08 21:34:04.750 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:usuario]
2025-06-08 21:34:04.751 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for usuario
2025-06-08 21:34:04.752 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.usuario
2025-06-08 21:34:04.753 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property usuario
2025-06-08 21:34:04.754 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:34:04.755 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:34:04.756 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Factura
2025-06-08 21:34:04.757 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Factura on table factura
2025-06-08 21:34:04.758 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:34:04.764 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_factura')
2025-06-08 21:34:04.765 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:34:04.766 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:34:04.767 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idFactura with lazy=false
2025-06-08 21:34:04.767 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:idFactura]
2025-06-08 21:34:04.768 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idFactura
2025-06-08 21:34:04.768 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.id_factura
2025-06-08 21:34:04.769 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idFactura
2025-06-08 21:34:04.769 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_factura)]), idFactura, identity, , ...)
2025-06-08 21:34:04.769 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_cliente',referencedColumn='id_cliente')
2025-06-08 21:34:04.770 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:34:04.770 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cliente
2025-06-08 21:34:04.771 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='codigo')
2025-06-08 21:34:04.772 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codigo with lazy=false
2025-06-08 21:34:04.772 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:codigo]
2025-06-08 21:34:04.773 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codigo
2025-06-08 21:34:04.773 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.codigo
2025-06-08 21:34:04.774 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property codigo
2025-06-08 21:34:04.775 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:34:04.775 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:34:04.776 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:estado]
2025-06-08 21:34:04.776 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:34:04.777 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.estado
2025-06-08 21:34:04.777 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:34:04.778 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fecha_emision')
2025-06-08 21:34:04.779 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaEmision with lazy=false
2025-06-08 21:34:04.780 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:fechaEmision]
2025-06-08 21:34:04.781 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaEmision
2025-06-08 21:34:04.781 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.fecha_emision
2025-06-08 21:34:04.782 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaEmision
2025-06-08 21:34:04.783 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='igv')
2025-06-08 21:34:04.784 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property igv with lazy=false
2025-06-08 21:34:04.784 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:igv]
2025-06-08 21:34:04.785 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for igv
2025-06-08 21:34:04.785 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.igv
2025-06-08 21:34:04.786 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property igv
2025-06-08 21:34:04.787 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:34:04.788 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:34:04.789 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:34:04.790 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='subtotal')
2025-06-08 21:34:04.791 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property subtotal with lazy=false
2025-06-08 21:34:04.791 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:subtotal]
2025-06-08 21:34:04.792 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for subtotal
2025-06-08 21:34:04.792 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.subtotal
2025-06-08 21:34:04.792 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property subtotal
2025-06-08 21:34:04.793 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:34:04.793 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:34:04.794 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:total]
2025-06-08 21:34:04.795 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:34:04.795 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.total
2025-06-08 21:34:04.796 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:34:04.798 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:34:04.800 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:34:04.801 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Menu
2025-06-08 21:34:04.801 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Menu on table menu
2025-06-08 21:34:04.802 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:34:04.805 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_menu')
2025-06-08 21:34:04.805 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:34:04.806 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:34:04.806 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idMenu with lazy=false
2025-06-08 21:34:04.807 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Menu:idMenu]
2025-06-08 21:34:04.808 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idMenu
2025-06-08 21:34:04.808 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: menu.id_menu
2025-06-08 21:34:04.809 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idMenu
2025-06-08 21:34:04.809 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_menu)]), idMenu, identity, , ...)
2025-06-08 21:34:04.810 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cod_pedido')
2025-06-08 21:34:04.810 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codPedido with lazy=false
2025-06-08 21:34:04.811 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Menu:codPedido]
2025-06-08 21:34:04.811 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codPedido
2025-06-08 21:34:04.812 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: menu.cod_pedido
2025-06-08 21:34:04.813 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property codPedido
2025-06-08 21:34:04.814 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:34:04.815 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:34:04.816 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:34:04.817 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_producto',referencedColumn='id_producto')
2025-06-08 21:34:04.818 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:34:04.818 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property producto
2025-06-08 21:34:04.819 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:34:04.820 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:34:04.820 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Mesa
2025-06-08 21:34:04.821 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Mesa on table mesa
2025-06-08 21:34:04.821 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:34:04.823 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_mesa')
2025-06-08 21:34:04.823 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:34:04.824 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:34:04.824 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idMesa with lazy=false
2025-06-08 21:34:04.825 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:idMesa]
2025-06-08 21:34:04.826 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idMesa
2025-06-08 21:34:04.826 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.id_mesa
2025-06-08 21:34:04.826 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idMesa
2025-06-08 21:34:04.826 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_mesa)]), idMesa, identity, , ...)
2025-06-08 21:34:04.827 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='capacidad')
2025-06-08 21:34:04.827 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property capacidad with lazy=false
2025-06-08 21:34:04.827 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:capacidad]
2025-06-08 21:34:04.827 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for capacidad
2025-06-08 21:34:04.828 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.capacidad
2025-06-08 21:34:04.828 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property capacidad
2025-06-08 21:34:04.829 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='detalle')
2025-06-08 21:34:04.829 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property detalle with lazy=false
2025-06-08 21:34:04.831 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:detalle]
2025-06-08 21:34:04.832 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for detalle
2025-06-08 21:34:04.832 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.detalle
2025-06-08 21:34:04.833 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property detalle
2025-06-08 21:34:04.833 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:34:04.833 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:34:04.834 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:estado]
2025-06-08 21:34:04.834 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:34:04.834 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.estado
2025-06-08 21:34:04.834 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:34:04.834 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='numero')
2025-06-08 21:34:04.835 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property numero with lazy=false
2025-06-08 21:34:04.835 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:numero]
2025-06-08 21:34:04.835 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for numero
2025-06-08 21:34:04.835 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.numero
2025-06-08 21:34:04.836 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property numero
2025-06-08 21:34:04.837 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:34:04.837 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:34:04.838 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Pedido
2025-06-08 21:34:04.838 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Pedido on table pedido
2025-06-08 21:34:04.838 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:34:04.840 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_pedido')
2025-06-08 21:34:04.840 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:34:04.840 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:34:04.841 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idPedido with lazy=false
2025-06-08 21:34:04.841 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:idPedido]
2025-06-08 21:34:04.842 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idPedido
2025-06-08 21:34:04.842 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.id_pedido
2025-06-08 21:34:04.843 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idPedido
2025-06-08 21:34:04.843 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_pedido)]), idPedido, identity, , ...)
2025-06-08 21:34:04.843 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cant_pedidos')
2025-06-08 21:34:04.844 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantPedidos with lazy=false
2025-06-08 21:34:04.844 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:cantPedidos]
2025-06-08 21:34:04.845 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantPedidos
2025-06-08 21:34:04.846 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.cant_pedidos
2025-06-08 21:34:04.846 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantPedidos
2025-06-08 21:34:04.847 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_cliente',referencedColumn='id_cliente')
2025-06-08 21:34:04.849 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:34:04.849 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cliente
2025-06-08 21:34:04.850 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_empleado',referencedColumn='id_empleado')
2025-06-08 21:34:04.851 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:34:04.852 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property empleado
2025-06-08 21:34:04.852 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:34:04.853 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:34:04.853 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:estado]
2025-06-08 21:34:04.854 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:34:04.854 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.estado
2025-06-08 21:34:04.855 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:34:04.856 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fecha_hora')
2025-06-08 21:34:04.856 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaHora with lazy=false
2025-06-08 21:34:04.856 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:fechaHora]
2025-06-08 21:34:04.856 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaHora
2025-06-08 21:34:04.857 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.fecha_hora
2025-06-08 21:34:04.857 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaHora
2025-06-08 21:34:04.857 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_mesa',referencedColumn='id_mesa')
2025-06-08 21:34:04.857 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:34:04.857 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property mesa
2025-06-08 21:34:04.858 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:34:04.858 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:34:04.858 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:total]
2025-06-08 21:34:04.858 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:34:04.858 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.total
2025-06-08 21:34:04.858 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:34:04.859 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:34:04.860 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:34:04.860 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Producto
2025-06-08 21:34:04.861 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Producto on table producto
2025-06-08 21:34:04.862 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:34:04.864 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_producto')
2025-06-08 21:34:04.865 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:34:04.865 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:34:04.866 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idProducto with lazy=false
2025-06-08 21:34:04.867 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:idProducto]
2025-06-08 21:34:04.867 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idProducto
2025-06-08 21:34:04.867 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.id_producto
2025-06-08 21:34:04.868 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idProducto
2025-06-08 21:34:04.868 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_producto)]), idProducto, identity, , ...)
2025-06-08 21:34:04.868 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_categoria',referencedColumn='id_categoria')
2025-06-08 21:34:04.869 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:34:04.869 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property categoria
2025-06-08 21:34:04.869 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='descripcion')
2025-06-08 21:34:04.869 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property descripcion with lazy=false
2025-06-08 21:34:04.869 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:descripcion]
2025-06-08 21:34:04.870 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for descripcion
2025-06-08 21:34:04.870 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.descripcion
2025-06-08 21:34:04.870 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property descripcion
2025-06-08 21:34:04.870 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:34:04.893 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:34:04.894 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:estado]
2025-06-08 21:34:04.895 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:34:04.895 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.estado
2025-06-08 21:34:04.896 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:34:04.896 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:34:04.897 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:34:04.898 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:nombre]
2025-06-08 21:34:04.898 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:34:04.898 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.nombre
2025-06-08 21:34:04.899 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:34:04.900 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio')
2025-06-08 21:34:04.900 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precio with lazy=false
2025-06-08 21:34:04.900 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:precio]
2025-06-08 21:34:04.901 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precio
2025-06-08 21:34:04.901 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.precio
2025-06-08 21:34:04.902 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property precio
2025-06-08 21:34:04.902 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_seccion',referencedColumn='id_seccion')
2025-06-08 21:34:04.902 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:34:04.903 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property seccion
2025-06-08 21:34:04.903 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='stock')
2025-06-08 21:34:04.903 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property stock with lazy=false
2025-06-08 21:34:04.904 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:stock]
2025-06-08 21:34:04.904 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for stock
2025-06-08 21:34:04.904 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.stock
2025-06-08 21:34:04.904 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property stock
2025-06-08 21:34:04.905 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:34:04.906 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:34:04.907 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Seccion
2025-06-08 21:34:04.907 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Seccion on table seccion
2025-06-08 21:34:04.907 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:34:04.909 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_seccion')
2025-06-08 21:34:04.909 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:34:04.910 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:34:04.910 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idSeccion with lazy=false
2025-06-08 21:34:04.910 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:idSeccion]
2025-06-08 21:34:04.910 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idSeccion
2025-06-08 21:34:04.910 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.id_seccion
2025-06-08 21:34:04.911 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idSeccion
2025-06-08 21:34:04.911 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_seccion)]), idSeccion, identity, , ...)
2025-06-08 21:34:04.912 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='detalle')
2025-06-08 21:34:04.913 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property detalle with lazy=false
2025-06-08 21:34:04.914 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:detalle]
2025-06-08 21:34:04.915 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for detalle
2025-06-08 21:34:04.915 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.detalle
2025-06-08 21:34:04.916 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property detalle
2025-06-08 21:34:04.916 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:34:04.917 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:34:04.917 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:estado]
2025-06-08 21:34:04.917 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:34:04.917 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.estado
2025-06-08 21:34:04.918 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:34:04.919 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:34:04.920 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idCategoria
2025-06-08 21:34:04.922 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:34:04.922 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:34:04.922 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idCliente
2025-06-08 21:34:04.923 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apellido
2025-06-08 21:34:04.923 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantVisitas
2025-06-08 21:34:04.924 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for dni
2025-06-08 21:34:04.924 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-06-08 21:34:04.924 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:34:04.924 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:34:04.924 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for telefono
2025-06-08 21:34:04.924 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idDetallePedido
2025-06-08 21:34:04.925 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantidad
2025-06-08 21:34:04.925 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:34:04.925 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for igv
2025-06-08 21:34:04.925 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precioUnitario
2025-06-08 21:34:04.925 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for subtotal
2025-06-08 21:34:04.926 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:34:04.926 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-06-08 21:34:04.926 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apellido
2025-06-08 21:34:04.926 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for dni
2025-06-08 21:34:04.926 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:34:04.927 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:34:04.927 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-06-08 21:34:04.928 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for rol
2025-06-08 21:34:04.928 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for telefono
2025-06-08 21:34:04.929 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for usuario
2025-06-08 21:34:04.929 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idFactura
2025-06-08 21:34:04.930 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codigo
2025-06-08 21:34:04.930 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:34:04.931 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaEmision
2025-06-08 21:34:04.932 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for igv
2025-06-08 21:34:04.932 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for subtotal
2025-06-08 21:34:04.932 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:34:04.932 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idMenu
2025-06-08 21:34:04.933 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codPedido
2025-06-08 21:34:04.933 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idMesa
2025-06-08 21:34:04.934 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for capacidad
2025-06-08 21:34:04.934 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for detalle
2025-06-08 21:34:04.934 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:34:04.934 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for numero
2025-06-08 21:34:04.934 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idPedido
2025-06-08 21:34:04.935 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantPedidos
2025-06-08 21:34:04.935 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:34:04.935 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaHora
2025-06-08 21:34:04.935 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:34:04.935 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idProducto
2025-06-08 21:34:04.935 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for descripcion
2025-06-08 21:34:04.935 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:34:04.936 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:34:04.936 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precio
2025-06-08 21:34:04.936 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for stock
2025-06-08 21:34:04.936 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idSeccion
2025-06-08 21:34:04.936 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for detalle
2025-06-08 21:34:04.936 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:34:04.944 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_categoria] to be non-null as it is part of the primary key for table [categoria]
2025-06-08 21:34:04.945 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_cliente] to be non-null as it is part of the primary key for table [cliente]
2025-06-08 21:34:04.945 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_detalle_pedido] to be non-null as it is part of the primary key for table [detalle_pedido]
2025-06-08 21:34:04.946 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_empleado] to be non-null as it is part of the primary key for table [empleado]
2025-06-08 21:34:04.946 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_factura] to be non-null as it is part of the primary key for table [factura]
2025-06-08 21:34:04.946 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_menu] to be non-null as it is part of the primary key for table [menu]
2025-06-08 21:34:04.947 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_mesa] to be non-null as it is part of the primary key for table [mesa]
2025-06-08 21:34:04.947 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_pedido] to be non-null as it is part of the primary key for table [pedido]
2025-06-08 21:34:04.948 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_producto] to be non-null as it is part of the primary key for table [producto]
2025-06-08 21:34:04.949 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_seccion] to be non-null as it is part of the primary key for table [seccion]
2025-06-08 21:34:05.208 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2025-06-08 21:34:05.251 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:34:05.252 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=23, javafx.runtime.version=21.0.1+6, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@7a98592a, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.community.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant\target\classes;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter\3.5.0\spring-boot-starter-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot\3.5.0\spring-boot-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-context\6.2.7\spring-context-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-expression\6.2.7\spring-expression-6.2.7.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-observation\1.15.0\micrometer-observation-1.15.0.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-commons\1.15.0\micrometer-commons-1.15.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.5.0\spring-boot-autoconfigure-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.5.0\spring-boot-starter-logging-3.5.0.jar;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\USUARIO\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-core\6.2.7\spring-core-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jcl\6.2.7\spring-jcl-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\yaml\snakeyaml\2.4\snakeyaml-2.4.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.5.0\spring-boot-starter-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.5.0\spring-boot-starter-jdbc-3.5.0.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jdbc\6.2.7\spring-jdbc-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-core\6.6.15.Final\hibernate-core-6.6.15.Final.jar;C:\Users\USUARIO\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\USUARIO\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\USUARIO\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\USUARIO\.m2\repository\net\bytebuddy\byte-buddy\1.17.5\byte-buddy-1.17.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\USUARIO\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\USUARIO\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-jpa\3.5.0\spring-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-commons\3.5.0\spring-data-commons-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-orm\6.2.7\spring-orm-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aop\6.2.7\spring-aop-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-tx\6.2.7\spring-tx-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-beans\6.2.7\spring-beans-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aspects\6.2.7\spring-aspects-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\USUARIO\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\USUARIO\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-community-dialects\6.4.4.Final\hibernate-community-dialects-6.4.4.Final.jar;C:\Users\USUARIO\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\USUARIO\.m2\repository\org\xerial\sqlite-jdbc\3.46.0.0\sqlite-jdbc-3.46.0.0.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\USUARIO\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.0\jackson-annotations-2.17.0.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.2.Final\hibernate-validator-7.0.2.Final.jar;C:\Users\USUARIO\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-fxml\21.0.1\javafx-fxml-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-fxml\21.0.1\javafx-fxml-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-swing\21.0.1\javafx-swing-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-swing\21.0.1\javafx-swing-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\bootstrapfx\bootstrapfx-core\0.2.4\bootstrapfx-core-0.2.4.jar;C:\Users\USUARIO\.m2\repository\io\github\mkpaz\atlantafx-base\2.0.0\atlantafx-base-2.0.0.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-javafx\12.3.1\ikonli-javafx-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-core\12.3.1\ikonli-core-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-fontawesome5-pack\12.3.1\ikonli-fontawesome5-pack-12.3.1.jar;C:\Users\USUARIO\.m2\repository\net\sf\jasperreports\jasperreports\6.20.0\jasperreports-6.20.0.jar;C:\Users\USUARIO\.m2\repository\commons-beanutils\commons-beanutils\1.9.4\commons-beanutils-1.9.4.jar;C:\Users\USUARIO\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\USUARIO\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\USUARIO\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-collections4\4.2\commons-collections4-4.2.jar;C:\Users\USUARIO\.m2\repository\com\lowagie\itext\2.1.7.js10\itext-2.1.7.js10.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcprov-jdk15on\1.70\bcprov-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcutil-jdk15on\1.70\bcutil-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jcommon\1.0.23\jcommon-1.0.23.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jfreechart\1.0.19\jfreechart-1.0.19.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\jdt\ecj\3.21.0\ecj-3.21.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.19.0\jackson-core-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.19.0\jackson-databind-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-xml\2.19.0\jackson-dataformat-xml-2.19.0.jar;C:\Users\USUARIO\.m2\repository\org\codehaus\woodstox\stax2-api\4.2.2\stax2-api-4.2.2.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\woodstox\woodstox-core\7.1.0\woodstox-core-7.1.0.jar;C:\Users\USUARIO\.m2\repository\win\zqxu\jrviewer-fx\0.1.1\jrviewer-fx-0.1.1.jar;C:\Users\USUARIO\.m2\repository\jakarta\el\jakarta.el-api\4.0.0\jakarta.el-api-4.0.0.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jakarta.el\4.0.2\jakarta.el-4.0.2.jar;C:\Users\USUARIO\.m2\repository\com\miglayout\miglayout\3.7.4\miglayout-3.7.4.jar;C:\Users\USUARIO\.m2\repository\org\apache\groovy\groovy\4.0.6\groovy-4.0.6.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml\5.2.3\poi-ooxml-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi\5.2.3\poi-5.2.3.jar;C:\Users\USUARIO\.m2\repository\commons-codec\commons-codec\1.18.0\commons-codec-1.18.0.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-math3\3.6.1\commons-math3-3.6.1.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\SparseBitSet\1.2\SparseBitSet-1.2.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml-lite\5.2.3\poi-ooxml-lite-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\xmlbeans\xmlbeans\5.1.1\xmlbeans-5.1.1.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-compress\1.21\commons-compress-1.21.jar;C:\Users\USUARIO\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\USUARIO\.m2\repository\com\github\virtuald\curvesapi\1.07\curvesapi-1.07.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar, LOGBACK_ROLLINGPOLICY_MAX_FILE_SIZE=10485760, java.vm.vendor=Oracle Corporation, LOG_PATH=logs/, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Bogota, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, javafx.version=21.0.1, os.name=Windows 11, java.vm.specification.version=23, APPLICATION_NAME=ProyectoRestaurant, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=MX, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk-23\bin, sun.java.command=pe.edu.upeu.proyecto_restaurant.AppRestaurant, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.use_sql_comments=true, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7877d6d6, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\USUARIO, user.language=es, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-23, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7-58, user.name=USUARIO, stdout.encoding=cp850, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, FILE_LOG_PATTERN=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, LOG_FILE=logs/restaurant.log, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\USUARIO\AppData\Local\Temp\, java.version=23.0.2, LOGBACK_ROLLINGPOLICY_CLEAN_HISTORY_ON_START=false, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=7264, sun.os.patch.level=, CONSOLE_LOG_CHARSET=IBM850, LOGBACK_ROLLINGPOLICY_MAX_HISTORY=30, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4df97623, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-23\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;c:\Users\USUARIO\AppData\Local\Programs\cursor\resources\app\bin;C:\Users\USUARIO\AppData\Local\Programs\Python\Python313\Scripts\;C:\Users\USUARIO\AppData\Local\Programs\Python\Launcher\;C:\Users\USUARIO\AppData\Local\Microsoft\WindowsApps;C:\Users\USUARIO\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\USUARIO\AppData\Roaming\npm;C:\flutter\bin;C:\Users\USUARIO\AppData\Local\Programs\Python\Python313\;C:\ffpmg\bin;C:\Users\USUARIO\Downloads\apache-maven-3.9.9\bin;C:\Users\USUARIO\AppData\Local\GitHubDesktop\bin;C:\Users\USUARIO\AppData\Local\Microsoft\WinGet\Packages\Schniz.fnm_Microsoft.Winget.Source_8wekyb3d8bbwe;C:\Users\USUARIO\AppData\Local\Programs\cursor\resources\app\bin;., stderr.encoding=cp850, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=23.0.2+7-58, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), CONSOLE_LOG_PATTERN=%d{HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{36}) - %msg%n, java.class.version=67.0, LOGGED_APPLICATION_NAME=[ProyectoRestaurant] , LOGBACK_ROLLINGPOLICY_TOTAL_SIZE_CAP=104857600}
2025-06-08 21:34:05.258 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-06-08 21:34:05.266 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:34:05.267 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:34:05.267 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:34:05.268 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:34:05.268 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:34:05.268 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:34:05.269 [JavaFX-Launcher] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:34:05.270 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:34:05.271 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:34:05.271 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:34:05.272 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:34:05.272 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:34:05.272 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:34:05.273 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:34:05.274 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:34:05.313 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:34:05.314 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:34:05.318 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:34:05.319 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:34:05.322 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:34:05.322 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:34:05.325 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:34:05.326 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:34:05.330 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:34:05.330 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:34:05.337 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:34:05.338 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:34:05.341 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:34:05.341 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:34:05.343 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:34:05.345 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:34:05.350 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:34:05.351 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:34:05.355 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:34:05.400 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-06-08 21:34:05.401 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-06-08 21:34:05.402 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-06-08 21:34:05.403 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-06-08 21:34:05.405 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7e36d6f9] under count; prior registration was null
2025-06-08 21:34:05.407 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1f7b8ae2] under every; prior registration was null
2025-06-08 21:34:05.407 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@15f191c0] under any; prior registration was null
2025-06-08 21:34:05.407 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-06-08 21:34:05.408 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-06-08 21:34:05.408 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-06-08 21:34:05.408 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-06-08 21:34:05.408 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-06-08 21:34:05.409 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-06-08 21:34:05.409 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-06-08 21:34:05.409 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-06-08 21:34:05.409 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-06-08 21:34:05.410 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-06-08 21:34:05.410 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-06-08 21:34:05.411 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-06-08 21:34:05.411 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-06-08 21:34:05.411 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-06-08 21:34:05.412 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-06-08 21:34:05.412 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-06-08 21:34:05.412 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-06-08 21:34:05.415 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1889448f] under sinh; prior registration was null
2025-06-08 21:34:05.416 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2c42c8f8] under cosh; prior registration was null
2025-06-08 21:34:05.416 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@23e94f0d] under tanh; prior registration was null
2025-06-08 21:34:05.420 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@187e4a76] under pi; prior registration was null
2025-06-08 21:34:05.420 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4a01d8ca] under log; prior registration was null
2025-06-08 21:34:05.421 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-06-08 21:34:05.421 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-06-08 21:34:05.422 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-06-08 21:34:05.422 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-06-08 21:34:05.422 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-06-08 21:34:05.422 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-06-08 21:34:05.423 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-06-08 21:34:05.423 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-06-08 21:34:05.423 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-06-08 21:34:05.423 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-06-08 21:34:05.423 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-06-08 21:34:05.423 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-06-08 21:34:05.424 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@1e27d2c7] under position; prior registration was null
2025-06-08 21:34:05.426 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6befeaba] under overlay; prior registration was null
2025-06-08 21:34:05.427 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@6d74868f] under trim; prior registration was null
2025-06-08 21:34:05.429 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@da4fe79] under cast; prior registration was null
2025-06-08 21:34:05.430 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55f7f084] under collate; prior registration was null
2025-06-08 21:34:05.432 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@263de88e] under extract; prior registration was null
2025-06-08 21:34:05.432 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-06-08 21:34:05.432 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-06-08 21:34:05.433 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@ccaa188] under ifnull; prior registration was null
2025-06-08 21:34:05.433 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-06-08 21:34:05.433 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-06-08 21:34:05.434 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2b5d7093] under pad; prior registration was null
2025-06-08 21:34:05.435 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@55afaf3] under str; prior registration was null
2025-06-08 21:34:05.437 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@75b3a0f1] under format; prior registration was null
2025-06-08 21:34:05.438 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@758129d9] under timestampadd; prior registration was null
2025-06-08 21:34:05.439 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@255af37b] under timestampdiff; prior registration was null
2025-06-08 21:34:05.440 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-06-08 21:34:05.440 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-06-08 21:34:05.441 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@20cd665e] under current_date; prior registration was null
2025-06-08 21:34:05.441 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@8643959] under current_time; prior registration was null
2025-06-08 21:34:05.441 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1bf77324] under current_timestamp; prior registration was null
2025-06-08 21:34:05.441 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-06-08 21:34:05.441 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-06-08 21:34:05.442 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-06-08 21:34:05.442 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3d1d2285] under local_date; prior registration was null
2025-06-08 21:34:05.442 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@76294cee] under local_time; prior registration was null
2025-06-08 21:34:05.442 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5f2e0d83] under local_datetime; prior registration was null
2025-06-08 21:34:05.442 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7fe03b11] under offset_datetime; prior registration was null
2025-06-08 21:34:05.442 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-06-08 21:34:05.443 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-06-08 21:34:05.443 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-06-08 21:34:05.443 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-06-08 21:34:05.443 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2b3d2762] under instant; prior registration was null
2025-06-08 21:34:05.444 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-06-08 21:34:05.445 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@4a0b097] under sql; prior registration was null
2025-06-08 21:34:05.446 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6904013c] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-06-08 21:34:05.446 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@41a3d671] under left; prior registration was NamedSqmFunctionTemplate(left)
2025-06-08 21:34:05.446 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@23ed1bb2] under right; prior registration was NamedSqmFunctionTemplate(right)
2025-06-08 21:34:05.447 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@22482350] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-06-08 21:34:05.448 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(length)] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-06-08 21:34:05.448 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-06-08 21:34:05.449 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under least; prior registration was NamedSqmFunctionTemplate(least)
2025-06-08 21:34:05.449 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under greatest; prior registration was NamedSqmFunctionTemplate(greatest)
2025-06-08 21:34:05.449 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-06-08 21:34:05.449 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-06-08 21:34:05.451 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@421a3142] under trunc; prior registration was null
2025-06-08 21:34:05.451 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-06-08 21:34:05.452 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4a01d8ca
2025-06-08 21:34:05.452 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-06-08 21:34:05.452 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-06-08 21:34:05.452 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-06-08 21:34:05.452 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-06-08 21:34:05.453 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2025-06-08 21:34:05.453 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : chr -> char
2025-06-08 21:34:05.454 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@a3112a4] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-06-08 21:34:05.455 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3962f6ef] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2025-06-08 21:34:05.455 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7aa208cd] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2025-06-08 21:34:05.455 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(strftime)] under format; prior registration was org.hibernate.dialect.function.FormatFunction@75b3a0f1
2025-06-08 21:34:05.456 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-06-08 21:34:05.456 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-06-08 21:34:05.456 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-06-08 21:34:05.456 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-06-08 21:34:05.457 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-06-08 21:34:05.457 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-06-08 21:34:05.458 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@1aab1dd5] under listagg; prior registration was null
2025-06-08 21:34:05.459 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg)
2025-06-08 21:34:05.460 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-06-08 21:34:05.461 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2025-06-08 21:34:05.461 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-06-08 21:34:05.461 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-06-08 21:34:05.462 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-06-08 21:34:05.463 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg)
2025-06-08 21:34:05.463 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type)
2025-06-08 21:34:05.464 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-06-08 21:34:05.464 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg)
2025-06-08 21:34:05.464 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-06-08 21:34:05.465 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-06-08 21:34:05.466 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-06-08 21:34:05.466 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-06-08 21:34:05.466 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2025-06-08 21:34:05.466 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-06-08 21:34:05.466 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-06-08 21:34:05.466 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-06-08 21:34:05.466 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date
2025-06-08 21:34:05.467 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time
2025-06-08 21:34:05.467 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp
2025-06-08 21:34:05.467 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date
2025-06-08 21:34:05.467 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant
2025-06-08 21:34:05.467 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time
2025-06-08 21:34:05.467 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp
2025-06-08 21:34:05.467 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-06-08 21:34:05.468 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-06-08 21:34:05.468 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-06-08 21:34:05.468 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2025-06-08 21:34:05.469 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-06-08 21:34:05.469 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-06-08 21:34:05.469 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value
2025-06-08 21:34:05.469 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg)
2025-06-08 21:34:05.469 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-06-08 21:34:05.469 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-06-08 21:34:05.470 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-06-08 21:34:05.470 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant
2025-06-08 21:34:05.470 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-06-08 21:34:05.470 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value
2025-06-08 21:34:05.470 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-06-08 21:34:05.471 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-06-08 21:34:05.471 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-06-08 21:34:05.471 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-06-08 21:34:05.471 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-06-08 21:34:05.471 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-06-08 21:34:05.472 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date
2025-06-08 21:34:05.472 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime
2025-06-08 21:34:05.472 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time
2025-06-08 21:34:05.472 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date
2025-06-08 21:34:05.472 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime
2025-06-08 21:34:05.472 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time
2025-06-08 21:34:05.472 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(pattern, string[, start])
2025-06-08 21:34:05.473 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-06-08 21:34:05.473 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string)
2025-06-08 21:34:05.473 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding])
2025-06-08 21:34:05.473 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-06-08 21:34:05.474 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg)
2025-06-08 21:34:05.474 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg)
2025-06-08 21:34:05.474 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-06-08 21:34:05.474 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-06-08 21:34:05.474 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1)
2025-06-08 21:34:05.474 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-06-08 21:34:05.475 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-06-08 21:34:05.475 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2025-06-08 21:34:05.475 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-06-08 21:34:05.475 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi
2025-06-08 21:34:05.476 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-06-08 21:34:05.476 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-06-08 21:34:05.476 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-06-08 21:34:05.477 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-06-08 21:34:05.477 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-06-08 21:34:05.477 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-06-08 21:34:05.477 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number()
2025-06-08 21:34:05.477 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding])
2025-06-08 21:34:05.478 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-06-08 21:34:05.478 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-06-08 21:34:05.478 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-06-08 21:34:05.478 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-06-08 21:34:05.479 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql
2025-06-08 21:34:05.479 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-06-08 21:34:05.479 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg)
2025-06-08 21:34:05.479 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-06-08 21:34:05.480 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-06-08 21:34:05.480 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg)
2025-06-08 21:34:05.480 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-06-08 21:34:05.481 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-06-08 21:34:05.481 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-06-08 21:34:05.482 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-06-08 21:34:05.482 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-06-08 21:34:05.482 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... )
2025-06-08 21:34:05.482 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... )
2025-06-08 21:34:05.482 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string)
2025-06-08 21:34:05.486 [JavaFX-Launcher] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048)
2025-06-08 21:34:05.552 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:34:05.555 [JavaFX-Launcher] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-06-08 21:34:05.625 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:05.629 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:05.635 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:05.636 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:05.636 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:34:05.636 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:34:05.810 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Factura]: private accessor [cliente]
2025-06-08 21:34:05.814 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:05.815 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:05.839 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:34:05.839 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:34:05.867 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Empleado]: private accessor [apellido]
2025-06-08 21:34:05.868 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:34:05.869 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:34:05.885 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Seccion]: private accessor [detalle]
2025-06-08 21:34:05.886 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:34:05.887 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:34:05.909 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Cliente]: private accessor [apellido]
2025-06-08 21:34:05.912 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:05.912 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:05.913 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:05.913 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:05.914 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:34:05.914 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:34:05.926 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Menu]: private accessor [codPedido]
2025-06-08 21:34:05.927 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:05.928 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:05.930 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:05.931 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:05.931 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:05.932 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:05.934 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:05.934 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:05.934 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:34:05.935 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:34:05.954 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido]: private accessor [cantidad]
2025-06-08 21:34:05.955 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:05.955 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:05.956 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:05.957 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:05.957 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:05.957 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:05.958 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:05.958 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:34:05.958 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:34:05.972 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Producto]: private accessor [categoria]
2025-06-08 21:34:05.973 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:05.973 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:05.974 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:34:05.975 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:34:05.989 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Categoria]: private accessor [estado]
2025-06-08 21:34:05.990 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:34:05.991 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:34:06.004 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Mesa]: private accessor [capacidad]
2025-06-08 21:34:06.005 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:06.005 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:06.006 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:06.006 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:06.006 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:06.006 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:06.007 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:34:06.007 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:34:06.023 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Pedido]: private accessor [cantPedidos]
2025-06-08 21:34:06.023 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:06.024 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:06.024 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:34:06.055 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks
2025-06-08 21:34:06.055 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente]
2025-06-08 21:34:06.059 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido]
2025-06-08 21:34:06.060 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Factura) `staticFetchableList` generator
2025-06-08 21:34:06.061 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Empleado) `staticFetchableList` generator
2025-06-08 21:34:06.062 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Seccion) `staticFetchableList` generator
2025-06-08 21:34:06.062 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Cliente) `staticFetchableList` generator
2025-06-08 21:34:06.063 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido]
2025-06-08 21:34:06.063 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto]
2025-06-08 21:34:06.064 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Menu) `staticFetchableList` generator
2025-06-08 21:34:06.065 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura]
2025-06-08 21:34:06.065 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido]
2025-06-08 21:34:06.066 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto]
2025-06-08 21:34:06.067 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.DetPedido) `staticFetchableList` generator
2025-06-08 21:34:06.067 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria]
2025-06-08 21:34:06.067 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion]
2025-06-08 21:34:06.067 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Producto) `staticFetchableList` generator
2025-06-08 21:34:06.067 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Categoria) `staticFetchableList` generator
2025-06-08 21:34:06.067 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Mesa) `staticFetchableList` generator
2025-06-08 21:34:06.067 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente]
2025-06-08 21:34:06.068 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado]
2025-06-08 21:34:06.068 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa]
2025-06-08 21:34:06.068 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Pedido) `staticFetchableList` generator
2025-06-08 21:34:06.150 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2025-06-08 21:34:06.152 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Factura)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura] 
2025-06-08 21:34:06.164 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5220a553] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente] 
2025-06-08 21:34:06.167 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:34:06.172 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4b508b5f] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido] 
2025-06-08 21:34:06.173 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:34:06.173 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1434f5b] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente] 
2025-06-08 21:34:06.174 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:34:06.174 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1d3beb33] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado] 
2025-06-08 21:34:06.175 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:34:06.175 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@e2de298] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa] 
2025-06-08 21:34:06.176 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:34:06.183 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.cantVisitas]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.email]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.nombre]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.telefono]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.codigo]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.fechaEmision]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.igv]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.rol]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.telefono]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.subtotal]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.total]

2025-06-08 21:34:06.188 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (f1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura) {
          primaryTableReference : factura as f1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente) {
              primaryTableReference : cliente as c1_0
            }
            left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido) {
              primaryTableReference : pedido as p1_0
              TableGroupJoins {
                left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente) {
                  primaryTableReference : cliente as c2_0
                }
                left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado) {
                  primaryTableReference : empleado as e1_0
                }
                left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa) {
                  primaryTableReference : mesa as m1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:34:06.200 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:34:06.200 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Factura */ select id_factura from factura where id_factura=?
2025-06-08 21:34:06.201 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Factura */insert into factura (id_cliente,codigo,estado,fecha_emision,igv,id_pedido,subtotal,total) values (?,?,?,?,?,?,?,?)
2025-06-08 21:34:06.202 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Factura */update factura set id_cliente=?,codigo=?,estado=?,fecha_emision=?,igv=?,id_pedido=?,subtotal=?,total=? where id_factura=?
2025-06-08 21:34:06.202 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Factura */delete from factura where id_factura=?
2025-06-08 21:34:06.202 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:34:06.202 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:34:06.203 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.rol]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.telefono]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.usuario]

2025-06-08 21:34:06.203 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:34:06.204 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:34:06.204 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Empleado */ select id_empleado from empleado where id_empleado=?
2025-06-08 21:34:06.204 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */insert into empleado (apellido,dni,estado,nombre,password,rol,telefono,usuario) values (?,?,?,?,?,?,?,?)
2025-06-08 21:34:06.204 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */update empleado set apellido=?,dni=?,estado=?,nombre=?,password=?,rol=?,telefono=?,usuario=? where id_empleado=?
2025-06-08 21:34:06.204 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */delete from empleado where id_empleado=?
2025-06-08 21:34:06.205 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:34:06.205 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Seccion)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] 
2025-06-08 21:34:06.205 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Seccion]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion.detalle]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion.estado]

2025-06-08 21:34:06.205 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Seccion) {
          primaryTableReference : seccion as s1_0
        }
      }
    }

2025-06-08 21:34:06.206 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:34:06.206 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Seccion */ select id_seccion from seccion where id_seccion=?
2025-06-08 21:34:06.206 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */insert into seccion (detalle,estado) values (?,?)
2025-06-08 21:34:06.206 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */update seccion set detalle=?,estado=? where id_seccion=?
2025-06-08 21:34:06.206 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */delete from seccion where id_seccion=?
2025-06-08 21:34:06.206 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:34:06.207 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Cliente)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] 
2025-06-08 21:34:06.207 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Cliente]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.cantVisitas]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.email]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.nombre]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.telefono]

2025-06-08 21:34:06.208 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Cliente) {
          primaryTableReference : cliente as c1_0
        }
      }
    }

2025-06-08 21:34:06.208 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:34:06.208 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Cliente */ select id_cliente from cliente where id_cliente=?
2025-06-08 21:34:06.209 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */insert into cliente (apellido,cant_visitas,dni,email,estado,nombre,telefono) values (?,?,?,?,?,?,?)
2025-06-08 21:34:06.209 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */update cliente set apellido=?,cant_visitas=?,dni=?,email=?,estado=?,nombre=?,telefono=? where id_cliente=?
2025-06-08 21:34:06.209 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */delete from cliente where id_cliente=?
2025-06-08 21:34:06.209 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:34:06.209 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Menu)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu] 
2025-06-08 21:34:06.210 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@583f45b9] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido] 
2025-06-08 21:34:06.210 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:34:06.210 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5771a7d] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente] 
2025-06-08 21:34:06.211 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:34:06.212 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2988419d] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado] 
2025-06-08 21:34:06.212 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:34:06.213 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@74d6d924] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa] 
2025-06-08 21:34:06.214 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m2_0
2025-06-08 21:34:06.215 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@56e6488a] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto] 
2025-06-08 21:34:06.215 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p2_0
2025-06-08 21:34:06.216 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6b7f14d9] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria] 
2025-06-08 21:34:06.216 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:34:06.217 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@103482] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion] 
2025-06-08 21:34:06.218 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:34:06.218 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.codPedido]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.rol]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.telefono]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.total]
 |  \-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.descripcion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.precio]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion.detalle]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.stock]

2025-06-08 21:34:06.219 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu) {
          primaryTableReference : menu as m1_0
          TableGroupJoins {
            left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido) {
              primaryTableReference : pedido as p1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente) {
                  primaryTableReference : cliente as c1_0
                }
                left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado) {
                  primaryTableReference : empleado as e1_0
                }
                left  join LazyTableGroup (m2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa) {
                  primaryTableReference : mesa as m2_0
                }
              }
            }
            left  join LazyTableGroup (p2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto) {
              primaryTableReference : producto as p2_0
              TableGroupJoins {
                left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria) {
                  primaryTableReference : categoria as c2_0
                }
                left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion) {
                  primaryTableReference : seccion as s1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:34:06.219 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:34:06.220 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Menu */ select id_menu from menu where id_menu=?
2025-06-08 21:34:06.220 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Menu */insert into menu (cod_pedido,id_pedido,id_producto) values (?,?,?)
2025-06-08 21:34:06.220 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Menu */update menu set cod_pedido=?,id_pedido=?,id_producto=? where id_menu=?
2025-06-08 21:34:06.220 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Menu */delete from menu where id_menu=?
2025-06-08 21:34:06.220 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : dp1_0
2025-06-08 21:34:06.220 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.DetPedido)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] 
2025-06-08 21:34:06.221 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@260b7096] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura] 
2025-06-08 21:34:06.221 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2025-06-08 21:34:06.221 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@35417152] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente] 
2025-06-08 21:34:06.222 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:34:06.222 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@34f4f75c] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido] 
2025-06-08 21:34:06.223 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:34:06.223 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@180714b5] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente] 
2025-06-08 21:34:06.223 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:34:06.224 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@65f548e3] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado] 
2025-06-08 21:34:06.224 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:34:06.225 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5b807eee] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa] 
2025-06-08 21:34:06.225 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:34:06.226 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@48dd2cd5] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido] 
2025-06-08 21:34:06.227 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p2_0
2025-06-08 21:34:06.228 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7eb734ee] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente] 
2025-06-08 21:34:06.229 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c3_0
2025-06-08 21:34:06.229 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6c639ca2] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado] 
2025-06-08 21:34:06.230 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e2_0
2025-06-08 21:34:06.231 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@ed899a4] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa] 
2025-06-08 21:34:06.253 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m2_0
2025-06-08 21:34:06.254 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7daae1ca] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto] 
2025-06-08 21:34:06.255 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p3_0
2025-06-08 21:34:06.255 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3afdaad5] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria] 
2025-06-08 21:34:06.256 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c4_0
2025-06-08 21:34:06.256 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4a0bb7a4] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion] 
2025-06-08 21:34:06.257 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:34:06.257 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.cantidad]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.estado]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.telefono]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.codigo]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.fechaEmision]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.igv]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cantPedidos]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.apellido]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.cantVisitas]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.dni]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.email]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.estado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.nombre]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.telefono]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.apellido]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.dni]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.estado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.nombre]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.password]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.rol]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.telefono]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.usuario]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.fechaHora]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.capacidad]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.detalle]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.estado]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.numero]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.total]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.subtotal]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.igv]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.rol]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.telefono]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.precioUnitario]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.descripcion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.precio]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion.detalle]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.stock]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.subtotal]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.total]

2025-06-08 21:34:06.258 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (dp1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido) {
          primaryTableReference : detalle_pedido as dp1_0
          TableGroupJoins {
            left  join LazyTableGroup (f1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura) {
              primaryTableReference : factura as f1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente) {
                  primaryTableReference : cliente as c1_0
                }
                left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido) {
                  primaryTableReference : pedido as p1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente) {
                      primaryTableReference : cliente as c2_0
                    }
                    left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado) {
                      primaryTableReference : empleado as e1_0
                    }
                    left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa) {
                      primaryTableReference : mesa as m1_0
                    }
                  }
                }
              }
            }
             join LazyTableGroup (p2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido) {
              primaryTableReference : pedido as p2_0
              TableGroupJoins {
                left  join LazyTableGroup (c3 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente) {
                  primaryTableReference : cliente as c3_0
                }
                left  join LazyTableGroup (e2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado) {
                  primaryTableReference : empleado as e2_0
                }
                left  join LazyTableGroup (m2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa) {
                  primaryTableReference : mesa as m2_0
                }
              }
            }
             join LazyTableGroup (p3 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto) {
              primaryTableReference : producto as p3_0
              TableGroupJoins {
                left  join LazyTableGroup (c4 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria) {
                  primaryTableReference : categoria as c4_0
                }
                left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion) {
                  primaryTableReference : seccion as s1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:34:06.260 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:34:06.260 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */ select id_detalle_pedido from detalle_pedido where id_detalle_pedido=?
2025-06-08 21:34:06.261 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */insert into detalle_pedido (cantidad,estado,id_factura,igv,id_pedido,precio_unitario,id_producto,subtotal,total) values (?,?,?,?,?,?,?,?,?)
2025-06-08 21:34:06.261 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */update detalle_pedido set cantidad=?,estado=?,id_factura=?,igv=?,id_pedido=?,precio_unitario=?,id_producto=?,subtotal=?,total=? where id_detalle_pedido=?
2025-06-08 21:34:06.262 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */delete from detalle_pedido where id_detalle_pedido=?
2025-06-08 21:34:06.262 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:34:06.263 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Producto)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto] 
2025-06-08 21:34:06.264 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2a5a0789] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria] 
2025-06-08 21:34:06.265 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:34:06.265 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7da6ab15] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion] 
2025-06-08 21:34:06.266 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:34:06.266 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.descripcion]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.precio]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion.detalle]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.stock]

2025-06-08 21:34:06.267 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto) {
          primaryTableReference : producto as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria) {
              primaryTableReference : categoria as c1_0
            }
            left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion) {
              primaryTableReference : seccion as s1_0
            }
          }
        }
      }
    }

2025-06-08 21:34:06.268 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:34:06.268 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Producto */ select id_producto from producto where id_producto=?
2025-06-08 21:34:06.268 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Producto */insert into producto (id_categoria,descripcion,estado,nombre,precio,id_seccion,stock) values (?,?,?,?,?,?,?)
2025-06-08 21:34:06.269 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Producto */update producto set id_categoria=?,descripcion=?,estado=?,nombre=?,precio=?,id_seccion=?,stock=? where id_producto=?
2025-06-08 21:34:06.269 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Producto */delete from producto where id_producto=?
2025-06-08 21:34:06.269 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:34:06.269 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Categoria)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] 
2025-06-08 21:34:06.270 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Categoria]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Categoria.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Categoria.nombre]

2025-06-08 21:34:06.270 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Categoria) {
          primaryTableReference : categoria as c1_0
        }
      }
    }

2025-06-08 21:34:06.270 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:34:06.270 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Categoria */ select id_categoria from categoria where id_categoria=?
2025-06-08 21:34:06.271 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */insert into categoria (estado,nombre) values (?,?)
2025-06-08 21:34:06.271 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */update categoria set estado=?,nombre=? where id_categoria=?
2025-06-08 21:34:06.271 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */delete from categoria where id_categoria=?
2025-06-08 21:34:06.271 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:34:06.272 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Mesa)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] 
2025-06-08 21:34:06.272 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Mesa]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.capacidad]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.detalle]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.numero]

2025-06-08 21:34:06.273 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Mesa) {
          primaryTableReference : mesa as m1_0
        }
      }
    }

2025-06-08 21:34:06.273 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:34:06.273 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Mesa */ select id_mesa from mesa where id_mesa=?
2025-06-08 21:34:06.273 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */insert into mesa (capacidad,detalle,estado,numero) values (?,?,?,?)
2025-06-08 21:34:06.274 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */update mesa set capacidad=?,detalle=?,estado=?,numero=? where id_mesa=?
2025-06-08 21:34:06.274 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */delete from mesa where id_mesa=?
2025-06-08 21:34:06.274 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:34:06.274 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Pedido)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] 
2025-06-08 21:34:06.275 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@78ced27b] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente] 
2025-06-08 21:34:06.275 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:34:06.275 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2eb363e5] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado] 
2025-06-08 21:34:06.275 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:34:06.276 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@44728412] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa] 
2025-06-08 21:34:06.277 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:34:06.278 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cantPedidos]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.cantVisitas]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.email]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.nombre]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.telefono]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.password]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.rol]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.telefono]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.usuario]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.fechaHora]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.capacidad]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.detalle]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.numero]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.total]

2025-06-08 21:34:06.279 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido) {
          primaryTableReference : pedido as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente) {
              primaryTableReference : cliente as c1_0
            }
            left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado) {
              primaryTableReference : empleado as e1_0
            }
            left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa) {
              primaryTableReference : mesa as m1_0
            }
          }
        }
      }
    }

2025-06-08 21:34:06.280 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:34:06.281 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Pedido */ select id_pedido from pedido where id_pedido=?
2025-06-08 21:34:06.281 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */insert into pedido (cant_pedidos,id_cliente,id_empleado,estado,fecha_hora,id_mesa,total) values (?,?,?,?,?,?,?)
2025-06-08 21:34:06.282 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */update pedido set cant_pedidos=?,id_cliente=?,id_empleado=?,estado=?,fecha_hora=?,id_mesa=?,total=? where id_pedido=?
2025-06-08 21:34:06.282 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */delete from pedido where id_pedido=?
2025-06-08 21:34:06.310 [JavaFX-Launcher] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-08 21:34:06.311 [JavaFX-Launcher] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71b68788] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@744bc504]
2025-06-08 21:34:06.314 [JavaFX-Launcher] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries
2025-06-08 21:34:06.315 [JavaFX-Launcher] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries
2025-06-08 21:34:06.367 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : categoria
2025-06-08 21:34:06.367 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : cliente
2025-06-08 21:34:06.368 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : detalle_pedido
2025-06-08 21:34:06.371 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    alter table empleado 
       add column apellido varchar(100) not null
2025-06-08 21:34:06.376 [JavaFX-Launcher] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table empleado 
       add column apellido varchar(100) not null" via JDBC [[SQLITE_ERROR] SQL error or missing database (Cannot add a NOT NULL column with default value NULL)]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table empleado 
       add column apellido varchar(100) not null" via JDBC [[SQLITE_ERROR] SQL error or missing database (Cannot add a NOT NULL column with default value NULL)]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1430)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:39)
	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (Cannot add a NOT NULL column with default value NULL)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:988)
	at org.sqlite.core.CoreStatement.exec(CoreStatement.java:91)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:43)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 38 common frames omitted
2025-06-08 21:34:06.382 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    alter table empleado 
       add column dni varchar(8) not null unique
2025-06-08 21:34:06.383 [JavaFX-Launcher] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table empleado 
       add column dni varchar(8) not null unique" via JDBC [[SQLITE_ERROR] SQL error or missing database (Cannot add a UNIQUE column)]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table empleado 
       add column dni varchar(8) not null unique" via JDBC [[SQLITE_ERROR] SQL error or missing database (Cannot add a UNIQUE column)]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1430)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:39)
	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (Cannot add a UNIQUE column)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:132)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:54)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:43)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 38 common frames omitted
2025-06-08 21:34:06.385 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : factura
2025-06-08 21:34:06.386 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : menu
2025-06-08 21:34:06.386 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : mesa
2025-06-08 21:34:06.386 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : pedido
2025-06-08 21:34:06.386 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : producto
2025-06-08 21:34:06.387 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : seccion
2025-06-08 21:34:06.389 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    alter table empleado 
       drop constraint UKanilfn0t89ht43r8n8lthr5b6
2025-06-08 21:34:06.392 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@310c71ac
2025-06-08 21:34:06.393 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 3e1a74eb-54f3-407c-b36e-47ace96501ed (<unnamed>)
2025-06-08 21:34:06.393 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-06-08 21:34:06.393 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory
2025-06-08 21:34:06.394 [JavaFX-Launcher] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-08 21:34:06.614 [JavaFX-Launcher] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2025-06-08 21:34:06.805 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy105.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:39)
	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:34:06.839 [JavaFX-Launcher] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-08 21:34:06.843 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy105.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:147)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:39)
	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:34:06.909 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy105.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:39)
	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:34:07.087 [JavaFX-Launcher] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:34:07.090 [JavaFX-Launcher] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-06-08 21:34:07.091 [JavaFX-Launcher] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-06-08 21:34:07.094 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:34:07.094 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-06-08 21:34:07.094 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:34:07.095 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:34:07.096 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:34:07.096 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:34:07.097 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:34:07.099 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:34:07.100 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:34:07.100 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:34:07.101 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:34:07.101 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:34:07.101 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:34:07.343 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - Started application in 6.662 seconds (process running for 7.893)
2025-06-08 21:34:07.663 [JavaFX-Launcher] INFO  p.e.u.p.ProyectoRestaurantApplication - === LISTADO DE EMPLEADOS ===
2025-06-08 21:34:07.677 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-08 21:34:07.678 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - begin
2025-06-08 21:34:07.766 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:34:07.767 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3))] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:34:07.783 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3)]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).rol]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).telefono]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).usuario]

2025-06-08 21:34:07.784 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3)) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:34:07.799 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:34:07.804 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id_empleado,
        e1_0.apellido,
        e1_0.dni,
        e1_0.estado,
        e1_0.nombre,
        e1_0.password,
        e1_0.rol,
        e1_0.telefono,
        e1_0.usuario 
    from
        empleado e1_0
2025-06-08 21:34:07.808 [JavaFX-Launcher] DEBUG o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [/* <criteria> */ select e1_0.id_empleado,e1_0.apellido,e1_0.dni,e1_0.estado,e1_0.nombre,e1_0.password,e1_0.rol,e1_0.telefono,e1_0.usuario from empleado e1_0]
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such column: e1_0.apellido)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:132)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.core.CorePreparedStatement.<init>(CorePreparedStatement.java:46)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.<init>(JDBC3PreparedStatement.java:32)
	at org.sqlite.jdbc4.JDBC4PreparedStatement.<init>(JDBC4PreparedStatement.java:25)
	at org.sqlite.jdbc4.JDBC4Connection.prepareStatement(JDBC4Connection.java:34)
	at org.sqlite.jdbc3.JDBC3Connection.prepareStatement(JDBC3Connection.java:225)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:402)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:734)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy110.findAll(Unknown Source)
	at pe.edu.upeu.proyecto_restaurant.service.EmpleadoService.listarTodos(EmpleadoService.java:20)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:48)
	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:34:07.812 [JavaFX-Launcher] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1, SQLState: null
2025-06-08 21:34:07.813 [JavaFX-Launcher] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_ERROR] SQL error or missing database (no such column: e1_0.apellido)
2025-06-08 21:34:07.819 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:543)
	at org.hibernate.internal.ExceptionConverterImpl.rollbackIfNecessary(ExceptionConverterImpl.java:264)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:160)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:151)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:402)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:734)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy110.findAll(Unknown Source)
	at pe.edu.upeu.proyecto_restaurant.service.EmpleadoService.listarTodos(EmpleadoService.java:20)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:48)
	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:34:07.823 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - rolling back
2025-06-08 21:34:07.860 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-08 21:34:07.861 [SpringApplicationShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing
2025-06-08 21:34:07.863 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4d787213] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@744bc504]
2025-06-08 21:34:07.863 [SpringApplicationShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2025-06-08 21:34:07.863 [SpringApplicationShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2025-06-08 21:34:07.863 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-08 21:34:07.863 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-08 21:37:52.878 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:37:52.881 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:37:52.882 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:37:52.883 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:37:52.892 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:37:52.894 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:37:52.923 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:37:52.930 [main] INFO  p.e.u.p.ProyectoRestaurantApplicationTests - Starting ProyectoRestaurantApplicationTests using Java 23.0.2 with PID 10556 (started by USUARIO in C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant)
2025-06-08 21:37:52.932 [main] DEBUG p.e.u.p.ProyectoRestaurantApplicationTests - Running with Spring Boot v3.5.0, Spring v6.2.7
2025-06-08 21:37:52.933 [main] INFO  p.e.u.p.ProyectoRestaurantApplicationTests - No active profile set, falling back to 1 default profile: "default"
2025-06-08 21:37:53.154 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:37:53.166 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:37:53.166 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:37:53.167 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:37:53.167 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:37:53.167 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:37:54.029 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-08 21:37:54.184 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 133 ms. Found 10 JPA repository interfaces.
2025-06-08 21:37:54.904 [main] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@70dea4e
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/USUARIO/Documents/ProyectoRestaurantJava/ProyectoRestaurant/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		pe.edu.upeu.proyecto_restaurant.modulo.Categoria
		pe.edu.upeu.proyecto_restaurant.modulo.Cliente
		pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
		pe.edu.upeu.proyecto_restaurant.modulo.Empleado
		pe.edu.upeu.proyecto_restaurant.modulo.Factura
		pe.edu.upeu.proyecto_restaurant.modulo.Menu
		pe.edu.upeu.proyecto_restaurant.modulo.Mesa
		pe.edu.upeu.proyecto_restaurant.modulo.Pedido
		pe.edu.upeu.proyecto_restaurant.modulo.Producto
		pe.edu.upeu.proyecto_restaurant.modulo.Seccion]
	Mapping files names []
	Properties []
2025-06-08 21:37:54.922 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-06-08 21:37:54.925 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-06-08 21:37:55.052 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-08 21:37:55.056 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found
2025-06-08 21:37:55.097 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-06-08 21:37:55.098 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-06-08 21:37:55.100 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:37:55.101 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:37:55.102 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-06-08 21:37:55.104 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-06-08 21:37:55.105 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-06-08 21:37:55.108 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:37:55.110 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-06-08 21:37:55.111 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-06-08 21:37:55.111 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:37:55.113 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-06-08 21:37:55.122 [main] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-06-08 21:37:55.126 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-08 21:37:55.285 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@49580ca8
2025-06-08 21:37:55.285 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@49580ca8
2025-06-08 21:37:55.286 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@49580ca8
2025-06-08 21:37:55.286 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@525647f3
2025-06-08 21:37:55.286 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@525647f3
2025-06-08 21:37:55.286 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@42fc4ac4
2025-06-08 21:37:55.287 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@42fc4ac4
2025-06-08 21:37:55.287 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@20a24edf
2025-06-08 21:37:55.287 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@20a24edf
2025-06-08 21:37:55.287 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@29962b2f
2025-06-08 21:37:55.287 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@29962b2f
2025-06-08 21:37:55.288 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@29962b2f
2025-06-08 21:37:55.288 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@491f8831
2025-06-08 21:37:55.288 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@491f8831
2025-06-08 21:37:55.288 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@491f8831
2025-06-08 21:37:55.288 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@691541bc
2025-06-08 21:37:55.288 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@691541bc
2025-06-08 21:37:55.288 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@5b733ef7
2025-06-08 21:37:55.288 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@43a4a9e5
2025-06-08 21:37:55.288 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@43a4a9e5
2025-06-08 21:37:55.289 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@764fffa0
2025-06-08 21:37:55.289 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@35145874
2025-06-08 21:37:55.289 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@77524ca7
2025-06-08 21:37:55.289 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@77524ca7
2025-06-08 21:37:55.289 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@77524ca7
2025-06-08 21:37:55.289 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@11df2829
2025-06-08 21:37:55.290 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@11df2829
2025-06-08 21:37:55.291 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@11df2829
2025-06-08 21:37:55.291 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@18e4674d
2025-06-08 21:37:55.292 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@18e4674d
2025-06-08 21:37:55.292 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@18e4674d
2025-06-08 21:37:55.292 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@f245bdd
2025-06-08 21:37:55.292 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@f245bdd
2025-06-08 21:37:55.292 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@f245bdd
2025-06-08 21:37:55.292 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6af609ea
2025-06-08 21:37:55.292 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6af609ea
2025-06-08 21:37:55.292 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6af609ea
2025-06-08 21:37:55.292 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@280fafd
2025-06-08 21:37:55.293 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@280fafd
2025-06-08 21:37:55.293 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@39e53bef
2025-06-08 21:37:55.293 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@39e53bef
2025-06-08 21:37:55.293 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@14b275bd
2025-06-08 21:37:55.293 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@14b275bd
2025-06-08 21:37:55.293 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@14b275bd
2025-06-08 21:37:55.293 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4ed18798
2025-06-08 21:37:55.293 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4b03cbad
2025-06-08 21:37:55.293 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4b03cbad
2025-06-08 21:37:55.293 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5b29ab61
2025-06-08 21:37:55.294 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5c313224
2025-06-08 21:37:55.294 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5c313224
2025-06-08 21:37:55.294 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5c313224
2025-06-08 21:37:55.294 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1e1e837d
2025-06-08 21:37:55.294 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4b957db0
2025-06-08 21:37:55.294 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5d71b500
2025-06-08 21:37:55.294 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@8840c98
2025-06-08 21:37:55.294 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@8840c98
2025-06-08 21:37:55.294 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@626b639e
2025-06-08 21:37:55.294 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@626b639e
2025-06-08 21:37:55.294 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@273fa9e
2025-06-08 21:37:55.295 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@527a8665
2025-06-08 21:37:55.295 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7ab2a07e
2025-06-08 21:37:55.295 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@437c4b25
2025-06-08 21:37:55.295 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5ec6fede
2025-06-08 21:37:55.295 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@580902cd
2025-06-08 21:37:55.295 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3757e8e2
2025-06-08 21:37:55.295 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3757e8e2
2025-06-08 21:37:55.295 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1653b84e
2025-06-08 21:37:55.295 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1653b84e
2025-06-08 21:37:55.296 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7f8a9454
2025-06-08 21:37:55.296 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7f8a9454
2025-06-08 21:37:55.296 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6f85ee02
2025-06-08 21:37:55.296 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6f85ee02
2025-06-08 21:37:55.296 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@679d0be8
2025-06-08 21:37:55.296 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@679d0be8
2025-06-08 21:37:55.296 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6c075e9d
2025-06-08 21:37:55.296 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@47044f7d
2025-06-08 21:37:55.296 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7b14c61
2025-06-08 21:37:55.296 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7b14c61
2025-06-08 21:37:55.296 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@8fcc534
2025-06-08 21:37:55.296 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5e599100
2025-06-08 21:37:55.297 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3b435211
2025-06-08 21:37:55.297 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@361cd35c
2025-06-08 21:37:55.297 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@361cd35c
2025-06-08 21:37:55.297 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@58a765ce
2025-06-08 21:37:55.297 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4a642e4b
2025-06-08 21:37:55.297 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@6b162ecc
2025-06-08 21:37:55.297 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6b162ecc
2025-06-08 21:37:55.297 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@3b4086c1
2025-06-08 21:37:55.297 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3b4086c1
2025-06-08 21:37:55.297 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@58aa1d72
2025-06-08 21:37:55.298 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@58aa1d72
2025-06-08 21:37:55.298 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@58aa1d72
2025-06-08 21:37:55.298 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@33d7765a
2025-06-08 21:37:55.298 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@33d7765a
2025-06-08 21:37:55.298 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@33d7765a
2025-06-08 21:37:55.298 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@69ed5ea2
2025-06-08 21:37:55.299 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5eed6dfb
2025-06-08 21:37:55.299 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5600a5da
2025-06-08 21:37:55.299 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5600a5da
2025-06-08 21:37:55.299 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@551be9f6
2025-06-08 21:37:55.299 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@551be9f6
2025-06-08 21:37:55.299 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@551be9f6
2025-06-08 21:37:55.299 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@269222ae
2025-06-08 21:37:55.299 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@13250132
2025-06-08 21:37:55.299 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@40d848f9
2025-06-08 21:37:55.299 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@40d848f9
2025-06-08 21:37:55.300 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@4a864d4d
2025-06-08 21:37:55.300 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4a864d4d
2025-06-08 21:37:55.300 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4a864d4d
2025-06-08 21:37:55.300 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7d3691e1
2025-06-08 21:37:55.300 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7d3691e1
2025-06-08 21:37:55.300 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@46a123e4
2025-06-08 21:37:55.300 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@46a123e4
2025-06-08 21:37:55.300 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@44bc2449
2025-06-08 21:37:55.300 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@44bc2449
2025-06-08 21:37:55.300 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3c28e5b6
2025-06-08 21:37:55.300 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3c28e5b6
2025-06-08 21:37:55.300 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7558c24b
2025-06-08 21:37:55.300 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7558c24b
2025-06-08 21:37:55.301 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3a296107
2025-06-08 21:37:55.301 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@1f129467
2025-06-08 21:37:55.301 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@646cd766
2025-06-08 21:37:55.301 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@57151b3a
2025-06-08 21:37:55.301 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@26457986
2025-06-08 21:37:55.305 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@1d289d3f
2025-06-08 21:37:55.305 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1d289d3f
2025-06-08 21:37:55.307 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6a1568d6
2025-06-08 21:37:55.308 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@11c88cca
2025-06-08 21:37:55.309 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1b37fbec
2025-06-08 21:37:55.309 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4a216eb4
2025-06-08 21:37:55.309 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@bb3ecfe
2025-06-08 21:37:55.309 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5ec88f9e
2025-06-08 21:37:55.309 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7a04f730
2025-06-08 21:37:55.309 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3b11620a
2025-06-08 21:37:55.309 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2fd1ad8a
2025-06-08 21:37:55.315 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@21f7e537] into BootstrapContext; was [null]
2025-06-08 21:37:55.315 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@21f7e537) [was null]
2025-06-08 21:37:55.316 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@240f350a] into BootstrapContext; was [null]
2025-06-08 21:37:55.316 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@706f6d26] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3af2f846]
2025-06-08 21:37:55.339 [main] DEBUG o.h.j.b.i.PersistenceUnitInfoDescriptor - Pushing class transformers for PU named 'default' on loading classloader jdk.internal.loader.ClassLoaders$AppClassLoader@70dea4e
2025-06-08 21:37:55.641 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-08 21:37:55.641 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@21f7e537]
2025-06-08 21:37:55.641 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@21f7e537]
2025-06-08 21:37:55.713 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-08 21:37:55.871 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@c732e1c
2025-06-08 21:37:55.875 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-08 21:37:55.883 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : SQLite
	version : 3.46.0
	  major : 3
	  minor : 46
2025-06-08 21:37:55.883 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : SQLite JDBC
	version : 3.46.0.0
	  major : 3
	  minor : 46
2025-06-08 21:37:55.883 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2
2025-06-08 21:37:55.912 [main] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.community.dialect.SQLiteDialect, version: 3.46
2025-06-08 21:37:55.917 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-06-08 21:37:55.917 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2025-06-08 21:37:55.937 [main] DEBUG org.hibernate.orm.jdbc.lob - HHH10010005: Disabling contextual LOB creation as createClob() method threw error : java.sql.SQLFeatureNotSupportedException
2025-06-08 21:37:55.943 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 3.46
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-08 21:37:55.964 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(PRIMITIVE_ARRAY_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-06-08 21:37:55.965 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STRING_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-08 21:37:55.971 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-06-08 21:37:55.971 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:37:55.971 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:37:55.978 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:37:55.978 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:37:55.978 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:37:55.978 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:37:55.978 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:37:55.978 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:37:55.979 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:37:55.980 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:37:55.980 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:37:55.982 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@52b32b70] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@18c820d2]
2025-06-08 21:37:56.042 [main] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-06-08 21:37:56.075 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:37:56.086 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Categoria
2025-06-08 21:37:56.098 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Categoria on table categoria
2025-06-08 21:37:56.116 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:37:56.148 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_categoria')
2025-06-08 21:37:56.150 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:37:56.151 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:37:56.158 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCategoria with lazy=false
2025-06-08 21:37:56.166 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:idCategoria]
2025-06-08 21:37:56.172 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCategoria
2025-06-08 21:37:56.178 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.id_categoria
2025-06-08 21:37:56.179 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCategoria
2025-06-08 21:37:56.184 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_categoria)]), idCategoria, identity, , ...)
2025-06-08 21:37:56.186 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:37:56.186 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:37:56.186 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:estado]
2025-06-08 21:37:56.187 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:37:56.187 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.estado
2025-06-08 21:37:56.187 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:37:56.188 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:37:56.188 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:37:56.188 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:nombre]
2025-06-08 21:37:56.188 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:37:56.189 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.nombre
2025-06-08 21:37:56.189 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:37:56.192 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:37:56.200 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:37:56.200 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Cliente
2025-06-08 21:37:56.200 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Cliente on table cliente
2025-06-08 21:37:56.201 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:37:56.203 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_cliente')
2025-06-08 21:37:56.204 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:37:56.204 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:37:56.204 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCliente with lazy=false
2025-06-08 21:37:56.204 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:idCliente]
2025-06-08 21:37:56.205 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCliente
2025-06-08 21:37:56.205 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.id_cliente
2025-06-08 21:37:56.205 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCliente
2025-06-08 21:37:56.205 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_cliente)]), idCliente, identity, , ...)
2025-06-08 21:37:56.205 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='apellido')
2025-06-08 21:37:56.206 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property apellido with lazy=false
2025-06-08 21:37:56.207 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:apellido]
2025-06-08 21:37:56.207 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for apellido
2025-06-08 21:37:56.208 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.apellido
2025-06-08 21:37:56.208 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property apellido
2025-06-08 21:37:56.208 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cant_visitas')
2025-06-08 21:37:56.208 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantVisitas with lazy=false
2025-06-08 21:37:56.208 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:cantVisitas]
2025-06-08 21:37:56.209 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantVisitas
2025-06-08 21:37:56.209 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.cant_visitas
2025-06-08 21:37:56.209 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantVisitas
2025-06-08 21:37:56.213 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='dni')
2025-06-08 21:37:56.213 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property dni with lazy=false
2025-06-08 21:37:56.213 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:dni]
2025-06-08 21:37:56.214 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for dni
2025-06-08 21:37:56.214 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.dni
2025-06-08 21:37:56.214 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property dni
2025-06-08 21:37:56.214 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
2025-06-08 21:37:56.214 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-06-08 21:37:56.214 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:email]
2025-06-08 21:37:56.214 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email
2025-06-08 21:37:56.214 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.email
2025-06-08 21:37:56.215 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property email
2025-06-08 21:37:56.215 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:37:56.215 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:37:56.215 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:estado]
2025-06-08 21:37:56.215 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:37:56.216 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.estado
2025-06-08 21:37:56.216 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:37:56.216 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:37:56.216 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:37:56.216 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:nombre]
2025-06-08 21:37:56.216 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:37:56.216 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.nombre
2025-06-08 21:37:56.216 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:37:56.217 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='telefono')
2025-06-08 21:37:56.217 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property telefono with lazy=false
2025-06-08 21:37:56.217 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:telefono]
2025-06-08 21:37:56.217 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for telefono
2025-06-08 21:37:56.217 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.telefono
2025-06-08 21:37:56.217 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property telefono
2025-06-08 21:37:56.218 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:37:56.220 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:37:56.220 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name DetPedido
2025-06-08 21:37:56.220 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.DetPedido on table detalle_pedido
2025-06-08 21:37:56.221 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:37:56.230 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_detalle_pedido')
2025-06-08 21:37:56.231 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:37:56.231 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:37:56.231 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idDetallePedido with lazy=false
2025-06-08 21:37:56.231 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:idDetallePedido]
2025-06-08 21:37:56.231 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idDetallePedido
2025-06-08 21:37:56.231 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.id_detalle_pedido
2025-06-08 21:37:56.231 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property idDetallePedido
2025-06-08 21:37:56.232 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_detalle_pedido)]), idDetallePedido, identity, , ...)
2025-06-08 21:37:56.232 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cantidad')
2025-06-08 21:37:56.232 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantidad with lazy=false
2025-06-08 21:37:56.232 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:cantidad]
2025-06-08 21:37:56.232 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantidad
2025-06-08 21:37:56.232 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.cantidad
2025-06-08 21:37:56.232 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantidad
2025-06-08 21:37:56.232 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:37:56.232 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:37:56.232 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:estado]
2025-06-08 21:37:56.232 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:37:56.232 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.estado
2025-06-08 21:37:56.232 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:37:56.235 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_factura',referencedColumn='id_factura')
2025-06-08 21:37:56.238 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:37:56.246 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property factura
2025-06-08 21:37:56.247 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='igv')
2025-06-08 21:37:56.247 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property igv with lazy=false
2025-06-08 21:37:56.247 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:igv]
2025-06-08 21:37:56.248 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for igv
2025-06-08 21:37:56.248 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.igv
2025-06-08 21:37:56.248 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property igv
2025-06-08 21:37:56.248 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:37:56.248 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:37:56.249 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:37:56.249 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio_unitario')
2025-06-08 21:37:56.249 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precioUnitario with lazy=false
2025-06-08 21:37:56.249 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:precioUnitario]
2025-06-08 21:37:56.249 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precioUnitario
2025-06-08 21:37:56.249 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.precio_unitario
2025-06-08 21:37:56.249 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property precioUnitario
2025-06-08 21:37:56.250 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_producto',referencedColumn='id_producto')
2025-06-08 21:37:56.250 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:37:56.250 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property producto
2025-06-08 21:37:56.250 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='subtotal')
2025-06-08 21:37:56.250 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property subtotal with lazy=false
2025-06-08 21:37:56.251 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:subtotal]
2025-06-08 21:37:56.251 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for subtotal
2025-06-08 21:37:56.251 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.subtotal
2025-06-08 21:37:56.251 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property subtotal
2025-06-08 21:37:56.251 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:37:56.252 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:37:56.252 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:total]
2025-06-08 21:37:56.252 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:37:56.252 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.total
2025-06-08 21:37:56.252 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:37:56.253 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:37:56.254 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:37:56.254 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Empleado
2025-06-08 21:37:56.255 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Empleado on table empleado
2025-06-08 21:37:56.255 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:37:56.258 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_empleado')
2025-06-08 21:37:56.259 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:37:56.259 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:37:56.259 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-06-08 21:37:56.259 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:id]
2025-06-08 21:37:56.259 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id
2025-06-08 21:37:56.259 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.id_empleado
2025-06-08 21:37:56.259 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property id
2025-06-08 21:37:56.260 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_empleado)]), id, identity, , ...)
2025-06-08 21:37:56.260 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='apellido')
2025-06-08 21:37:56.261 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property apellido with lazy=false
2025-06-08 21:37:56.261 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:apellido]
2025-06-08 21:37:56.261 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for apellido
2025-06-08 21:37:56.261 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.apellido
2025-06-08 21:37:56.261 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property apellido
2025-06-08 21:37:56.262 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='dni')
2025-06-08 21:37:56.262 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property dni with lazy=false
2025-06-08 21:37:56.262 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:dni]
2025-06-08 21:37:56.262 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for dni
2025-06-08 21:37:56.262 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.dni
2025-06-08 21:37:56.263 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property dni
2025-06-08 21:37:56.263 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:37:56.263 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:37:56.263 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:estado]
2025-06-08 21:37:56.263 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:37:56.264 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.estado
2025-06-08 21:37:56.264 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:37:56.264 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:37:56.265 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:37:56.265 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:nombre]
2025-06-08 21:37:56.265 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:37:56.265 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.nombre
2025-06-08 21:37:56.265 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:37:56.266 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password')
2025-06-08 21:37:56.266 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-06-08 21:37:56.266 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:password]
2025-06-08 21:37:56.266 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password
2025-06-08 21:37:56.267 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.password
2025-06-08 21:37:56.267 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property password
2025-06-08 21:37:56.267 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='rol')
2025-06-08 21:37:56.267 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property rol with lazy=false
2025-06-08 21:37:56.268 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:rol]
2025-06-08 21:37:56.268 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for rol
2025-06-08 21:37:56.268 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.rol
2025-06-08 21:37:56.268 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property rol
2025-06-08 21:37:56.268 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='telefono')
2025-06-08 21:37:56.268 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property telefono with lazy=false
2025-06-08 21:37:56.268 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:telefono]
2025-06-08 21:37:56.269 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for telefono
2025-06-08 21:37:56.269 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.telefono
2025-06-08 21:37:56.269 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property telefono
2025-06-08 21:37:56.269 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='usuario')
2025-06-08 21:37:56.270 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property usuario with lazy=false
2025-06-08 21:37:56.270 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:usuario]
2025-06-08 21:37:56.270 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for usuario
2025-06-08 21:37:56.270 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.usuario
2025-06-08 21:37:56.270 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property usuario
2025-06-08 21:37:56.271 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:37:56.272 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:37:56.273 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Factura
2025-06-08 21:37:56.274 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Factura on table factura
2025-06-08 21:37:56.274 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:37:56.278 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_factura')
2025-06-08 21:37:56.279 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:37:56.279 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:37:56.279 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idFactura with lazy=false
2025-06-08 21:37:56.279 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:idFactura]
2025-06-08 21:37:56.279 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idFactura
2025-06-08 21:37:56.279 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.id_factura
2025-06-08 21:37:56.279 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property idFactura
2025-06-08 21:37:56.279 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_factura)]), idFactura, identity, , ...)
2025-06-08 21:37:56.279 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_cliente',referencedColumn='id_cliente')
2025-06-08 21:37:56.280 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:37:56.280 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property cliente
2025-06-08 21:37:56.280 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='codigo')
2025-06-08 21:37:56.281 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codigo with lazy=false
2025-06-08 21:37:56.281 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:codigo]
2025-06-08 21:37:56.281 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codigo
2025-06-08 21:37:56.281 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.codigo
2025-06-08 21:37:56.281 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property codigo
2025-06-08 21:37:56.282 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:37:56.282 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:37:56.282 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:estado]
2025-06-08 21:37:56.282 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:37:56.282 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.estado
2025-06-08 21:37:56.282 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:37:56.282 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fecha_emision')
2025-06-08 21:37:56.282 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaEmision with lazy=false
2025-06-08 21:37:56.283 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:fechaEmision]
2025-06-08 21:37:56.283 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaEmision
2025-06-08 21:37:56.283 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.fecha_emision
2025-06-08 21:37:56.283 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaEmision
2025-06-08 21:37:56.283 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='igv')
2025-06-08 21:37:56.283 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property igv with lazy=false
2025-06-08 21:37:56.283 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:igv]
2025-06-08 21:37:56.283 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for igv
2025-06-08 21:37:56.283 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.igv
2025-06-08 21:37:56.283 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property igv
2025-06-08 21:37:56.284 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:37:56.284 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:37:56.285 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:37:56.285 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='subtotal')
2025-06-08 21:37:56.285 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property subtotal with lazy=false
2025-06-08 21:37:56.285 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:subtotal]
2025-06-08 21:37:56.285 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for subtotal
2025-06-08 21:37:56.285 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.subtotal
2025-06-08 21:37:56.285 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property subtotal
2025-06-08 21:37:56.286 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:37:56.286 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:37:56.286 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:total]
2025-06-08 21:37:56.286 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:37:56.286 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.total
2025-06-08 21:37:56.286 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:37:56.287 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:37:56.288 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:37:56.288 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Menu
2025-06-08 21:37:56.289 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Menu on table menu
2025-06-08 21:37:56.290 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:37:56.292 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_menu')
2025-06-08 21:37:56.292 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:37:56.293 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:37:56.293 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idMenu with lazy=false
2025-06-08 21:37:56.293 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Menu:idMenu]
2025-06-08 21:37:56.293 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idMenu
2025-06-08 21:37:56.293 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: menu.id_menu
2025-06-08 21:37:56.293 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property idMenu
2025-06-08 21:37:56.293 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_menu)]), idMenu, identity, , ...)
2025-06-08 21:37:56.293 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cod_pedido')
2025-06-08 21:37:56.293 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codPedido with lazy=false
2025-06-08 21:37:56.293 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Menu:codPedido]
2025-06-08 21:37:56.293 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codPedido
2025-06-08 21:37:56.293 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: menu.cod_pedido
2025-06-08 21:37:56.293 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property codPedido
2025-06-08 21:37:56.294 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:37:56.294 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:37:56.294 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:37:56.294 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_producto',referencedColumn='id_producto')
2025-06-08 21:37:56.294 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:37:56.295 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property producto
2025-06-08 21:37:56.296 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:37:56.296 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:37:56.297 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Mesa
2025-06-08 21:37:56.297 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Mesa on table mesa
2025-06-08 21:37:56.297 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:37:56.299 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_mesa')
2025-06-08 21:37:56.300 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:37:56.300 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:37:56.300 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idMesa with lazy=false
2025-06-08 21:37:56.300 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:idMesa]
2025-06-08 21:37:56.300 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idMesa
2025-06-08 21:37:56.300 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.id_mesa
2025-06-08 21:37:56.300 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property idMesa
2025-06-08 21:37:56.301 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_mesa)]), idMesa, identity, , ...)
2025-06-08 21:37:56.302 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='capacidad')
2025-06-08 21:37:56.302 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property capacidad with lazy=false
2025-06-08 21:37:56.302 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:capacidad]
2025-06-08 21:37:56.303 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for capacidad
2025-06-08 21:37:56.304 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.capacidad
2025-06-08 21:37:56.305 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property capacidad
2025-06-08 21:37:56.309 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='detalle')
2025-06-08 21:37:56.311 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property detalle with lazy=false
2025-06-08 21:37:56.311 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:detalle]
2025-06-08 21:37:56.312 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for detalle
2025-06-08 21:37:56.312 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.detalle
2025-06-08 21:37:56.313 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property detalle
2025-06-08 21:37:56.314 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:37:56.314 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:37:56.315 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:estado]
2025-06-08 21:37:56.315 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:37:56.316 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.estado
2025-06-08 21:37:56.316 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:37:56.317 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='numero')
2025-06-08 21:37:56.318 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property numero with lazy=false
2025-06-08 21:37:56.318 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:numero]
2025-06-08 21:37:56.318 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for numero
2025-06-08 21:37:56.319 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.numero
2025-06-08 21:37:56.319 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property numero
2025-06-08 21:37:56.323 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:37:56.325 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:37:56.325 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Pedido
2025-06-08 21:37:56.326 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Pedido on table pedido
2025-06-08 21:37:56.327 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:37:56.333 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_pedido')
2025-06-08 21:37:56.334 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:37:56.334 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:37:56.334 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idPedido with lazy=false
2025-06-08 21:37:56.335 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:idPedido]
2025-06-08 21:37:56.336 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idPedido
2025-06-08 21:37:56.337 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.id_pedido
2025-06-08 21:37:56.337 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property idPedido
2025-06-08 21:37:56.338 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_pedido)]), idPedido, identity, , ...)
2025-06-08 21:37:56.338 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cant_pedidos')
2025-06-08 21:37:56.339 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantPedidos with lazy=false
2025-06-08 21:37:56.340 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:cantPedidos]
2025-06-08 21:37:56.340 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantPedidos
2025-06-08 21:37:56.341 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.cant_pedidos
2025-06-08 21:37:56.342 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantPedidos
2025-06-08 21:37:56.343 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_cliente',referencedColumn='id_cliente')
2025-06-08 21:37:56.343 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:37:56.344 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property cliente
2025-06-08 21:37:56.345 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_empleado',referencedColumn='id_empleado')
2025-06-08 21:37:56.345 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:37:56.346 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property empleado
2025-06-08 21:37:56.346 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:37:56.347 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:37:56.348 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:estado]
2025-06-08 21:37:56.348 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:37:56.349 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.estado
2025-06-08 21:37:56.349 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:37:56.350 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fecha_hora')
2025-06-08 21:37:56.355 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaHora with lazy=false
2025-06-08 21:37:56.358 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:fechaHora]
2025-06-08 21:37:56.359 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaHora
2025-06-08 21:37:56.360 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.fecha_hora
2025-06-08 21:37:56.360 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaHora
2025-06-08 21:37:56.361 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_mesa',referencedColumn='id_mesa')
2025-06-08 21:37:56.362 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:37:56.363 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property mesa
2025-06-08 21:37:56.364 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:37:56.365 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:37:56.365 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:total]
2025-06-08 21:37:56.365 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:37:56.366 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.total
2025-06-08 21:37:56.366 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:37:56.368 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:37:56.369 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:37:56.370 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Producto
2025-06-08 21:37:56.371 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Producto on table producto
2025-06-08 21:37:56.372 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:37:56.376 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_producto')
2025-06-08 21:37:56.376 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:37:56.377 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:37:56.377 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idProducto with lazy=false
2025-06-08 21:37:56.377 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:idProducto]
2025-06-08 21:37:56.377 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idProducto
2025-06-08 21:37:56.377 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.id_producto
2025-06-08 21:37:56.378 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property idProducto
2025-06-08 21:37:56.378 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_producto)]), idProducto, identity, , ...)
2025-06-08 21:37:56.378 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_categoria',referencedColumn='id_categoria')
2025-06-08 21:37:56.379 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:37:56.379 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property categoria
2025-06-08 21:37:56.380 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='descripcion')
2025-06-08 21:37:56.380 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property descripcion with lazy=false
2025-06-08 21:37:56.381 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:descripcion]
2025-06-08 21:37:56.381 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for descripcion
2025-06-08 21:37:56.381 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.descripcion
2025-06-08 21:37:56.381 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property descripcion
2025-06-08 21:37:56.382 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:37:56.382 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:37:56.382 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:estado]
2025-06-08 21:37:56.382 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:37:56.382 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.estado
2025-06-08 21:37:56.383 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:37:56.383 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:37:56.383 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:37:56.383 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:nombre]
2025-06-08 21:37:56.384 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:37:56.384 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.nombre
2025-06-08 21:37:56.384 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:37:56.385 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio')
2025-06-08 21:37:56.386 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precio with lazy=false
2025-06-08 21:37:56.386 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:precio]
2025-06-08 21:37:56.386 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precio
2025-06-08 21:37:56.387 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.precio
2025-06-08 21:37:56.387 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property precio
2025-06-08 21:37:56.388 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_seccion',referencedColumn='id_seccion')
2025-06-08 21:37:56.388 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:37:56.388 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property seccion
2025-06-08 21:37:56.389 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='stock')
2025-06-08 21:37:56.389 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property stock with lazy=false
2025-06-08 21:37:56.390 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:stock]
2025-06-08 21:37:56.390 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for stock
2025-06-08 21:37:56.390 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.stock
2025-06-08 21:37:56.391 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property stock
2025-06-08 21:37:56.392 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:37:56.392 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:37:56.393 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Seccion
2025-06-08 21:37:56.393 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Seccion on table seccion
2025-06-08 21:37:56.393 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:37:56.395 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_seccion')
2025-06-08 21:37:56.395 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:37:56.395 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:37:56.395 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idSeccion with lazy=false
2025-06-08 21:37:56.395 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:idSeccion]
2025-06-08 21:37:56.395 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idSeccion
2025-06-08 21:37:56.396 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.id_seccion
2025-06-08 21:37:56.396 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property idSeccion
2025-06-08 21:37:56.396 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_seccion)]), idSeccion, identity, , ...)
2025-06-08 21:37:56.396 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='detalle')
2025-06-08 21:37:56.396 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property detalle with lazy=false
2025-06-08 21:37:56.396 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:detalle]
2025-06-08 21:37:56.397 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for detalle
2025-06-08 21:37:56.397 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.detalle
2025-06-08 21:37:56.397 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property detalle
2025-06-08 21:37:56.397 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:37:56.397 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:37:56.397 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:estado]
2025-06-08 21:37:56.397 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:37:56.397 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.estado
2025-06-08 21:37:56.397 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:37:56.398 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:37:56.400 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idCategoria
2025-06-08 21:37:56.401 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:37:56.401 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:37:56.401 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idCliente
2025-06-08 21:37:56.401 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apellido
2025-06-08 21:37:56.401 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantVisitas
2025-06-08 21:37:56.401 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for dni
2025-06-08 21:37:56.401 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-06-08 21:37:56.401 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:37:56.401 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:37:56.401 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for telefono
2025-06-08 21:37:56.401 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idDetallePedido
2025-06-08 21:37:56.401 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantidad
2025-06-08 21:37:56.401 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:37:56.401 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for igv
2025-06-08 21:37:56.401 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precioUnitario
2025-06-08 21:37:56.402 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for subtotal
2025-06-08 21:37:56.402 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:37:56.402 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-06-08 21:37:56.402 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apellido
2025-06-08 21:37:56.402 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for dni
2025-06-08 21:37:56.402 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:37:56.402 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:37:56.402 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-06-08 21:37:56.402 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for rol
2025-06-08 21:37:56.402 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for telefono
2025-06-08 21:37:56.402 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for usuario
2025-06-08 21:37:56.402 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idFactura
2025-06-08 21:37:56.402 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codigo
2025-06-08 21:37:56.402 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:37:56.402 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaEmision
2025-06-08 21:37:56.402 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for igv
2025-06-08 21:37:56.403 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for subtotal
2025-06-08 21:37:56.403 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:37:56.403 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idMenu
2025-06-08 21:37:56.403 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codPedido
2025-06-08 21:37:56.403 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idMesa
2025-06-08 21:37:56.403 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for capacidad
2025-06-08 21:37:56.403 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for detalle
2025-06-08 21:37:56.403 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:37:56.403 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for numero
2025-06-08 21:37:56.403 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idPedido
2025-06-08 21:37:56.403 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantPedidos
2025-06-08 21:37:56.403 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:37:56.403 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaHora
2025-06-08 21:37:56.403 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:37:56.403 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idProducto
2025-06-08 21:37:56.403 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for descripcion
2025-06-08 21:37:56.403 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:37:56.403 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:37:56.403 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precio
2025-06-08 21:37:56.403 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for stock
2025-06-08 21:37:56.404 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idSeccion
2025-06-08 21:37:56.404 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for detalle
2025-06-08 21:37:56.404 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:37:56.413 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_categoria] to be non-null as it is part of the primary key for table [categoria]
2025-06-08 21:37:56.414 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_cliente] to be non-null as it is part of the primary key for table [cliente]
2025-06-08 21:37:56.414 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_detalle_pedido] to be non-null as it is part of the primary key for table [detalle_pedido]
2025-06-08 21:37:56.414 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_empleado] to be non-null as it is part of the primary key for table [empleado]
2025-06-08 21:37:56.414 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_factura] to be non-null as it is part of the primary key for table [factura]
2025-06-08 21:37:56.414 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_menu] to be non-null as it is part of the primary key for table [menu]
2025-06-08 21:37:56.414 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_mesa] to be non-null as it is part of the primary key for table [mesa]
2025-06-08 21:37:56.414 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_pedido] to be non-null as it is part of the primary key for table [pedido]
2025-06-08 21:37:56.414 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_producto] to be non-null as it is part of the primary key for table [producto]
2025-06-08 21:37:56.414 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_seccion] to be non-null as it is part of the primary key for table [seccion]
2025-06-08 21:37:56.742 [main] DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2025-06-08 21:37:56.793 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:37:56.794 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=23, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@23c72128, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.community.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant\target\test-classes;C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant\target\classes;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter\3.5.0\spring-boot-starter-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot\3.5.0\spring-boot-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-context\6.2.7\spring-context-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-expression\6.2.7\spring-expression-6.2.7.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-observation\1.15.0\micrometer-observation-1.15.0.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-commons\1.15.0\micrometer-commons-1.15.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.5.0\spring-boot-autoconfigure-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.5.0\spring-boot-starter-logging-3.5.0.jar;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\USUARIO\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-core\6.2.7\spring-core-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jcl\6.2.7\spring-jcl-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\yaml\snakeyaml\2.4\snakeyaml-2.4.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.5.0\spring-boot-starter-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.5.0\spring-boot-starter-jdbc-3.5.0.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jdbc\6.2.7\spring-jdbc-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-core\6.6.15.Final\hibernate-core-6.6.15.Final.jar;C:\Users\USUARIO\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\USUARIO\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\USUARIO\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\USUARIO\.m2\repository\net\bytebuddy\byte-buddy\1.17.5\byte-buddy-1.17.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\USUARIO\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\USUARIO\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-jpa\3.5.0\spring-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-commons\3.5.0\spring-data-commons-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-orm\6.2.7\spring-orm-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aop\6.2.7\spring-aop-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-tx\6.2.7\spring-tx-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-beans\6.2.7\spring-beans-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aspects\6.2.7\spring-aspects-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.5.0\spring-boot-starter-test-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-test\3.5.0\spring-boot-test-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.5.0\spring-boot-test-autoconfigure-3.5.0.jar;C:\Users\USUARIO\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\USUARIO\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\USUARIO\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\USUARIO\.m2\repository\net\minidev\json-smart\2.5.2\json-smart-2.5.2.jar;C:\Users\USUARIO\.m2\repository\net\minidev\accessors-smart\2.5.2\accessors-smart-2.5.2.jar;C:\Users\USUARIO\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\USUARIO\.m2\repository\org\assertj\assertj-core\3.27.3\assertj-core-3.27.3.jar;C:\Users\USUARIO\.m2\repository\org\awaitility\awaitility\4.3.0\awaitility-4.3.0.jar;C:\Users\USUARIO\.m2\repository\org\hamcrest\hamcrest\3.0\hamcrest-3.0.jar;C:\Users\USUARIO\.m2\repository\org\junit\jupiter\junit-jupiter\5.12.2\junit-jupiter-5.12.2.jar;C:\Users\USUARIO\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.12.2\junit-jupiter-api-5.12.2.jar;C:\Users\USUARIO\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\USUARIO\.m2\repository\org\junit\platform\junit-platform-commons\1.12.2\junit-platform-commons-1.12.2.jar;C:\Users\USUARIO\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\USUARIO\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.12.2\junit-jupiter-params-5.12.2.jar;C:\Users\USUARIO\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.12.2\junit-jupiter-engine-5.12.2.jar;C:\Users\USUARIO\.m2\repository\org\junit\platform\junit-platform-engine\1.12.2\junit-platform-engine-1.12.2.jar;C:\Users\USUARIO\.m2\repository\org\mockito\mockito-core\5.17.0\mockito-core-5.17.0.jar;C:\Users\USUARIO\.m2\repository\net\bytebuddy\byte-buddy-agent\1.17.5\byte-buddy-agent-1.17.5.jar;C:\Users\USUARIO\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\USUARIO\.m2\repository\org\mockito\mockito-junit-jupiter\5.17.0\mockito-junit-jupiter-5.17.0.jar;C:\Users\USUARIO\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\USUARIO\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-test\6.2.7\spring-test-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\xmlunit\xmlunit-core\2.10.1\xmlunit-core-2.10.1.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-community-dialects\6.4.4.Final\hibernate-community-dialects-6.4.4.Final.jar;C:\Users\USUARIO\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\USUARIO\.m2\repository\org\xerial\sqlite-jdbc\3.46.0.0\sqlite-jdbc-3.46.0.0.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\USUARIO\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.0\jackson-annotations-2.17.0.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.2.Final\hibernate-validator-7.0.2.Final.jar;C:\Users\USUARIO\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-fxml\21.0.1\javafx-fxml-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-fxml\21.0.1\javafx-fxml-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-swing\21.0.1\javafx-swing-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-swing\21.0.1\javafx-swing-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\bootstrapfx\bootstrapfx-core\0.2.4\bootstrapfx-core-0.2.4.jar;C:\Users\USUARIO\.m2\repository\io\github\mkpaz\atlantafx-base\2.0.0\atlantafx-base-2.0.0.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-javafx\12.3.1\ikonli-javafx-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-core\12.3.1\ikonli-core-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-fontawesome5-pack\12.3.1\ikonli-fontawesome5-pack-12.3.1.jar;C:\Users\USUARIO\.m2\repository\net\sf\jasperreports\jasperreports\6.20.0\jasperreports-6.20.0.jar;C:\Users\USUARIO\.m2\repository\commons-beanutils\commons-beanutils\1.9.4\commons-beanutils-1.9.4.jar;C:\Users\USUARIO\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\USUARIO\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\USUARIO\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-collections4\4.2\commons-collections4-4.2.jar;C:\Users\USUARIO\.m2\repository\com\lowagie\itext\2.1.7.js10\itext-2.1.7.js10.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcprov-jdk15on\1.70\bcprov-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcutil-jdk15on\1.70\bcutil-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jcommon\1.0.23\jcommon-1.0.23.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jfreechart\1.0.19\jfreechart-1.0.19.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\jdt\ecj\3.21.0\ecj-3.21.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.19.0\jackson-core-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.19.0\jackson-databind-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-xml\2.19.0\jackson-dataformat-xml-2.19.0.jar;C:\Users\USUARIO\.m2\repository\org\codehaus\woodstox\stax2-api\4.2.2\stax2-api-4.2.2.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\woodstox\woodstox-core\7.1.0\woodstox-core-7.1.0.jar;C:\Users\USUARIO\.m2\repository\win\zqxu\jrviewer-fx\0.1.1\jrviewer-fx-0.1.1.jar;C:\Users\USUARIO\.m2\repository\jakarta\el\jakarta.el-api\4.0.0\jakarta.el-api-4.0.0.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jakarta.el\4.0.2\jakarta.el-4.0.2.jar;C:\Users\USUARIO\.m2\repository\com\miglayout\miglayout\3.7.4\miglayout-3.7.4.jar;C:\Users\USUARIO\.m2\repository\org\apache\groovy\groovy\4.0.6\groovy-4.0.6.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml\5.2.3\poi-ooxml-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi\5.2.3\poi-5.2.3.jar;C:\Users\USUARIO\.m2\repository\commons-codec\commons-codec\1.18.0\commons-codec-1.18.0.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-math3\3.6.1\commons-math3-3.6.1.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\SparseBitSet\1.2\SparseBitSet-1.2.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml-lite\5.2.3\poi-ooxml-lite-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\xmlbeans\xmlbeans\5.1.1\xmlbeans-5.1.1.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-compress\1.21\commons-compress-1.21.jar;C:\Users\USUARIO\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\USUARIO\.m2\repository\com\github\virtuald\curvesapi\1.07\curvesapi-1.07.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;, LOGBACK_ROLLINGPOLICY_MAX_FILE_SIZE=10485760, java.vm.vendor=Oracle Corporation, LOG_PATH=logs/, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Bogota, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, os.name=Windows 11, java.vm.specification.version=23, APPLICATION_NAME=ProyectoRestaurant, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=MX, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk-23\bin, sun.java.command=C:\Users\USUARIO\AppData\Local\Temp\surefire13144389972953213324\surefirebooter-20250608213750659_3.jar C:\Users\USUARIO\AppData\Local\Temp\surefire13144389972953213324 2025-06-08T21-37-48_292-jvmRun1 surefire-20250608213750659_1tmp surefire_0-20250608213750659_2tmp, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.use_sql_comments=true, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@2bd2430f, jdk.debug=release, surefire.test.class.path=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant\target\test-classes;C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant\target\classes;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter\3.5.0\spring-boot-starter-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot\3.5.0\spring-boot-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-context\6.2.7\spring-context-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-expression\6.2.7\spring-expression-6.2.7.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-observation\1.15.0\micrometer-observation-1.15.0.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-commons\1.15.0\micrometer-commons-1.15.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.5.0\spring-boot-autoconfigure-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.5.0\spring-boot-starter-logging-3.5.0.jar;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\USUARIO\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-core\6.2.7\spring-core-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jcl\6.2.7\spring-jcl-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\yaml\snakeyaml\2.4\snakeyaml-2.4.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.5.0\spring-boot-starter-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.5.0\spring-boot-starter-jdbc-3.5.0.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jdbc\6.2.7\spring-jdbc-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-core\6.6.15.Final\hibernate-core-6.6.15.Final.jar;C:\Users\USUARIO\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\USUARIO\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\USUARIO\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\USUARIO\.m2\repository\net\bytebuddy\byte-buddy\1.17.5\byte-buddy-1.17.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\USUARIO\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\USUARIO\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-jpa\3.5.0\spring-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-commons\3.5.0\spring-data-commons-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-orm\6.2.7\spring-orm-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aop\6.2.7\spring-aop-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-tx\6.2.7\spring-tx-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-beans\6.2.7\spring-beans-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aspects\6.2.7\spring-aspects-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.5.0\spring-boot-starter-test-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-test\3.5.0\spring-boot-test-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.5.0\spring-boot-test-autoconfigure-3.5.0.jar;C:\Users\USUARIO\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\USUARIO\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\USUARIO\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\USUARIO\.m2\repository\net\minidev\json-smart\2.5.2\json-smart-2.5.2.jar;C:\Users\USUARIO\.m2\repository\net\minidev\accessors-smart\2.5.2\accessors-smart-2.5.2.jar;C:\Users\USUARIO\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\USUARIO\.m2\repository\org\assertj\assertj-core\3.27.3\assertj-core-3.27.3.jar;C:\Users\USUARIO\.m2\repository\org\awaitility\awaitility\4.3.0\awaitility-4.3.0.jar;C:\Users\USUARIO\.m2\repository\org\hamcrest\hamcrest\3.0\hamcrest-3.0.jar;C:\Users\USUARIO\.m2\repository\org\junit\jupiter\junit-jupiter\5.12.2\junit-jupiter-5.12.2.jar;C:\Users\USUARIO\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.12.2\junit-jupiter-api-5.12.2.jar;C:\Users\USUARIO\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\USUARIO\.m2\repository\org\junit\platform\junit-platform-commons\1.12.2\junit-platform-commons-1.12.2.jar;C:\Users\USUARIO\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\USUARIO\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.12.2\junit-jupiter-params-5.12.2.jar;C:\Users\USUARIO\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.12.2\junit-jupiter-engine-5.12.2.jar;C:\Users\USUARIO\.m2\repository\org\junit\platform\junit-platform-engine\1.12.2\junit-platform-engine-1.12.2.jar;C:\Users\USUARIO\.m2\repository\org\mockito\mockito-core\5.17.0\mockito-core-5.17.0.jar;C:\Users\USUARIO\.m2\repository\net\bytebuddy\byte-buddy-agent\1.17.5\byte-buddy-agent-1.17.5.jar;C:\Users\USUARIO\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\USUARIO\.m2\repository\org\mockito\mockito-junit-jupiter\5.17.0\mockito-junit-jupiter-5.17.0.jar;C:\Users\USUARIO\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\USUARIO\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-test\6.2.7\spring-test-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\xmlunit\xmlunit-core\2.10.1\xmlunit-core-2.10.1.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-community-dialects\6.4.4.Final\hibernate-community-dialects-6.4.4.Final.jar;C:\Users\USUARIO\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\USUARIO\.m2\repository\org\xerial\sqlite-jdbc\3.46.0.0\sqlite-jdbc-3.46.0.0.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\USUARIO\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.0\jackson-annotations-2.17.0.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.2.Final\hibernate-validator-7.0.2.Final.jar;C:\Users\USUARIO\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-fxml\21.0.1\javafx-fxml-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-fxml\21.0.1\javafx-fxml-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-swing\21.0.1\javafx-swing-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-swing\21.0.1\javafx-swing-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\bootstrapfx\bootstrapfx-core\0.2.4\bootstrapfx-core-0.2.4.jar;C:\Users\USUARIO\.m2\repository\io\github\mkpaz\atlantafx-base\2.0.0\atlantafx-base-2.0.0.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-javafx\12.3.1\ikonli-javafx-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-core\12.3.1\ikonli-core-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-fontawesome5-pack\12.3.1\ikonli-fontawesome5-pack-12.3.1.jar;C:\Users\USUARIO\.m2\repository\net\sf\jasperreports\jasperreports\6.20.0\jasperreports-6.20.0.jar;C:\Users\USUARIO\.m2\repository\commons-beanutils\commons-beanutils\1.9.4\commons-beanutils-1.9.4.jar;C:\Users\USUARIO\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\USUARIO\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\USUARIO\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-collections4\4.2\commons-collections4-4.2.jar;C:\Users\USUARIO\.m2\repository\com\lowagie\itext\2.1.7.js10\itext-2.1.7.js10.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcprov-jdk15on\1.70\bcprov-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcutil-jdk15on\1.70\bcutil-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jcommon\1.0.23\jcommon-1.0.23.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jfreechart\1.0.19\jfreechart-1.0.19.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\jdt\ecj\3.21.0\ecj-3.21.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.19.0\jackson-core-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.19.0\jackson-databind-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-xml\2.19.0\jackson-dataformat-xml-2.19.0.jar;C:\Users\USUARIO\.m2\repository\org\codehaus\woodstox\stax2-api\4.2.2\stax2-api-4.2.2.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\woodstox\woodstox-core\7.1.0\woodstox-core-7.1.0.jar;C:\Users\USUARIO\.m2\repository\win\zqxu\jrviewer-fx\0.1.1\jrviewer-fx-0.1.1.jar;C:\Users\USUARIO\.m2\repository\jakarta\el\jakarta.el-api\4.0.0\jakarta.el-api-4.0.0.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jakarta.el\4.0.2\jakarta.el-4.0.2.jar;C:\Users\USUARIO\.m2\repository\com\miglayout\miglayout\3.7.4\miglayout-3.7.4.jar;C:\Users\USUARIO\.m2\repository\org\apache\groovy\groovy\4.0.6\groovy-4.0.6.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml\5.2.3\poi-ooxml-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi\5.2.3\poi-5.2.3.jar;C:\Users\USUARIO\.m2\repository\commons-codec\commons-codec\1.18.0\commons-codec-1.18.0.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-math3\3.6.1\commons-math3-3.6.1.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\SparseBitSet\1.2\SparseBitSet-1.2.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml-lite\5.2.3\poi-ooxml-lite-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\xmlbeans\xmlbeans\5.1.1\xmlbeans-5.1.1.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-compress\1.21\commons-compress-1.21.jar;C:\Users\USUARIO\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\USUARIO\.m2\repository\com\github\virtuald\curvesapi\1.07\curvesapi-1.07.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\USUARIO, user.language=es, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-23, file.separator=\, basedir=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, surefire.real.class.path=C:\Users\USUARIO\AppData\Local\Temp\surefire13144389972953213324\surefirebooter-20250608213750659_3.jar, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7-58, user.name=USUARIO, stdout.encoding=Cp1252, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, FILE_LOG_PATTERN=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, LOG_FILE=logs/restaurant.log, localRepository=C:\Users\USUARIO\.m2\repository, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\USUARIO\AppData\Local\Temp\, java.version=23.0.2, LOGBACK_ROLLINGPOLICY_CLEAN_HISTORY_ON_START=false, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=10556, sun.os.patch.level=, CONSOLE_LOG_CHARSET=windows-1252, LOGBACK_ROLLINGPOLICY_MAX_HISTORY=30, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2890e479, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-23\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;c:\Users\USUARIO\AppData\Local\Programs\cursor\resources\app\bin;C:\Users\USUARIO\AppData\Local\Programs\Python\Python313\Scripts\;C:\Users\USUARIO\AppData\Local\Programs\Python\Launcher\;C:\Users\USUARIO\AppData\Local\Microsoft\WindowsApps;C:\Users\USUARIO\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\USUARIO\AppData\Roaming\npm;C:\flutter\bin;C:\Users\USUARIO\AppData\Local\Programs\Python\Python313\;C:\ffpmg\bin;C:\Users\USUARIO\Downloads\apache-maven-3.9.9\bin;C:\Users\USUARIO\AppData\Local\GitHubDesktop\bin;C:\Users\USUARIO\AppData\Local\Microsoft\WinGet\Packages\Schniz.fnm_Microsoft.Winget.Source_8wekyb3d8bbwe;C:\Users\USUARIO\AppData\Local\Programs\cursor\resources\app\bin;., stderr.encoding=Cp1252, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=23.0.2+7-58, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), CONSOLE_LOG_PATTERN=%d{HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{36}) - %msg%n, java.class.version=67.0, LOGGED_APPLICATION_NAME=[ProyectoRestaurant] , LOGBACK_ROLLINGPOLICY_TOTAL_SIZE_CAP=104857600}
2025-06-08 21:37:56.798 [main] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-06-08 21:37:56.804 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:37:56.804 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:37:56.804 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:37:56.804 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:37:56.804 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:37:56.804 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:37:56.805 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:37:56.807 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:37:56.808 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:37:56.808 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:37:56.808 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:37:56.808 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:37:56.808 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:37:56.809 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:37:56.810 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:37:56.849 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:37:56.849 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:37:56.853 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:37:56.853 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:37:56.857 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:37:56.857 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:37:56.860 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:37:56.860 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:37:56.862 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:37:56.862 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:37:56.865 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:37:56.865 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:37:56.868 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:37:56.868 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:37:56.870 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:37:56.870 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:37:56.874 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:37:56.874 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:37:56.876 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:37:56.916 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-06-08 21:37:56.916 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-06-08 21:37:56.916 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-06-08 21:37:56.917 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-06-08 21:37:56.919 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@8315e4a] under count; prior registration was null
2025-06-08 21:37:56.919 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6a7aa675] under every; prior registration was null
2025-06-08 21:37:56.920 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6eded11a] under any; prior registration was null
2025-06-08 21:37:56.920 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-06-08 21:37:56.920 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-06-08 21:37:56.920 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-06-08 21:37:56.920 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-06-08 21:37:56.920 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-06-08 21:37:56.920 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-06-08 21:37:56.920 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-06-08 21:37:56.920 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-06-08 21:37:56.920 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-06-08 21:37:56.921 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-06-08 21:37:56.921 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-06-08 21:37:56.921 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-06-08 21:37:56.921 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-06-08 21:37:56.921 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-06-08 21:37:56.921 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-06-08 21:37:56.921 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-06-08 21:37:56.921 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-06-08 21:37:56.924 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@270f7b4d] under sinh; prior registration was null
2025-06-08 21:37:56.925 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@56b704ea] under cosh; prior registration was null
2025-06-08 21:37:56.925 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@ab4d2ba] under tanh; prior registration was null
2025-06-08 21:37:56.925 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@39f68aec] under pi; prior registration was null
2025-06-08 21:37:56.925 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65ff4b8c] under log; prior registration was null
2025-06-08 21:37:56.925 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-06-08 21:37:56.925 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-06-08 21:37:56.925 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-06-08 21:37:56.925 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-06-08 21:37:56.925 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-06-08 21:37:56.926 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-06-08 21:37:56.926 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-06-08 21:37:56.926 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-06-08 21:37:56.926 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-06-08 21:37:56.926 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-06-08 21:37:56.926 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-06-08 21:37:56.926 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-06-08 21:37:56.926 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6d842877] under position; prior registration was null
2025-06-08 21:37:56.928 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3856d0cb] under overlay; prior registration was null
2025-06-08 21:37:56.928 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@515c732d] under trim; prior registration was null
2025-06-08 21:37:56.930 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@764db16c] under cast; prior registration was null
2025-06-08 21:37:56.930 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45cb5307] under collate; prior registration was null
2025-06-08 21:37:56.930 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@543d2ef3] under extract; prior registration was null
2025-06-08 21:37:56.930 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-06-08 21:37:56.930 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-06-08 21:37:56.931 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@77a85e76] under ifnull; prior registration was null
2025-06-08 21:37:56.931 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-06-08 21:37:56.931 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-06-08 21:37:56.931 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@36a1fd20] under pad; prior registration was null
2025-06-08 21:37:56.931 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@505a8582] under str; prior registration was null
2025-06-08 21:37:56.933 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@57920d6c] under format; prior registration was null
2025-06-08 21:37:56.934 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6dd2e453] under timestampadd; prior registration was null
2025-06-08 21:37:56.935 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@56e8a8a0] under timestampdiff; prior registration was null
2025-06-08 21:37:56.935 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-06-08 21:37:56.935 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-06-08 21:37:56.935 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7438c3d5] under current_date; prior registration was null
2025-06-08 21:37:56.935 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1fba3fd6] under current_time; prior registration was null
2025-06-08 21:37:56.935 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3aab42d6] under current_timestamp; prior registration was null
2025-06-08 21:37:56.935 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-06-08 21:37:56.935 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-06-08 21:37:56.935 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-06-08 21:37:56.935 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6badb08c] under local_date; prior registration was null
2025-06-08 21:37:56.935 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5939f047] under local_time; prior registration was null
2025-06-08 21:37:56.935 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@17332039] under local_datetime; prior registration was null
2025-06-08 21:37:56.935 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@776e7dfb] under offset_datetime; prior registration was null
2025-06-08 21:37:56.935 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-06-08 21:37:56.935 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-06-08 21:37:56.935 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-06-08 21:37:56.935 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-06-08 21:37:56.935 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@71418a4a] under instant; prior registration was null
2025-06-08 21:37:56.935 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-06-08 21:37:56.936 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@103bcc9f] under sql; prior registration was null
2025-06-08 21:37:56.936 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@106802ea] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-06-08 21:37:56.936 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@785ef70f] under left; prior registration was NamedSqmFunctionTemplate(left)
2025-06-08 21:37:56.936 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3d8bd881] under right; prior registration was NamedSqmFunctionTemplate(right)
2025-06-08 21:37:56.936 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@731ab49b] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-06-08 21:37:56.936 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(length)] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-06-08 21:37:56.936 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-06-08 21:37:56.936 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under least; prior registration was NamedSqmFunctionTemplate(least)
2025-06-08 21:37:56.936 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under greatest; prior registration was NamedSqmFunctionTemplate(greatest)
2025-06-08 21:37:56.936 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-06-08 21:37:56.936 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-06-08 21:37:56.938 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@4544ab46] under trunc; prior registration was null
2025-06-08 21:37:56.938 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-06-08 21:37:56.938 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65ff4b8c
2025-06-08 21:37:56.938 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-06-08 21:37:56.938 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-06-08 21:37:56.938 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-06-08 21:37:56.939 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-06-08 21:37:56.940 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2025-06-08 21:37:56.940 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : chr -> char
2025-06-08 21:37:56.941 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3580134d] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-06-08 21:37:56.941 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@2e19b30] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2025-06-08 21:37:56.941 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7b7e4b20] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2025-06-08 21:37:56.942 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(strftime)] under format; prior registration was org.hibernate.dialect.function.FormatFunction@57920d6c
2025-06-08 21:37:56.942 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-06-08 21:37:56.942 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-06-08 21:37:56.942 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-06-08 21:37:56.942 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-06-08 21:37:56.942 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-06-08 21:37:56.942 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-06-08 21:37:56.943 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@37142579] under listagg; prior registration was null
2025-06-08 21:37:56.946 [main] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg)
2025-06-08 21:37:56.946 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-06-08 21:37:56.947 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2025-06-08 21:37:56.947 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-06-08 21:37:56.947 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-06-08 21:37:56.948 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-06-08 21:37:56.948 [main] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg)
2025-06-08 21:37:56.948 [main] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type)
2025-06-08 21:37:56.948 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-06-08 21:37:56.948 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg)
2025-06-08 21:37:56.948 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-06-08 21:37:56.948 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-06-08 21:37:56.949 [main] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-06-08 21:37:56.949 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-06-08 21:37:56.949 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2025-06-08 21:37:56.949 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-06-08 21:37:56.949 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-06-08 21:37:56.949 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-06-08 21:37:56.949 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date
2025-06-08 21:37:56.949 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time
2025-06-08 21:37:56.949 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp
2025-06-08 21:37:56.949 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date
2025-06-08 21:37:56.949 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant
2025-06-08 21:37:56.949 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time
2025-06-08 21:37:56.949 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp
2025-06-08 21:37:56.949 [main] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-06-08 21:37:56.950 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-06-08 21:37:56.950 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-06-08 21:37:56.950 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2025-06-08 21:37:56.950 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-06-08 21:37:56.950 [main] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-06-08 21:37:56.951 [main] DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value
2025-06-08 21:37:56.951 [main] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg)
2025-06-08 21:37:56.951 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-06-08 21:37:56.951 [main] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-06-08 21:37:56.951 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-06-08 21:37:56.951 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant
2025-06-08 21:37:56.951 [main] DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-06-08 21:37:56.951 [main] DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value
2025-06-08 21:37:56.951 [main] DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-06-08 21:37:56.951 [main] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-06-08 21:37:56.951 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-06-08 21:37:56.951 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-06-08 21:37:56.951 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-06-08 21:37:56.951 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-06-08 21:37:56.951 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date
2025-06-08 21:37:56.952 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime
2025-06-08 21:37:56.952 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time
2025-06-08 21:37:56.952 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date
2025-06-08 21:37:56.952 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime
2025-06-08 21:37:56.952 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time
2025-06-08 21:37:56.952 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(pattern, string[, start])
2025-06-08 21:37:56.952 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-06-08 21:37:56.952 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string)
2025-06-08 21:37:56.952 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding])
2025-06-08 21:37:56.952 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-06-08 21:37:56.953 [main] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg)
2025-06-08 21:37:56.953 [main] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg)
2025-06-08 21:37:56.953 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-06-08 21:37:56.953 [main] DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-06-08 21:37:56.953 [main] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1)
2025-06-08 21:37:56.953 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-06-08 21:37:56.953 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-06-08 21:37:56.953 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2025-06-08 21:37:56.953 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-06-08 21:37:56.953 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi
2025-06-08 21:37:56.953 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-06-08 21:37:56.953 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-06-08 21:37:56.953 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-06-08 21:37:56.954 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-06-08 21:37:56.954 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-06-08 21:37:56.954 [main] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-06-08 21:37:56.954 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number()
2025-06-08 21:37:56.954 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding])
2025-06-08 21:37:56.954 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-06-08 21:37:56.954 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-06-08 21:37:56.954 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-06-08 21:37:56.954 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-06-08 21:37:56.954 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql
2025-06-08 21:37:56.954 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-06-08 21:37:56.954 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg)
2025-06-08 21:37:56.954 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-06-08 21:37:56.954 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-06-08 21:37:56.954 [main] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg)
2025-06-08 21:37:56.954 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-06-08 21:37:56.955 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-06-08 21:37:56.955 [main] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-06-08 21:37:56.955 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-06-08 21:37:56.955 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-06-08 21:37:56.956 [main] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... )
2025-06-08 21:37:56.956 [main] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... )
2025-06-08 21:37:56.956 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string)
2025-06-08 21:37:56.966 [main] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048)
2025-06-08 21:37:57.054 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:37:57.057 [main] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-06-08 21:37:57.136 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.142 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.146 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.146 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.146 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:37:57.146 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:37:57.371 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Factura]: private accessor [cliente]
2025-06-08 21:37:57.379 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.379 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.403 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:37:57.403 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:37:57.430 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Empleado]: private accessor [apellido]
2025-06-08 21:37:57.431 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:37:57.431 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:37:57.448 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Seccion]: private accessor [detalle]
2025-06-08 21:37:57.449 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:37:57.449 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:37:57.478 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Cliente]: private accessor [apellido]
2025-06-08 21:37:57.479 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.479 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.479 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.479 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.479 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:37:57.479 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:37:57.501 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Menu]: private accessor [codPedido]
2025-06-08 21:37:57.502 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.502 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.502 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.503 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.503 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.503 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.503 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.503 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.503 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:37:57.503 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:37:57.517 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido]: private accessor [cantidad]
2025-06-08 21:37:57.517 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.518 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.518 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.519 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.519 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.519 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.519 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.519 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:37:57.519 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:37:57.532 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Producto]: private accessor [categoria]
2025-06-08 21:37:57.532 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.532 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.533 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:37:57.533 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:37:57.545 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Categoria]: private accessor [estado]
2025-06-08 21:37:57.547 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:37:57.547 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:37:57.564 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Mesa]: private accessor [capacidad]
2025-06-08 21:37:57.565 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.565 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.565 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.565 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.565 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.565 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.565 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:37:57.565 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:37:57.586 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Pedido]: private accessor [cantPedidos]
2025-06-08 21:37:57.586 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.587 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.587 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:37:57.618 [main] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks
2025-06-08 21:37:57.618 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente]
2025-06-08 21:37:57.621 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido]
2025-06-08 21:37:57.622 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Factura) `staticFetchableList` generator
2025-06-08 21:37:57.622 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Empleado) `staticFetchableList` generator
2025-06-08 21:37:57.622 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Seccion) `staticFetchableList` generator
2025-06-08 21:37:57.622 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Cliente) `staticFetchableList` generator
2025-06-08 21:37:57.622 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido]
2025-06-08 21:37:57.622 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto]
2025-06-08 21:37:57.623 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Menu) `staticFetchableList` generator
2025-06-08 21:37:57.623 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura]
2025-06-08 21:37:57.623 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido]
2025-06-08 21:37:57.623 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto]
2025-06-08 21:37:57.623 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.DetPedido) `staticFetchableList` generator
2025-06-08 21:37:57.623 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria]
2025-06-08 21:37:57.623 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion]
2025-06-08 21:37:57.623 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Producto) `staticFetchableList` generator
2025-06-08 21:37:57.623 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Categoria) `staticFetchableList` generator
2025-06-08 21:37:57.624 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Mesa) `staticFetchableList` generator
2025-06-08 21:37:57.624 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente]
2025-06-08 21:37:57.624 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado]
2025-06-08 21:37:57.624 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa]
2025-06-08 21:37:57.624 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Pedido) `staticFetchableList` generator
2025-06-08 21:37:57.729 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2025-06-08 21:37:57.732 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Factura)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura] 
2025-06-08 21:37:57.745 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@57ac236a] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente] 
2025-06-08 21:37:57.747 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:37:57.751 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3fc051ce] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido] 
2025-06-08 21:37:57.751 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:37:57.751 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3c5bb37d] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente] 
2025-06-08 21:37:57.751 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:37:57.751 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@558575fe] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado] 
2025-06-08 21:37:57.751 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:37:57.751 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@25fcdcc6] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa] 
2025-06-08 21:37:57.752 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:37:57.759 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.cantVisitas]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.email]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.nombre]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.telefono]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.codigo]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.fechaEmision]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.igv]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.rol]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.telefono]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.subtotal]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.total]

2025-06-08 21:37:57.762 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (f1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura) {
          primaryTableReference : factura as f1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente) {
              primaryTableReference : cliente as c1_0
            }
            left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido) {
              primaryTableReference : pedido as p1_0
              TableGroupJoins {
                left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente) {
                  primaryTableReference : cliente as c2_0
                }
                left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado) {
                  primaryTableReference : empleado as e1_0
                }
                left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa) {
                  primaryTableReference : mesa as m1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:37:57.774 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:37:57.774 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Factura */ select id_factura from factura where id_factura=?
2025-06-08 21:37:57.774 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Factura */insert into factura (id_cliente,codigo,estado,fecha_emision,igv,id_pedido,subtotal,total) values (?,?,?,?,?,?,?,?)
2025-06-08 21:37:57.774 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Factura */update factura set id_cliente=?,codigo=?,estado=?,fecha_emision=?,igv=?,id_pedido=?,subtotal=?,total=? where id_factura=?
2025-06-08 21:37:57.774 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Factura */delete from factura where id_factura=?
2025-06-08 21:37:57.775 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:37:57.775 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:37:57.775 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.rol]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.telefono]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.usuario]

2025-06-08 21:37:57.775 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:37:57.775 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:37:57.775 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Empleado */ select id_empleado from empleado where id_empleado=?
2025-06-08 21:37:57.775 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */insert into empleado (apellido,dni,estado,nombre,password,rol,telefono,usuario) values (?,?,?,?,?,?,?,?)
2025-06-08 21:37:57.775 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */update empleado set apellido=?,dni=?,estado=?,nombre=?,password=?,rol=?,telefono=?,usuario=? where id_empleado=?
2025-06-08 21:37:57.775 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */delete from empleado where id_empleado=?
2025-06-08 21:37:57.776 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:37:57.776 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Seccion)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] 
2025-06-08 21:37:57.776 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Seccion]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion.detalle]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion.estado]

2025-06-08 21:37:57.776 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Seccion) {
          primaryTableReference : seccion as s1_0
        }
      }
    }

2025-06-08 21:37:57.777 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:37:57.778 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Seccion */ select id_seccion from seccion where id_seccion=?
2025-06-08 21:37:57.778 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */insert into seccion (detalle,estado) values (?,?)
2025-06-08 21:37:57.778 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */update seccion set detalle=?,estado=? where id_seccion=?
2025-06-08 21:37:57.778 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */delete from seccion where id_seccion=?
2025-06-08 21:37:57.778 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:37:57.779 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Cliente)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] 
2025-06-08 21:37:57.779 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Cliente]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.cantVisitas]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.email]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.nombre]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.telefono]

2025-06-08 21:37:57.779 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Cliente) {
          primaryTableReference : cliente as c1_0
        }
      }
    }

2025-06-08 21:37:57.780 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:37:57.780 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Cliente */ select id_cliente from cliente where id_cliente=?
2025-06-08 21:37:57.780 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */insert into cliente (apellido,cant_visitas,dni,email,estado,nombre,telefono) values (?,?,?,?,?,?,?)
2025-06-08 21:37:57.780 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */update cliente set apellido=?,cant_visitas=?,dni=?,email=?,estado=?,nombre=?,telefono=? where id_cliente=?
2025-06-08 21:37:57.780 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */delete from cliente where id_cliente=?
2025-06-08 21:37:57.780 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:37:57.780 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Menu)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu] 
2025-06-08 21:37:57.780 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@70f3bf00] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido] 
2025-06-08 21:37:57.780 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:37:57.781 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@49770ef9] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente] 
2025-06-08 21:37:57.781 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:37:57.781 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@15bcecf9] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado] 
2025-06-08 21:37:57.782 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:37:57.782 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4f0cdd0f] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa] 
2025-06-08 21:37:57.782 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m2_0
2025-06-08 21:37:57.782 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@22ea6051] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto] 
2025-06-08 21:37:57.782 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p2_0
2025-06-08 21:37:57.782 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@539bb233] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria] 
2025-06-08 21:37:57.782 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:37:57.782 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@21b2579d] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion] 
2025-06-08 21:37:57.782 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:37:57.783 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.codPedido]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.rol]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.telefono]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.total]
 |  \-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.descripcion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.precio]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion.detalle]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.stock]

2025-06-08 21:37:57.783 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu) {
          primaryTableReference : menu as m1_0
          TableGroupJoins {
            left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido) {
              primaryTableReference : pedido as p1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente) {
                  primaryTableReference : cliente as c1_0
                }
                left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado) {
                  primaryTableReference : empleado as e1_0
                }
                left  join LazyTableGroup (m2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa) {
                  primaryTableReference : mesa as m2_0
                }
              }
            }
            left  join LazyTableGroup (p2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto) {
              primaryTableReference : producto as p2_0
              TableGroupJoins {
                left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria) {
                  primaryTableReference : categoria as c2_0
                }
                left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion) {
                  primaryTableReference : seccion as s1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:37:57.783 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:37:57.784 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Menu */ select id_menu from menu where id_menu=?
2025-06-08 21:37:57.784 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Menu */insert into menu (cod_pedido,id_pedido,id_producto) values (?,?,?)
2025-06-08 21:37:57.784 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Menu */update menu set cod_pedido=?,id_pedido=?,id_producto=? where id_menu=?
2025-06-08 21:37:57.784 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Menu */delete from menu where id_menu=?
2025-06-08 21:37:57.784 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : dp1_0
2025-06-08 21:37:57.784 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.DetPedido)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] 
2025-06-08 21:37:57.784 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@796613b7] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura] 
2025-06-08 21:37:57.784 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2025-06-08 21:37:57.784 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@77622c82] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente] 
2025-06-08 21:37:57.784 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:37:57.784 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@44df834c] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido] 
2025-06-08 21:37:57.784 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:37:57.784 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@34c07ecc] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente] 
2025-06-08 21:37:57.785 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:37:57.785 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7df23848] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado] 
2025-06-08 21:37:57.785 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:37:57.785 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1b120d48] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa] 
2025-06-08 21:37:57.785 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:37:57.785 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@236f3885] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido] 
2025-06-08 21:37:57.787 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p2_0
2025-06-08 21:37:57.787 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@703eead0] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente] 
2025-06-08 21:37:57.787 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c3_0
2025-06-08 21:37:57.787 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@674fd531] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado] 
2025-06-08 21:37:57.787 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e2_0
2025-06-08 21:37:57.787 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7f53b345] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa] 
2025-06-08 21:37:57.787 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m2_0
2025-06-08 21:37:57.788 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@76ee7301] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto] 
2025-06-08 21:37:57.788 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p3_0
2025-06-08 21:37:57.788 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@71817f66] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria] 
2025-06-08 21:37:57.788 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c4_0
2025-06-08 21:37:57.788 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@68feca3a] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion] 
2025-06-08 21:37:57.788 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:37:57.789 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.cantidad]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.estado]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.telefono]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.codigo]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.fechaEmision]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.igv]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cantPedidos]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.apellido]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.cantVisitas]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.dni]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.email]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.estado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.nombre]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.telefono]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.apellido]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.dni]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.estado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.nombre]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.password]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.rol]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.telefono]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.usuario]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.fechaHora]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.capacidad]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.detalle]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.estado]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.numero]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.total]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.subtotal]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.igv]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.rol]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.telefono]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.precioUnitario]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.descripcion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.precio]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion.detalle]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.stock]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.subtotal]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.total]

2025-06-08 21:37:57.790 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (dp1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido) {
          primaryTableReference : detalle_pedido as dp1_0
          TableGroupJoins {
            left  join LazyTableGroup (f1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura) {
              primaryTableReference : factura as f1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente) {
                  primaryTableReference : cliente as c1_0
                }
                left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido) {
                  primaryTableReference : pedido as p1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente) {
                      primaryTableReference : cliente as c2_0
                    }
                    left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado) {
                      primaryTableReference : empleado as e1_0
                    }
                    left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa) {
                      primaryTableReference : mesa as m1_0
                    }
                  }
                }
              }
            }
             join LazyTableGroup (p2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido) {
              primaryTableReference : pedido as p2_0
              TableGroupJoins {
                left  join LazyTableGroup (c3 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente) {
                  primaryTableReference : cliente as c3_0
                }
                left  join LazyTableGroup (e2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado) {
                  primaryTableReference : empleado as e2_0
                }
                left  join LazyTableGroup (m2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa) {
                  primaryTableReference : mesa as m2_0
                }
              }
            }
             join LazyTableGroup (p3 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto) {
              primaryTableReference : producto as p3_0
              TableGroupJoins {
                left  join LazyTableGroup (c4 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria) {
                  primaryTableReference : categoria as c4_0
                }
                left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion) {
                  primaryTableReference : seccion as s1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:37:57.790 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:37:57.791 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */ select id_detalle_pedido from detalle_pedido where id_detalle_pedido=?
2025-06-08 21:37:57.791 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */insert into detalle_pedido (cantidad,estado,id_factura,igv,id_pedido,precio_unitario,id_producto,subtotal,total) values (?,?,?,?,?,?,?,?,?)
2025-06-08 21:37:57.791 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */update detalle_pedido set cantidad=?,estado=?,id_factura=?,igv=?,id_pedido=?,precio_unitario=?,id_producto=?,subtotal=?,total=? where id_detalle_pedido=?
2025-06-08 21:37:57.791 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */delete from detalle_pedido where id_detalle_pedido=?
2025-06-08 21:37:57.791 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:37:57.791 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Producto)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto] 
2025-06-08 21:37:57.791 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@fa689db] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria] 
2025-06-08 21:37:57.791 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:37:57.792 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@75a6bd06] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion] 
2025-06-08 21:37:57.792 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:37:57.792 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.descripcion]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.precio]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion.detalle]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.stock]

2025-06-08 21:37:57.792 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto) {
          primaryTableReference : producto as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria) {
              primaryTableReference : categoria as c1_0
            }
            left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion) {
              primaryTableReference : seccion as s1_0
            }
          }
        }
      }
    }

2025-06-08 21:37:57.792 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:37:57.793 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Producto */ select id_producto from producto where id_producto=?
2025-06-08 21:37:57.793 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Producto */insert into producto (id_categoria,descripcion,estado,nombre,precio,id_seccion,stock) values (?,?,?,?,?,?,?)
2025-06-08 21:37:57.793 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Producto */update producto set id_categoria=?,descripcion=?,estado=?,nombre=?,precio=?,id_seccion=?,stock=? where id_producto=?
2025-06-08 21:37:57.793 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Producto */delete from producto where id_producto=?
2025-06-08 21:37:57.793 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:37:57.793 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Categoria)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] 
2025-06-08 21:37:57.793 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Categoria]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Categoria.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Categoria.nombre]

2025-06-08 21:37:57.793 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Categoria) {
          primaryTableReference : categoria as c1_0
        }
      }
    }

2025-06-08 21:37:57.794 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:37:57.794 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Categoria */ select id_categoria from categoria where id_categoria=?
2025-06-08 21:37:57.794 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */insert into categoria (estado,nombre) values (?,?)
2025-06-08 21:37:57.794 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */update categoria set estado=?,nombre=? where id_categoria=?
2025-06-08 21:37:57.794 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */delete from categoria where id_categoria=?
2025-06-08 21:37:57.794 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:37:57.794 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Mesa)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] 
2025-06-08 21:37:57.794 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Mesa]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.capacidad]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.detalle]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.numero]

2025-06-08 21:37:57.794 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Mesa) {
          primaryTableReference : mesa as m1_0
        }
      }
    }

2025-06-08 21:37:57.794 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:37:57.794 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Mesa */ select id_mesa from mesa where id_mesa=?
2025-06-08 21:37:57.794 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */insert into mesa (capacidad,detalle,estado,numero) values (?,?,?,?)
2025-06-08 21:37:57.794 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */update mesa set capacidad=?,detalle=?,estado=?,numero=? where id_mesa=?
2025-06-08 21:37:57.795 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */delete from mesa where id_mesa=?
2025-06-08 21:37:57.795 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:37:57.795 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Pedido)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] 
2025-06-08 21:37:57.795 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3696d12d] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente] 
2025-06-08 21:37:57.795 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:37:57.795 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@656672fb] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado] 
2025-06-08 21:37:57.795 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:37:57.795 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@75df4b1d] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa] 
2025-06-08 21:37:57.795 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:37:57.796 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cantPedidos]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.cantVisitas]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.email]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.nombre]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.telefono]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.password]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.rol]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.telefono]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.usuario]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.fechaHora]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.capacidad]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.detalle]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.numero]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.total]

2025-06-08 21:37:57.796 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido) {
          primaryTableReference : pedido as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente) {
              primaryTableReference : cliente as c1_0
            }
            left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado) {
              primaryTableReference : empleado as e1_0
            }
            left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa) {
              primaryTableReference : mesa as m1_0
            }
          }
        }
      }
    }

2025-06-08 21:37:57.796 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:37:57.796 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Pedido */ select id_pedido from pedido where id_pedido=?
2025-06-08 21:37:57.796 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */insert into pedido (cant_pedidos,id_cliente,id_empleado,estado,fecha_hora,id_mesa,total) values (?,?,?,?,?,?,?)
2025-06-08 21:37:57.796 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */update pedido set cant_pedidos=?,id_cliente=?,id_empleado=?,estado=?,fecha_hora=?,id_mesa=?,total=? where id_pedido=?
2025-06-08 21:37:57.796 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */delete from pedido where id_pedido=?
2025-06-08 21:37:57.831 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-08 21:37:57.832 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@52b32b70] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5b407336]
2025-06-08 21:37:57.833 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries
2025-06-08 21:37:57.833 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries
2025-06-08 21:37:57.883 [main] DEBUG org.hibernate.mapping.Table - No alter strings for table : categoria
2025-06-08 21:37:57.884 [main] DEBUG org.hibernate.mapping.Table - No alter strings for table : cliente
2025-06-08 21:37:57.884 [main] DEBUG org.hibernate.mapping.Table - No alter strings for table : detalle_pedido
2025-06-08 21:37:57.889 [main] DEBUG org.hibernate.SQL - 
    alter table empleado 
       add column apellido varchar(100) not null
2025-06-08 21:37:57.894 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table empleado 
       add column apellido varchar(100) not null" via JDBC [[SQLITE_ERROR] SQL error or missing database (Cannot add a NOT NULL column with default value NULL)]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table empleado 
       add column apellido varchar(100) not null" via JDBC [[SQLITE_ERROR] SQL error or missing database (Cannot add a NOT NULL column with default value NULL)]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1430)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1462)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:155)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:111)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1709)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:194)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (Cannot add a NOT NULL column with default value NULL)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:988)
	at org.sqlite.core.CoreStatement.exec(CoreStatement.java:91)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:43)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 121 common frames omitted
2025-06-08 21:37:57.904 [main] DEBUG org.hibernate.SQL - 
    alter table empleado 
       add column dni varchar(8) not null unique
2025-06-08 21:37:57.905 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table empleado 
       add column dni varchar(8) not null unique" via JDBC [[SQLITE_ERROR] SQL error or missing database (Cannot add a UNIQUE column)]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table empleado 
       add column dni varchar(8) not null unique" via JDBC [[SQLITE_ERROR] SQL error or missing database (Cannot add a UNIQUE column)]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1430)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1462)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:155)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:111)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1709)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:194)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (Cannot add a UNIQUE column)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:132)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:54)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:43)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 121 common frames omitted
2025-06-08 21:37:57.909 [main] DEBUG org.hibernate.mapping.Table - No alter strings for table : factura
2025-06-08 21:37:57.909 [main] DEBUG org.hibernate.mapping.Table - No alter strings for table : menu
2025-06-08 21:37:57.910 [main] DEBUG org.hibernate.mapping.Table - No alter strings for table : mesa
2025-06-08 21:37:57.910 [main] DEBUG org.hibernate.mapping.Table - No alter strings for table : pedido
2025-06-08 21:37:57.910 [main] DEBUG org.hibernate.mapping.Table - No alter strings for table : producto
2025-06-08 21:37:57.910 [main] DEBUG org.hibernate.mapping.Table - No alter strings for table : seccion
2025-06-08 21:37:57.915 [main] DEBUG org.hibernate.SQL - 
    alter table empleado 
       drop constraint UKanilfn0t89ht43r8n8lthr5b6
2025-06-08 21:37:57.918 [main] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1e2c0292
2025-06-08 21:37:57.918 [main] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 6b212881-e79e-43ad-885a-944368ed36e3 (<unnamed>)
2025-06-08 21:37:57.918 [main] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-06-08 21:37:57.918 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory
2025-06-08 21:37:57.918 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-08 21:37:58.140 [main] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2025-06-08 21:37:58.510 [main] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy111.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1462)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:155)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:111)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1709)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:194)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
2025-06-08 21:37:58.548 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-08 21:37:58.553 [main] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy111.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1462)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:155)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:111)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1709)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:194)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
2025-06-08 21:37:58.558 [main] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy111.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:147)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1462)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:155)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:111)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1709)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:194)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
2025-06-08 21:37:58.840 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:37:58.843 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-06-08 21:37:58.844 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-06-08 21:37:58.846 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:37:58.846 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-06-08 21:37:58.846 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:37:58.846 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:37:58.846 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:37:58.846 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:37:58.846 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:37:58.848 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:37:58.848 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:37:58.848 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:37:58.849 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:37:58.849 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:37:58.849 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:37:59.117 [main] INFO  p.e.u.p.ProyectoRestaurantApplicationTests - Started ProyectoRestaurantApplicationTests in 6.744 seconds (process running for 8.314)
2025-06-08 21:37:59.822 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-08 21:37:59.823 [SpringApplicationShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing
2025-06-08 21:37:59.824 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@525bbfdb] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5b407336]
2025-06-08 21:37:59.824 [SpringApplicationShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2025-06-08 21:37:59.826 [SpringApplicationShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2025-06-08 21:37:59.829 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-08 21:37:59.835 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-08 21:39:48.552 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:39:48.557 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:39:48.558 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:39:48.559 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:39:48.569 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:39:48.571 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:39:48.612 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:39:48.853 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:39:48.866 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:39:48.866 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:39:48.867 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:39:48.867 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:39:48.868 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:39:48.977 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - Starting application using Java 23.0.2 with PID 12464 (started by USUARIO in C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant)
2025-06-08 21:39:48.980 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-08 21:39:50.284 [JavaFX-Launcher] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-08 21:39:50.449 [JavaFX-Launcher] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 149 ms. Found 10 JPA repository interfaces.
2025-06-08 21:39:51.092 [JavaFX-Launcher] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@506e1b77
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/USUARIO/Documents/ProyectoRestaurantJava/ProyectoRestaurant/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		pe.edu.upeu.proyecto_restaurant.modulo.Categoria
		pe.edu.upeu.proyecto_restaurant.modulo.Cliente
		pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
		pe.edu.upeu.proyecto_restaurant.modulo.Empleado
		pe.edu.upeu.proyecto_restaurant.modulo.Factura
		pe.edu.upeu.proyecto_restaurant.modulo.Menu
		pe.edu.upeu.proyecto_restaurant.modulo.Mesa
		pe.edu.upeu.proyecto_restaurant.modulo.Pedido
		pe.edu.upeu.proyecto_restaurant.modulo.Producto
		pe.edu.upeu.proyecto_restaurant.modulo.Seccion]
	Mapping files names []
	Properties []
2025-06-08 21:39:51.107 [JavaFX-Launcher] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-06-08 21:39:51.110 [JavaFX-Launcher] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-06-08 21:39:51.206 [JavaFX-Launcher] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-08 21:39:51.208 [JavaFX-Launcher] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found
2025-06-08 21:39:51.244 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-06-08 21:39:51.245 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-06-08 21:39:51.246 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:39:51.246 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:39:51.247 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-06-08 21:39:51.248 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-06-08 21:39:51.249 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-06-08 21:39:51.252 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:39:51.253 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-06-08 21:39:51.255 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-06-08 21:39:51.255 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:39:51.257 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-06-08 21:39:51.271 [JavaFX-Launcher] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-06-08 21:39:51.274 [JavaFX-Launcher] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-08 21:39:51.397 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5813f688
2025-06-08 21:39:51.398 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5813f688
2025-06-08 21:39:51.398 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5813f688
2025-06-08 21:39:51.398 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@44e26d96
2025-06-08 21:39:51.398 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@44e26d96
2025-06-08 21:39:51.398 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4a252383
2025-06-08 21:39:51.398 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4a252383
2025-06-08 21:39:51.398 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@725120d4
2025-06-08 21:39:51.398 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@725120d4
2025-06-08 21:39:51.398 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@35b12fa0
2025-06-08 21:39:51.398 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@35b12fa0
2025-06-08 21:39:51.399 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@35b12fa0
2025-06-08 21:39:51.399 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@62e86a5d
2025-06-08 21:39:51.399 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@62e86a5d
2025-06-08 21:39:51.399 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@62e86a5d
2025-06-08 21:39:51.399 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1b264b8
2025-06-08 21:39:51.399 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1b264b8
2025-06-08 21:39:51.399 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@7a9eb3da
2025-06-08 21:39:51.399 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@466e5f06
2025-06-08 21:39:51.400 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@466e5f06
2025-06-08 21:39:51.400 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@67f56f14
2025-06-08 21:39:51.400 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@75f050f6
2025-06-08 21:39:51.400 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7a7f2df1
2025-06-08 21:39:51.400 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7a7f2df1
2025-06-08 21:39:51.400 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7a7f2df1
2025-06-08 21:39:51.401 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4edddbd7
2025-06-08 21:39:51.401 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4edddbd7
2025-06-08 21:39:51.401 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4edddbd7
2025-06-08 21:39:51.402 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@29c90d7
2025-06-08 21:39:51.402 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@29c90d7
2025-06-08 21:39:51.402 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@29c90d7
2025-06-08 21:39:51.402 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@759c1792
2025-06-08 21:39:51.402 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@759c1792
2025-06-08 21:39:51.402 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@759c1792
2025-06-08 21:39:51.402 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@760fbc75
2025-06-08 21:39:51.403 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@760fbc75
2025-06-08 21:39:51.403 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@760fbc75
2025-06-08 21:39:51.403 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@56acd200
2025-06-08 21:39:51.403 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@56acd200
2025-06-08 21:39:51.403 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@30d0fa2a
2025-06-08 21:39:51.404 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@30d0fa2a
2025-06-08 21:39:51.405 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@25e54b25
2025-06-08 21:39:51.405 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@25e54b25
2025-06-08 21:39:51.406 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@25e54b25
2025-06-08 21:39:51.406 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2e02a7f8
2025-06-08 21:39:51.406 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1e8e5cea
2025-06-08 21:39:51.407 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1e8e5cea
2025-06-08 21:39:51.407 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@29b8f4bb
2025-06-08 21:39:51.407 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@268b2eca
2025-06-08 21:39:51.407 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@268b2eca
2025-06-08 21:39:51.408 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@268b2eca
2025-06-08 21:39:51.408 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1d0d6084
2025-06-08 21:39:51.409 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@710806c3
2025-06-08 21:39:51.409 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1ffb3975
2025-06-08 21:39:51.409 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@60f9a93e
2025-06-08 21:39:51.409 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@60f9a93e
2025-06-08 21:39:51.410 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1686ece5
2025-06-08 21:39:51.410 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1686ece5
2025-06-08 21:39:51.410 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2789cee8
2025-06-08 21:39:51.410 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@61ff6bfd
2025-06-08 21:39:51.411 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4ce28ea5
2025-06-08 21:39:51.411 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6d22b218
2025-06-08 21:39:51.411 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4b5dfda
2025-06-08 21:39:51.412 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1e8fec32
2025-06-08 21:39:51.412 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@46c0dee0
2025-06-08 21:39:51.413 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@46c0dee0
2025-06-08 21:39:51.413 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3e8a0652
2025-06-08 21:39:51.413 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3e8a0652
2025-06-08 21:39:51.414 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@14eb4556
2025-06-08 21:39:51.414 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@14eb4556
2025-06-08 21:39:51.414 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7564d585
2025-06-08 21:39:51.414 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7564d585
2025-06-08 21:39:51.415 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@35933217
2025-06-08 21:39:51.415 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@35933217
2025-06-08 21:39:51.415 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5b450a61
2025-06-08 21:39:51.415 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@15ca25aa
2025-06-08 21:39:51.415 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4651026b
2025-06-08 21:39:51.415 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4651026b
2025-06-08 21:39:51.416 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6a7e933c
2025-06-08 21:39:51.416 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@199b9a10
2025-06-08 21:39:51.416 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5db80bfc
2025-06-08 21:39:51.416 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@13b4087a
2025-06-08 21:39:51.416 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@13b4087a
2025-06-08 21:39:51.417 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@d4d8e43
2025-06-08 21:39:51.417 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@48c3cee0
2025-06-08 21:39:51.417 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5539cbef
2025-06-08 21:39:51.417 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5539cbef
2025-06-08 21:39:51.417 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@66fdeeea
2025-06-08 21:39:51.418 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@66fdeeea
2025-06-08 21:39:51.418 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7234be0
2025-06-08 21:39:51.419 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7234be0
2025-06-08 21:39:51.420 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7234be0
2025-06-08 21:39:51.421 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@51c1212a
2025-06-08 21:39:51.421 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@51c1212a
2025-06-08 21:39:51.422 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@51c1212a
2025-06-08 21:39:51.423 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4a3cee4e
2025-06-08 21:39:51.423 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5edefc91
2025-06-08 21:39:51.423 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@6ce4e11
2025-06-08 21:39:51.423 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6ce4e11
2025-06-08 21:39:51.424 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2b2d8e18
2025-06-08 21:39:51.424 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2b2d8e18
2025-06-08 21:39:51.424 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2b2d8e18
2025-06-08 21:39:51.424 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@16b5151b
2025-06-08 21:39:51.424 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3f265928
2025-06-08 21:39:51.424 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4b6c361b
2025-06-08 21:39:51.425 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4b6c361b
2025-06-08 21:39:51.425 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@c762c20
2025-06-08 21:39:51.425 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@c762c20
2025-06-08 21:39:51.425 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@c762c20
2025-06-08 21:39:51.425 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@32d5fd78
2025-06-08 21:39:51.425 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@32d5fd78
2025-06-08 21:39:51.425 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3fb71d13
2025-06-08 21:39:51.425 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3fb71d13
2025-06-08 21:39:51.426 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@15412810
2025-06-08 21:39:51.426 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@15412810
2025-06-08 21:39:51.426 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@28eb11b4
2025-06-08 21:39:51.426 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@28eb11b4
2025-06-08 21:39:51.426 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@35c807ec
2025-06-08 21:39:51.426 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@35c807ec
2025-06-08 21:39:51.427 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3210cbc3
2025-06-08 21:39:51.427 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@2e0d6439
2025-06-08 21:39:51.427 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@5e9bb6fd
2025-06-08 21:39:51.427 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@2b993da5
2025-06-08 21:39:51.427 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1f63a5c6
2025-06-08 21:39:51.433 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@79e18794
2025-06-08 21:39:51.433 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@79e18794
2025-06-08 21:39:51.436 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5f9655b6
2025-06-08 21:39:51.437 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4bb06c5
2025-06-08 21:39:51.438 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@29579c79
2025-06-08 21:39:51.438 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@42a18d1c
2025-06-08 21:39:51.438 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2ff74b1b
2025-06-08 21:39:51.438 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7326fd0e
2025-06-08 21:39:51.439 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@66070347
2025-06-08 21:39:51.439 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2800abf6
2025-06-08 21:39:51.439 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3dba827e
2025-06-08 21:39:51.447 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@b1aff84] into BootstrapContext; was [null]
2025-06-08 21:39:51.447 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@b1aff84) [was null]
2025-06-08 21:39:51.448 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@da629e0] into BootstrapContext; was [null]
2025-06-08 21:39:51.448 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4be11a8d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5d6208d]
2025-06-08 21:39:51.478 [JavaFX-Launcher] DEBUG o.h.j.b.i.PersistenceUnitInfoDescriptor - Pushing class transformers for PU named 'default' on loading classloader jdk.internal.loader.ClassLoaders$AppClassLoader@506e1b77
2025-06-08 21:39:51.790 [JavaFX-Launcher] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-08 21:39:51.790 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@b1aff84]
2025-06-08 21:39:51.791 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@b1aff84]
2025-06-08 21:39:51.858 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-08 21:39:52.023 [JavaFX-Launcher] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@5a52ebe9
2025-06-08 21:39:52.026 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-08 21:39:52.040 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : SQLite
	version : 3.46.0
	  major : 3
	  minor : 46
2025-06-08 21:39:52.040 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : SQLite JDBC
	version : 3.46.0.0
	  major : 3
	  minor : 46
2025-06-08 21:39:52.041 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2
2025-06-08 21:39:52.070 [JavaFX-Launcher] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.community.dialect.SQLiteDialect, version: 3.46
2025-06-08 21:39:52.074 [JavaFX-Launcher] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-06-08 21:39:52.075 [JavaFX-Launcher] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2025-06-08 21:39:52.090 [JavaFX-Launcher] DEBUG org.hibernate.orm.jdbc.lob - HHH10010005: Disabling contextual LOB creation as createClob() method threw error : java.sql.SQLFeatureNotSupportedException
2025-06-08 21:39:52.095 [JavaFX-Launcher] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 3.46
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-08 21:39:52.121 [JavaFX-Launcher] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(PRIMITIVE_ARRAY_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-06-08 21:39:52.122 [JavaFX-Launcher] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STRING_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-08 21:39:52.128 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-06-08 21:39:52.129 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:39:52.129 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:39:52.133 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:39:52.134 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:39:52.134 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:39:52.134 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:39:52.134 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:39:52.134 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:39:52.135 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:39:52.135 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:39:52.135 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:39:52.138 [JavaFX-Launcher] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5042011f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6021384f]
2025-06-08 21:39:52.189 [JavaFX-Launcher] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-06-08 21:39:52.231 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:39:52.244 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Categoria
2025-06-08 21:39:52.258 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Categoria on table categoria
2025-06-08 21:39:52.279 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:39:52.312 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_categoria')
2025-06-08 21:39:52.314 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:39:52.314 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:39:52.323 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCategoria with lazy=false
2025-06-08 21:39:52.328 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:idCategoria]
2025-06-08 21:39:52.335 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCategoria
2025-06-08 21:39:52.340 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.id_categoria
2025-06-08 21:39:52.341 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCategoria
2025-06-08 21:39:52.347 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_categoria)]), idCategoria, identity, , ...)
2025-06-08 21:39:52.349 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:39:52.349 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:39:52.350 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:estado]
2025-06-08 21:39:52.350 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:39:52.350 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.estado
2025-06-08 21:39:52.350 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:39:52.351 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:39:52.352 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:39:52.353 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:nombre]
2025-06-08 21:39:52.353 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:39:52.354 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.nombre
2025-06-08 21:39:52.354 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:39:52.358 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:39:52.366 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:39:52.368 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Cliente
2025-06-08 21:39:52.368 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Cliente on table cliente
2025-06-08 21:39:52.369 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:39:52.373 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_cliente')
2025-06-08 21:39:52.374 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:39:52.375 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:39:52.376 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCliente with lazy=false
2025-06-08 21:39:52.376 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:idCliente]
2025-06-08 21:39:52.377 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCliente
2025-06-08 21:39:52.377 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.id_cliente
2025-06-08 21:39:52.377 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCliente
2025-06-08 21:39:52.378 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_cliente)]), idCliente, identity, , ...)
2025-06-08 21:39:52.378 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='apellido')
2025-06-08 21:39:52.379 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property apellido with lazy=false
2025-06-08 21:39:52.379 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:apellido]
2025-06-08 21:39:52.379 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for apellido
2025-06-08 21:39:52.379 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.apellido
2025-06-08 21:39:52.379 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property apellido
2025-06-08 21:39:52.380 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cant_visitas')
2025-06-08 21:39:52.381 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantVisitas with lazy=false
2025-06-08 21:39:52.381 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:cantVisitas]
2025-06-08 21:39:52.382 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantVisitas
2025-06-08 21:39:52.382 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.cant_visitas
2025-06-08 21:39:52.383 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantVisitas
2025-06-08 21:39:52.388 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='dni')
2025-06-08 21:39:52.389 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property dni with lazy=false
2025-06-08 21:39:52.389 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:dni]
2025-06-08 21:39:52.390 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for dni
2025-06-08 21:39:52.391 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.dni
2025-06-08 21:39:52.391 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property dni
2025-06-08 21:39:52.392 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
2025-06-08 21:39:52.393 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-06-08 21:39:52.393 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:email]
2025-06-08 21:39:52.393 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email
2025-06-08 21:39:52.393 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.email
2025-06-08 21:39:52.394 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property email
2025-06-08 21:39:52.394 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:39:52.395 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:39:52.395 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:estado]
2025-06-08 21:39:52.395 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:39:52.396 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.estado
2025-06-08 21:39:52.396 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:39:52.397 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:39:52.397 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:39:52.398 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:nombre]
2025-06-08 21:39:52.398 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:39:52.398 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.nombre
2025-06-08 21:39:52.398 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:39:52.399 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='telefono')
2025-06-08 21:39:52.399 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property telefono with lazy=false
2025-06-08 21:39:52.399 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:telefono]
2025-06-08 21:39:52.399 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for telefono
2025-06-08 21:39:52.399 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.telefono
2025-06-08 21:39:52.400 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property telefono
2025-06-08 21:39:52.400 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:39:52.401 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:39:52.402 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name DetPedido
2025-06-08 21:39:52.403 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.DetPedido on table detalle_pedido
2025-06-08 21:39:52.404 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:39:52.414 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_detalle_pedido')
2025-06-08 21:39:52.415 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:39:52.415 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:39:52.416 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idDetallePedido with lazy=false
2025-06-08 21:39:52.416 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:idDetallePedido]
2025-06-08 21:39:52.417 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idDetallePedido
2025-06-08 21:39:52.417 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.id_detalle_pedido
2025-06-08 21:39:52.418 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idDetallePedido
2025-06-08 21:39:52.418 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_detalle_pedido)]), idDetallePedido, identity, , ...)
2025-06-08 21:39:52.419 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cantidad')
2025-06-08 21:39:52.420 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantidad with lazy=false
2025-06-08 21:39:52.421 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:cantidad]
2025-06-08 21:39:52.421 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantidad
2025-06-08 21:39:52.422 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.cantidad
2025-06-08 21:39:52.422 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantidad
2025-06-08 21:39:52.423 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:39:52.424 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:39:52.424 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:estado]
2025-06-08 21:39:52.425 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:39:52.425 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.estado
2025-06-08 21:39:52.425 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:39:52.428 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_factura',referencedColumn='id_factura')
2025-06-08 21:39:52.432 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:39:52.440 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property factura
2025-06-08 21:39:52.441 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='igv')
2025-06-08 21:39:52.442 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property igv with lazy=false
2025-06-08 21:39:52.442 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:igv]
2025-06-08 21:39:52.442 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for igv
2025-06-08 21:39:52.443 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.igv
2025-06-08 21:39:52.443 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property igv
2025-06-08 21:39:52.443 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:39:52.444 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:39:52.445 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:39:52.445 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio_unitario')
2025-06-08 21:39:52.446 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precioUnitario with lazy=false
2025-06-08 21:39:52.446 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:precioUnitario]
2025-06-08 21:39:52.446 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precioUnitario
2025-06-08 21:39:52.446 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.precio_unitario
2025-06-08 21:39:52.447 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property precioUnitario
2025-06-08 21:39:52.447 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_producto',referencedColumn='id_producto')
2025-06-08 21:39:52.448 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:39:52.448 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property producto
2025-06-08 21:39:52.448 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='subtotal')
2025-06-08 21:39:52.449 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property subtotal with lazy=false
2025-06-08 21:39:52.449 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:subtotal]
2025-06-08 21:39:52.449 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for subtotal
2025-06-08 21:39:52.450 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.subtotal
2025-06-08 21:39:52.450 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property subtotal
2025-06-08 21:39:52.450 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:39:52.451 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:39:52.451 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:total]
2025-06-08 21:39:52.451 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:39:52.452 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.total
2025-06-08 21:39:52.452 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:39:52.454 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:39:52.455 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:39:52.456 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Empleado
2025-06-08 21:39:52.456 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Empleado on table empleado
2025-06-08 21:39:52.457 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:39:52.459 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_empleado')
2025-06-08 21:39:52.460 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:39:52.460 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:39:52.460 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-06-08 21:39:52.461 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:id]
2025-06-08 21:39:52.461 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id
2025-06-08 21:39:52.461 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.id_empleado
2025-06-08 21:39:52.461 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property id
2025-06-08 21:39:52.462 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_empleado)]), id, identity, , ...)
2025-06-08 21:39:52.462 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='apellido')
2025-06-08 21:39:52.463 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property apellido with lazy=false
2025-06-08 21:39:52.463 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:apellido]
2025-06-08 21:39:52.463 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for apellido
2025-06-08 21:39:52.463 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.apellido
2025-06-08 21:39:52.464 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property apellido
2025-06-08 21:39:52.464 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='dni')
2025-06-08 21:39:52.465 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property dni with lazy=false
2025-06-08 21:39:52.465 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:dni]
2025-06-08 21:39:52.465 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for dni
2025-06-08 21:39:52.465 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.dni
2025-06-08 21:39:52.465 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property dni
2025-06-08 21:39:52.465 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:39:52.466 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:39:52.466 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:estado]
2025-06-08 21:39:52.466 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:39:52.466 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.estado
2025-06-08 21:39:52.466 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:39:52.467 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:39:52.467 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:39:52.468 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:nombre]
2025-06-08 21:39:52.468 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:39:52.468 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.nombre
2025-06-08 21:39:52.468 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:39:52.469 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password')
2025-06-08 21:39:52.470 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-06-08 21:39:52.470 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:password]
2025-06-08 21:39:52.471 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password
2025-06-08 21:39:52.471 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.password
2025-06-08 21:39:52.471 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property password
2025-06-08 21:39:52.472 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='rol')
2025-06-08 21:39:52.473 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property rol with lazy=false
2025-06-08 21:39:52.473 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:rol]
2025-06-08 21:39:52.473 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for rol
2025-06-08 21:39:52.473 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.rol
2025-06-08 21:39:52.474 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property rol
2025-06-08 21:39:52.474 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='telefono')
2025-06-08 21:39:52.475 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property telefono with lazy=false
2025-06-08 21:39:52.475 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:telefono]
2025-06-08 21:39:52.475 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for telefono
2025-06-08 21:39:52.476 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.telefono
2025-06-08 21:39:52.476 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property telefono
2025-06-08 21:39:52.477 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='usuario')
2025-06-08 21:39:52.477 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property usuario with lazy=false
2025-06-08 21:39:52.477 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:usuario]
2025-06-08 21:39:52.477 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for usuario
2025-06-08 21:39:52.478 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.usuario
2025-06-08 21:39:52.479 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property usuario
2025-06-08 21:39:52.480 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:39:52.480 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:39:52.480 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Factura
2025-06-08 21:39:52.481 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Factura on table factura
2025-06-08 21:39:52.481 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:39:52.486 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_factura')
2025-06-08 21:39:52.488 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:39:52.488 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:39:52.488 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idFactura with lazy=false
2025-06-08 21:39:52.488 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:idFactura]
2025-06-08 21:39:52.488 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idFactura
2025-06-08 21:39:52.488 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.id_factura
2025-06-08 21:39:52.489 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idFactura
2025-06-08 21:39:52.489 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_factura)]), idFactura, identity, , ...)
2025-06-08 21:39:52.489 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_cliente',referencedColumn='id_cliente')
2025-06-08 21:39:52.489 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:39:52.491 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cliente
2025-06-08 21:39:52.491 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='codigo')
2025-06-08 21:39:52.491 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codigo with lazy=false
2025-06-08 21:39:52.492 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:codigo]
2025-06-08 21:39:52.492 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codigo
2025-06-08 21:39:52.492 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.codigo
2025-06-08 21:39:52.492 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property codigo
2025-06-08 21:39:52.492 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:39:52.493 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:39:52.493 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:estado]
2025-06-08 21:39:52.493 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:39:52.493 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.estado
2025-06-08 21:39:52.493 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:39:52.493 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fecha_emision')
2025-06-08 21:39:52.494 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaEmision with lazy=false
2025-06-08 21:39:52.494 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:fechaEmision]
2025-06-08 21:39:52.494 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaEmision
2025-06-08 21:39:52.494 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.fecha_emision
2025-06-08 21:39:52.494 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaEmision
2025-06-08 21:39:52.495 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='igv')
2025-06-08 21:39:52.495 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property igv with lazy=false
2025-06-08 21:39:52.495 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:igv]
2025-06-08 21:39:52.495 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for igv
2025-06-08 21:39:52.495 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.igv
2025-06-08 21:39:52.496 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property igv
2025-06-08 21:39:52.496 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:39:52.497 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:39:52.497 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:39:52.497 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='subtotal')
2025-06-08 21:39:52.498 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property subtotal with lazy=false
2025-06-08 21:39:52.498 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:subtotal]
2025-06-08 21:39:52.498 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for subtotal
2025-06-08 21:39:52.498 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.subtotal
2025-06-08 21:39:52.498 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property subtotal
2025-06-08 21:39:52.499 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:39:52.499 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:39:52.499 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:total]
2025-06-08 21:39:52.499 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:39:52.499 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.total
2025-06-08 21:39:52.499 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:39:52.500 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:39:52.501 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:39:52.501 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Menu
2025-06-08 21:39:52.501 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Menu on table menu
2025-06-08 21:39:52.502 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:39:52.504 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_menu')
2025-06-08 21:39:52.504 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:39:52.505 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:39:52.505 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idMenu with lazy=false
2025-06-08 21:39:52.505 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Menu:idMenu]
2025-06-08 21:39:52.505 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idMenu
2025-06-08 21:39:52.505 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: menu.id_menu
2025-06-08 21:39:52.505 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idMenu
2025-06-08 21:39:52.506 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_menu)]), idMenu, identity, , ...)
2025-06-08 21:39:52.506 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cod_pedido')
2025-06-08 21:39:52.506 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codPedido with lazy=false
2025-06-08 21:39:52.506 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Menu:codPedido]
2025-06-08 21:39:52.506 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codPedido
2025-06-08 21:39:52.507 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: menu.cod_pedido
2025-06-08 21:39:52.507 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property codPedido
2025-06-08 21:39:52.507 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:39:52.507 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:39:52.508 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:39:52.508 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_producto',referencedColumn='id_producto')
2025-06-08 21:39:52.509 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:39:52.509 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property producto
2025-06-08 21:39:52.510 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:39:52.511 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:39:52.512 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Mesa
2025-06-08 21:39:52.512 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Mesa on table mesa
2025-06-08 21:39:52.513 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:39:52.515 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_mesa')
2025-06-08 21:39:52.516 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:39:52.516 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:39:52.516 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idMesa with lazy=false
2025-06-08 21:39:52.516 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:idMesa]
2025-06-08 21:39:52.516 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idMesa
2025-06-08 21:39:52.517 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.id_mesa
2025-06-08 21:39:52.517 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idMesa
2025-06-08 21:39:52.517 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_mesa)]), idMesa, identity, , ...)
2025-06-08 21:39:52.518 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='capacidad')
2025-06-08 21:39:52.518 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property capacidad with lazy=false
2025-06-08 21:39:52.518 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:capacidad]
2025-06-08 21:39:52.518 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for capacidad
2025-06-08 21:39:52.519 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.capacidad
2025-06-08 21:39:52.519 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property capacidad
2025-06-08 21:39:52.519 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='detalle')
2025-06-08 21:39:52.521 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property detalle with lazy=false
2025-06-08 21:39:52.521 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:detalle]
2025-06-08 21:39:52.522 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for detalle
2025-06-08 21:39:52.522 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.detalle
2025-06-08 21:39:52.523 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property detalle
2025-06-08 21:39:52.524 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:39:52.524 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:39:52.524 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:estado]
2025-06-08 21:39:52.524 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:39:52.524 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.estado
2025-06-08 21:39:52.525 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:39:52.525 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='numero')
2025-06-08 21:39:52.525 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property numero with lazy=false
2025-06-08 21:39:52.526 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:numero]
2025-06-08 21:39:52.526 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for numero
2025-06-08 21:39:52.526 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.numero
2025-06-08 21:39:52.526 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property numero
2025-06-08 21:39:52.528 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:39:52.529 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:39:52.529 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Pedido
2025-06-08 21:39:52.529 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Pedido on table pedido
2025-06-08 21:39:52.529 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:39:52.532 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_pedido')
2025-06-08 21:39:52.532 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:39:52.532 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:39:52.532 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idPedido with lazy=false
2025-06-08 21:39:52.532 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:idPedido]
2025-06-08 21:39:52.532 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idPedido
2025-06-08 21:39:52.532 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.id_pedido
2025-06-08 21:39:52.532 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idPedido
2025-06-08 21:39:52.532 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_pedido)]), idPedido, identity, , ...)
2025-06-08 21:39:52.533 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cant_pedidos')
2025-06-08 21:39:52.533 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantPedidos with lazy=false
2025-06-08 21:39:52.533 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:cantPedidos]
2025-06-08 21:39:52.533 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantPedidos
2025-06-08 21:39:52.533 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.cant_pedidos
2025-06-08 21:39:52.533 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantPedidos
2025-06-08 21:39:52.534 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_cliente',referencedColumn='id_cliente')
2025-06-08 21:39:52.534 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:39:52.534 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cliente
2025-06-08 21:39:52.534 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_empleado',referencedColumn='id_empleado')
2025-06-08 21:39:52.535 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:39:52.535 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property empleado
2025-06-08 21:39:52.535 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:39:52.535 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:39:52.535 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:estado]
2025-06-08 21:39:52.535 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:39:52.535 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.estado
2025-06-08 21:39:52.535 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:39:52.536 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fecha_hora')
2025-06-08 21:39:52.536 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaHora with lazy=false
2025-06-08 21:39:52.536 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:fechaHora]
2025-06-08 21:39:52.536 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaHora
2025-06-08 21:39:52.536 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.fecha_hora
2025-06-08 21:39:52.537 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaHora
2025-06-08 21:39:52.537 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_mesa',referencedColumn='id_mesa')
2025-06-08 21:39:52.538 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:39:52.538 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property mesa
2025-06-08 21:39:52.538 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:39:52.539 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:39:52.539 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:total]
2025-06-08 21:39:52.539 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:39:52.539 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.total
2025-06-08 21:39:52.539 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:39:52.540 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:39:52.540 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:39:52.541 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Producto
2025-06-08 21:39:52.541 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Producto on table producto
2025-06-08 21:39:52.541 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:39:52.543 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_producto')
2025-06-08 21:39:52.544 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:39:52.544 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:39:52.544 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idProducto with lazy=false
2025-06-08 21:39:52.544 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:idProducto]
2025-06-08 21:39:52.544 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idProducto
2025-06-08 21:39:52.544 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.id_producto
2025-06-08 21:39:52.544 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idProducto
2025-06-08 21:39:52.544 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_producto)]), idProducto, identity, , ...)
2025-06-08 21:39:52.545 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_categoria',referencedColumn='id_categoria')
2025-06-08 21:39:52.545 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:39:52.545 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property categoria
2025-06-08 21:39:52.546 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='descripcion')
2025-06-08 21:39:52.546 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property descripcion with lazy=false
2025-06-08 21:39:52.546 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:descripcion]
2025-06-08 21:39:52.546 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for descripcion
2025-06-08 21:39:52.546 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.descripcion
2025-06-08 21:39:52.546 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property descripcion
2025-06-08 21:39:52.547 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:39:52.547 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:39:52.547 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:estado]
2025-06-08 21:39:52.547 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:39:52.547 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.estado
2025-06-08 21:39:52.547 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:39:52.548 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:39:52.548 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:39:52.548 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:nombre]
2025-06-08 21:39:52.548 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:39:52.548 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.nombre
2025-06-08 21:39:52.549 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:39:52.549 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio')
2025-06-08 21:39:52.549 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precio with lazy=false
2025-06-08 21:39:52.549 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:precio]
2025-06-08 21:39:52.549 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precio
2025-06-08 21:39:52.550 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.precio
2025-06-08 21:39:52.550 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property precio
2025-06-08 21:39:52.551 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_seccion',referencedColumn='id_seccion')
2025-06-08 21:39:52.551 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:39:52.551 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property seccion
2025-06-08 21:39:52.552 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='stock')
2025-06-08 21:39:52.552 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property stock with lazy=false
2025-06-08 21:39:52.552 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:stock]
2025-06-08 21:39:52.553 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for stock
2025-06-08 21:39:52.553 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.stock
2025-06-08 21:39:52.553 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property stock
2025-06-08 21:39:52.555 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:39:52.555 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:39:52.556 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Seccion
2025-06-08 21:39:52.557 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Seccion on table seccion
2025-06-08 21:39:52.557 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:39:52.559 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_seccion')
2025-06-08 21:39:52.559 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:39:52.559 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:39:52.559 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idSeccion with lazy=false
2025-06-08 21:39:52.559 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:idSeccion]
2025-06-08 21:39:52.559 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idSeccion
2025-06-08 21:39:52.560 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.id_seccion
2025-06-08 21:39:52.560 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idSeccion
2025-06-08 21:39:52.560 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_seccion)]), idSeccion, identity, , ...)
2025-06-08 21:39:52.560 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='detalle')
2025-06-08 21:39:52.561 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property detalle with lazy=false
2025-06-08 21:39:52.561 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:detalle]
2025-06-08 21:39:52.561 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for detalle
2025-06-08 21:39:52.561 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.detalle
2025-06-08 21:39:52.562 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property detalle
2025-06-08 21:39:52.562 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:39:52.562 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:39:52.563 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:estado]
2025-06-08 21:39:52.563 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:39:52.563 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.estado
2025-06-08 21:39:52.563 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:39:52.564 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:39:52.566 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idCategoria
2025-06-08 21:39:52.568 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:39:52.569 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:39:52.569 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idCliente
2025-06-08 21:39:52.569 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apellido
2025-06-08 21:39:52.569 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantVisitas
2025-06-08 21:39:52.569 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for dni
2025-06-08 21:39:52.569 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-06-08 21:39:52.569 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:39:52.569 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:39:52.569 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for telefono
2025-06-08 21:39:52.569 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idDetallePedido
2025-06-08 21:39:52.569 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantidad
2025-06-08 21:39:52.569 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:39:52.570 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for igv
2025-06-08 21:39:52.570 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precioUnitario
2025-06-08 21:39:52.570 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for subtotal
2025-06-08 21:39:52.570 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:39:52.570 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-06-08 21:39:52.570 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apellido
2025-06-08 21:39:52.571 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for dni
2025-06-08 21:39:52.571 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:39:52.571 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:39:52.571 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-06-08 21:39:52.571 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for rol
2025-06-08 21:39:52.571 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for telefono
2025-06-08 21:39:52.571 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for usuario
2025-06-08 21:39:52.571 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idFactura
2025-06-08 21:39:52.571 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codigo
2025-06-08 21:39:52.571 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:39:52.571 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaEmision
2025-06-08 21:39:52.571 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for igv
2025-06-08 21:39:52.572 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for subtotal
2025-06-08 21:39:52.572 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:39:52.572 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idMenu
2025-06-08 21:39:52.572 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codPedido
2025-06-08 21:39:52.572 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idMesa
2025-06-08 21:39:52.572 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for capacidad
2025-06-08 21:39:52.572 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for detalle
2025-06-08 21:39:52.572 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:39:52.572 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for numero
2025-06-08 21:39:52.572 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idPedido
2025-06-08 21:39:52.572 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantPedidos
2025-06-08 21:39:52.572 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:39:52.572 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaHora
2025-06-08 21:39:52.572 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:39:52.572 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idProducto
2025-06-08 21:39:52.572 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for descripcion
2025-06-08 21:39:52.573 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:39:52.573 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:39:52.573 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precio
2025-06-08 21:39:52.573 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for stock
2025-06-08 21:39:52.573 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idSeccion
2025-06-08 21:39:52.573 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for detalle
2025-06-08 21:39:52.573 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:39:52.581 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_categoria] to be non-null as it is part of the primary key for table [categoria]
2025-06-08 21:39:52.581 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_cliente] to be non-null as it is part of the primary key for table [cliente]
2025-06-08 21:39:52.581 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_detalle_pedido] to be non-null as it is part of the primary key for table [detalle_pedido]
2025-06-08 21:39:52.581 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_empleado] to be non-null as it is part of the primary key for table [empleado]
2025-06-08 21:39:52.581 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_factura] to be non-null as it is part of the primary key for table [factura]
2025-06-08 21:39:52.581 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_menu] to be non-null as it is part of the primary key for table [menu]
2025-06-08 21:39:52.581 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_mesa] to be non-null as it is part of the primary key for table [mesa]
2025-06-08 21:39:52.581 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_pedido] to be non-null as it is part of the primary key for table [pedido]
2025-06-08 21:39:52.582 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_producto] to be non-null as it is part of the primary key for table [producto]
2025-06-08 21:39:52.582 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_seccion] to be non-null as it is part of the primary key for table [seccion]
2025-06-08 21:39:52.892 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2025-06-08 21:39:52.934 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:39:52.934 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=23, javafx.runtime.version=21.0.1+6, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@55a13ab7, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.community.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant\target\classes;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.0\jackson-annotations-2.17.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.19.0\jackson-core-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.19.0\jackson-databind-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-xml\2.19.0\jackson-dataformat-xml-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\woodstox\woodstox-core\7.1.0\woodstox-core-7.1.0.jar;C:\Users\USUARIO\.m2\repository\com\github\virtuald\curvesapi\1.07\curvesapi-1.07.jar;C:\Users\USUARIO\.m2\repository\com\lowagie\itext\2.1.7.js10\itext-2.1.7.js10.jar;C:\Users\USUARIO\.m2\repository\com\miglayout\miglayout\3.7.4\miglayout-3.7.4.jar;C:\Users\USUARIO\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\SparseBitSet\1.2\SparseBitSet-1.2.jar;C:\Users\USUARIO\.m2\repository\commons-beanutils\commons-beanutils\1.9.4\commons-beanutils-1.9.4.jar;C:\Users\USUARIO\.m2\repository\commons-codec\commons-codec\1.18.0\commons-codec-1.18.0.jar;C:\Users\USUARIO\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\USUARIO\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\USUARIO\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\USUARIO\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\USUARIO\.m2\repository\io\github\mkpaz\atlantafx-base\2.0.0\atlantafx-base-2.0.0.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-commons\1.15.0\micrometer-commons-1.15.0.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-observation\1.15.0\micrometer-observation-1.15.0.jar;C:\Users\USUARIO\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\USUARIO\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\USUARIO\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\USUARIO\.m2\repository\jakarta\el\jakarta.el-api\4.0.0\jakarta.el-api-4.0.0.jar;C:\Users\USUARIO\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\USUARIO\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\USUARIO\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\USUARIO\.m2\repository\net\bytebuddy\byte-buddy\1.17.5\byte-buddy-1.17.5.jar;C:\Users\USUARIO\.m2\repository\net\sf\jasperreports\jasperreports\6.20.0\jasperreports-6.20.0.jar;C:\Users\USUARIO\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-collections4\4.2\commons-collections4-4.2.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-compress\1.21\commons-compress-1.21.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-math3\3.6.1\commons-math3-3.6.1.jar;C:\Users\USUARIO\.m2\repository\org\apache\groovy\groovy\4.0.6\groovy-4.0.6.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi\5.2.3\poi-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml\5.2.3\poi-ooxml-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml-lite\5.2.3\poi-ooxml-lite-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\xmlbeans\xmlbeans\5.1.1\xmlbeans-5.1.1.jar;C:\Users\USUARIO\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcprov-jdk15on\1.70\bcprov-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcutil-jdk15on\1.70\bcutil-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\codehaus\woodstox\stax2-api\4.2.2\stax2-api-4.2.2.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\jdt\ecj\3.21.0\ecj-3.21.0.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jakarta.el\4.0.2\jakarta.el-4.0.2.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-community-dialects\6.4.4.Final\hibernate-community-dialects-6.4.4.Final.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-core\6.6.15.Final\hibernate-core-6.6.15.Final.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.2.Final\hibernate-validator-7.0.2.Final.jar;C:\Users\USUARIO\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jcommon\1.0.23\jcommon-1.0.23.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jfreechart\1.0.19\jfreechart-1.0.19.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\bootstrapfx\bootstrapfx-core\0.2.4\bootstrapfx-core-0.2.4.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-core\12.3.1\ikonli-core-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-fontawesome5-pack\12.3.1\ikonli-fontawesome5-pack-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-javafx\12.3.1\ikonli-javafx-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aop\6.2.7\spring-aop-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aspects\6.2.7\spring-aspects-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-beans\6.2.7\spring-beans-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-context\6.2.7\spring-context-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-core\6.2.7\spring-core-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-expression\6.2.7\spring-expression-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jcl\6.2.7\spring-jcl-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jdbc\6.2.7\spring-jdbc-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-orm\6.2.7\spring-orm-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-tx\6.2.7\spring-tx-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot\3.5.0\spring-boot-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.5.0\spring-boot-autoconfigure-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter\3.5.0\spring-boot-starter-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.5.0\spring-boot-starter-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.5.0\spring-boot-starter-jdbc-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.5.0\spring-boot-starter-logging-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-commons\3.5.0\spring-data-commons-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-jpa\3.5.0\spring-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\xerial\sqlite-jdbc\3.46.0.0\sqlite-jdbc-3.46.0.0.jar;C:\Users\USUARIO\.m2\repository\org\yaml\snakeyaml\2.4\snakeyaml-2.4.jar;C:\Users\USUARIO\.m2\repository\win\zqxu\jrviewer-fx\0.1.1\jrviewer-fx-0.1.1.jar, LOGBACK_ROLLINGPOLICY_MAX_FILE_SIZE=10485760, java.vm.vendor=Oracle Corporation, LOG_PATH=logs/, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Bogota, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, javafx.version=21.0.1, os.name=Windows 11, java.vm.specification.version=23, APPLICATION_NAME=ProyectoRestaurant, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=MX, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk-23\bin, sun.java.command=pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.use_sql_comments=true, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@70717bd7, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\USUARIO, user.language=es, java.specification.vendor=Oracle Corporation, jdk.module.path=C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-fxml\21.0.1\javafx-fxml-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-fxml\21.0.1\javafx-fxml-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-swing\21.0.1\javafx-swing-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-swing\21.0.1\javafx-swing-21.0.1.jar, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-23, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7-58, user.name=USUARIO, stdout.encoding=Cp1252, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, FILE_LOG_PATTERN=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, LOG_FILE=logs/restaurant.log, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\USUARIO\AppData\Local\Temp\, java.version=23.0.2, LOGBACK_ROLLINGPOLICY_CLEAN_HISTORY_ON_START=false, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=12464, sun.os.patch.level=, CONSOLE_LOG_CHARSET=windows-1252, LOGBACK_ROLLINGPOLICY_MAX_HISTORY=30, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@67c084c3, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-23\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;c:\Users\USUARIO\AppData\Local\Programs\cursor\resources\app\bin;C:\Users\USUARIO\AppData\Local\Programs\Python\Python313\Scripts\;C:\Users\USUARIO\AppData\Local\Programs\Python\Launcher\;C:\Users\USUARIO\AppData\Local\Microsoft\WindowsApps;C:\Users\USUARIO\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\USUARIO\AppData\Roaming\npm;C:\flutter\bin;C:\Users\USUARIO\AppData\Local\Programs\Python\Python313\;C:\ffpmg\bin;C:\Users\USUARIO\Downloads\apache-maven-3.9.9\bin;C:\Users\USUARIO\AppData\Local\GitHubDesktop\bin;C:\Users\USUARIO\AppData\Local\Microsoft\WinGet\Packages\Schniz.fnm_Microsoft.Winget.Source_8wekyb3d8bbwe;C:\Users\USUARIO\AppData\Local\Programs\cursor\resources\app\bin;., stderr.encoding=Cp1252, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=23.0.2+7-58, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), CONSOLE_LOG_PATTERN=%d{HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{36}) - %msg%n, java.class.version=67.0, LOGGED_APPLICATION_NAME=[ProyectoRestaurant] , LOGBACK_ROLLINGPOLICY_TOTAL_SIZE_CAP=104857600}
2025-06-08 21:39:52.940 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-06-08 21:39:52.945 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:39:52.946 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:39:52.946 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:39:52.946 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:39:52.946 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:39:52.946 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:39:52.946 [JavaFX-Launcher] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:39:52.948 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:39:52.948 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:39:52.948 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:39:52.948 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:39:52.948 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:39:52.948 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:39:52.950 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:39:52.950 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:39:52.991 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:39:52.991 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:39:52.994 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:39:52.994 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:39:52.996 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:39:52.997 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:39:53.001 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:39:53.001 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:39:53.004 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:39:53.004 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:39:53.008 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:39:53.009 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:39:53.012 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:39:53.012 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:39:53.014 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:39:53.015 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:39:53.017 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:39:53.017 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:39:53.020 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:39:53.063 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-06-08 21:39:53.063 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-06-08 21:39:53.064 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-06-08 21:39:53.065 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-06-08 21:39:53.067 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6f5dd515] under count; prior registration was null
2025-06-08 21:39:53.069 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5246151] under every; prior registration was null
2025-06-08 21:39:53.069 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@23ec2cba] under any; prior registration was null
2025-06-08 21:39:53.070 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-06-08 21:39:53.070 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-06-08 21:39:53.070 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-06-08 21:39:53.071 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-06-08 21:39:53.071 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-06-08 21:39:53.071 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-06-08 21:39:53.071 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-06-08 21:39:53.071 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-06-08 21:39:53.071 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-06-08 21:39:53.072 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-06-08 21:39:53.072 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-06-08 21:39:53.072 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-06-08 21:39:53.072 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-06-08 21:39:53.072 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-06-08 21:39:53.072 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-06-08 21:39:53.072 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-06-08 21:39:53.073 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-06-08 21:39:53.075 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@46a1a34d] under sinh; prior registration was null
2025-06-08 21:39:53.075 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12a24c1c] under cosh; prior registration was null
2025-06-08 21:39:53.075 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5359898e] under tanh; prior registration was null
2025-06-08 21:39:53.075 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7039c571] under pi; prior registration was null
2025-06-08 21:39:53.076 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b49abf0] under log; prior registration was null
2025-06-08 21:39:53.076 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-06-08 21:39:53.076 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-06-08 21:39:53.076 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-06-08 21:39:53.077 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-06-08 21:39:53.077 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-06-08 21:39:53.077 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-06-08 21:39:53.078 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-06-08 21:39:53.078 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-06-08 21:39:53.078 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-06-08 21:39:53.078 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-06-08 21:39:53.078 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-06-08 21:39:53.078 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-06-08 21:39:53.079 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@561275e2] under position; prior registration was null
2025-06-08 21:39:53.080 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7bf0634] under overlay; prior registration was null
2025-06-08 21:39:53.081 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@23470d5f] under trim; prior registration was null
2025-06-08 21:39:53.082 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@6f9a81a0] under cast; prior registration was null
2025-06-08 21:39:53.083 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27eae792] under collate; prior registration was null
2025-06-08 21:39:53.084 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@54bc2b63] under extract; prior registration was null
2025-06-08 21:39:53.084 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-06-08 21:39:53.084 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-06-08 21:39:53.085 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@5e6339f8] under ifnull; prior registration was null
2025-06-08 21:39:53.085 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-06-08 21:39:53.085 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-06-08 21:39:53.086 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@49866565] under pad; prior registration was null
2025-06-08 21:39:53.087 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@1b47fd1b] under str; prior registration was null
2025-06-08 21:39:53.090 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@10491bdd] under format; prior registration was null
2025-06-08 21:39:53.090 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@1ae6d96] under timestampadd; prior registration was null
2025-06-08 21:39:53.092 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@594e423e] under timestampdiff; prior registration was null
2025-06-08 21:39:53.092 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-06-08 21:39:53.092 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-06-08 21:39:53.092 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@180307c3] under current_date; prior registration was null
2025-06-08 21:39:53.092 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@441b5acf] under current_time; prior registration was null
2025-06-08 21:39:53.092 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@55b96c29] under current_timestamp; prior registration was null
2025-06-08 21:39:53.092 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-06-08 21:39:53.092 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-06-08 21:39:53.092 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-06-08 21:39:53.092 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5923044b] under local_date; prior registration was null
2025-06-08 21:39:53.092 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@599e2db3] under local_time; prior registration was null
2025-06-08 21:39:53.092 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@474dd96d] under local_datetime; prior registration was null
2025-06-08 21:39:53.092 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@590b3d89] under offset_datetime; prior registration was null
2025-06-08 21:39:53.092 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-06-08 21:39:53.092 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-06-08 21:39:53.092 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-06-08 21:39:53.093 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-06-08 21:39:53.093 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@184b6bbf] under instant; prior registration was null
2025-06-08 21:39:53.093 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-06-08 21:39:53.093 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@5a0d08b2] under sql; prior registration was null
2025-06-08 21:39:53.094 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b5958ed] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-06-08 21:39:53.094 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a7cfe17] under left; prior registration was NamedSqmFunctionTemplate(left)
2025-06-08 21:39:53.094 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@578c64db] under right; prior registration was NamedSqmFunctionTemplate(right)
2025-06-08 21:39:53.094 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6576be00] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-06-08 21:39:53.094 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(length)] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-06-08 21:39:53.094 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-06-08 21:39:53.094 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under least; prior registration was NamedSqmFunctionTemplate(least)
2025-06-08 21:39:53.094 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under greatest; prior registration was NamedSqmFunctionTemplate(greatest)
2025-06-08 21:39:53.094 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-06-08 21:39:53.094 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-06-08 21:39:53.096 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@11bfaab8] under trunc; prior registration was null
2025-06-08 21:39:53.096 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-06-08 21:39:53.096 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b49abf0
2025-06-08 21:39:53.096 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-06-08 21:39:53.096 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-06-08 21:39:53.096 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-06-08 21:39:53.096 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-06-08 21:39:53.096 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2025-06-08 21:39:53.096 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : chr -> char
2025-06-08 21:39:53.097 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4da9303] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-06-08 21:39:53.097 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@34348c9] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2025-06-08 21:39:53.097 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@65dfe13e] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2025-06-08 21:39:53.097 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(strftime)] under format; prior registration was org.hibernate.dialect.function.FormatFunction@10491bdd
2025-06-08 21:39:53.097 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-06-08 21:39:53.098 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-06-08 21:39:53.098 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-06-08 21:39:53.098 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-06-08 21:39:53.098 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-06-08 21:39:53.098 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-06-08 21:39:53.099 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@3b0bbb34] under listagg; prior registration was null
2025-06-08 21:39:53.101 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg)
2025-06-08 21:39:53.102 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-06-08 21:39:53.103 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2025-06-08 21:39:53.103 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-06-08 21:39:53.103 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-06-08 21:39:53.104 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-06-08 21:39:53.104 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg)
2025-06-08 21:39:53.104 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type)
2025-06-08 21:39:53.104 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-06-08 21:39:53.104 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg)
2025-06-08 21:39:53.104 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-06-08 21:39:53.104 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-06-08 21:39:53.104 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-06-08 21:39:53.104 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-06-08 21:39:53.104 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2025-06-08 21:39:53.104 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-06-08 21:39:53.104 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-06-08 21:39:53.104 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-06-08 21:39:53.104 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date
2025-06-08 21:39:53.104 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time
2025-06-08 21:39:53.104 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp
2025-06-08 21:39:53.104 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date
2025-06-08 21:39:53.104 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant
2025-06-08 21:39:53.104 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time
2025-06-08 21:39:53.104 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp
2025-06-08 21:39:53.104 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-06-08 21:39:53.105 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-06-08 21:39:53.105 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-06-08 21:39:53.105 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2025-06-08 21:39:53.105 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-06-08 21:39:53.105 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-06-08 21:39:53.105 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value
2025-06-08 21:39:53.105 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg)
2025-06-08 21:39:53.105 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-06-08 21:39:53.106 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-06-08 21:39:53.106 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-06-08 21:39:53.106 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant
2025-06-08 21:39:53.106 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-06-08 21:39:53.106 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value
2025-06-08 21:39:53.106 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-06-08 21:39:53.106 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-06-08 21:39:53.106 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-06-08 21:39:53.106 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-06-08 21:39:53.106 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-06-08 21:39:53.106 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-06-08 21:39:53.106 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date
2025-06-08 21:39:53.106 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime
2025-06-08 21:39:53.106 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time
2025-06-08 21:39:53.106 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date
2025-06-08 21:39:53.106 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime
2025-06-08 21:39:53.106 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time
2025-06-08 21:39:53.106 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(pattern, string[, start])
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string)
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding])
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg)
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg)
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1)
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number()
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding])
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg)
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg)
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... )
2025-06-08 21:39:53.107 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... )
2025-06-08 21:39:53.108 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string)
2025-06-08 21:39:53.112 [JavaFX-Launcher] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048)
2025-06-08 21:39:53.184 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:39:53.188 [JavaFX-Launcher] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-06-08 21:39:53.260 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.264 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.271 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.271 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.271 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:39:53.271 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:39:53.467 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Factura]: private accessor [cliente]
2025-06-08 21:39:53.474 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.474 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.496 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:39:53.496 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:39:53.527 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Empleado]: private accessor [apellido]
2025-06-08 21:39:53.528 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:39:53.528 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:39:53.550 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Seccion]: private accessor [detalle]
2025-06-08 21:39:53.551 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:39:53.551 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:39:53.572 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Cliente]: private accessor [apellido]
2025-06-08 21:39:53.573 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.573 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.573 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.573 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.573 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:39:53.573 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:39:53.586 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Menu]: private accessor [codPedido]
2025-06-08 21:39:53.587 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.587 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.588 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.589 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.589 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.589 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.589 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.589 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.589 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:39:53.589 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:39:53.608 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido]: private accessor [cantidad]
2025-06-08 21:39:53.608 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.608 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.608 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.609 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.610 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.610 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.610 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.610 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:39:53.610 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:39:53.622 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Producto]: private accessor [categoria]
2025-06-08 21:39:53.623 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.623 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.624 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:39:53.624 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:39:53.634 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Categoria]: private accessor [estado]
2025-06-08 21:39:53.635 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:39:53.635 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:39:53.647 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Mesa]: private accessor [capacidad]
2025-06-08 21:39:53.647 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.648 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.648 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.648 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.648 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.648 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.648 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:39:53.648 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:39:53.662 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Pedido]: private accessor [cantPedidos]
2025-06-08 21:39:53.663 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.663 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.663 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:39:53.693 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks
2025-06-08 21:39:53.694 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente]
2025-06-08 21:39:53.700 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido]
2025-06-08 21:39:53.700 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Factura) `staticFetchableList` generator
2025-06-08 21:39:53.700 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Empleado) `staticFetchableList` generator
2025-06-08 21:39:53.700 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Seccion) `staticFetchableList` generator
2025-06-08 21:39:53.700 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Cliente) `staticFetchableList` generator
2025-06-08 21:39:53.700 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido]
2025-06-08 21:39:53.701 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto]
2025-06-08 21:39:53.701 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Menu) `staticFetchableList` generator
2025-06-08 21:39:53.701 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura]
2025-06-08 21:39:53.702 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido]
2025-06-08 21:39:53.702 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto]
2025-06-08 21:39:53.703 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.DetPedido) `staticFetchableList` generator
2025-06-08 21:39:53.703 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria]
2025-06-08 21:39:53.703 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion]
2025-06-08 21:39:53.704 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Producto) `staticFetchableList` generator
2025-06-08 21:39:53.704 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Categoria) `staticFetchableList` generator
2025-06-08 21:39:53.704 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Mesa) `staticFetchableList` generator
2025-06-08 21:39:53.704 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente]
2025-06-08 21:39:53.704 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado]
2025-06-08 21:39:53.704 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa]
2025-06-08 21:39:53.705 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Pedido) `staticFetchableList` generator
2025-06-08 21:39:53.800 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2025-06-08 21:39:53.802 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Factura)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura] 
2025-06-08 21:39:53.815 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2136d127] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente] 
2025-06-08 21:39:53.816 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:39:53.823 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@690d9e9b] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido] 
2025-06-08 21:39:53.823 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:39:53.823 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@a025892] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente] 
2025-06-08 21:39:53.823 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:39:53.823 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6b3b67b8] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado] 
2025-06-08 21:39:53.824 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:39:53.824 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1b7c623d] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa] 
2025-06-08 21:39:53.825 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:39:53.831 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.cantVisitas]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.email]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.nombre]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.telefono]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.codigo]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.fechaEmision]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.igv]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.rol]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.telefono]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.subtotal]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.total]

2025-06-08 21:39:53.836 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (f1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura) {
          primaryTableReference : factura as f1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente) {
              primaryTableReference : cliente as c1_0
            }
            left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido) {
              primaryTableReference : pedido as p1_0
              TableGroupJoins {
                left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente) {
                  primaryTableReference : cliente as c2_0
                }
                left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado) {
                  primaryTableReference : empleado as e1_0
                }
                left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa) {
                  primaryTableReference : mesa as m1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:39:53.847 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:39:53.847 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Factura */ select id_factura from factura where id_factura=?
2025-06-08 21:39:53.847 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Factura */insert into factura (id_cliente,codigo,estado,fecha_emision,igv,id_pedido,subtotal,total) values (?,?,?,?,?,?,?,?)
2025-06-08 21:39:53.847 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Factura */update factura set id_cliente=?,codigo=?,estado=?,fecha_emision=?,igv=?,id_pedido=?,subtotal=?,total=? where id_factura=?
2025-06-08 21:39:53.847 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Factura */delete from factura where id_factura=?
2025-06-08 21:39:53.847 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:39:53.847 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:39:53.848 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.rol]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.telefono]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.usuario]

2025-06-08 21:39:53.848 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:39:53.849 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:39:53.849 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Empleado */ select id_empleado from empleado where id_empleado=?
2025-06-08 21:39:53.849 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */insert into empleado (apellido,dni,estado,nombre,password,rol,telefono,usuario) values (?,?,?,?,?,?,?,?)
2025-06-08 21:39:53.849 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */update empleado set apellido=?,dni=?,estado=?,nombre=?,password=?,rol=?,telefono=?,usuario=? where id_empleado=?
2025-06-08 21:39:53.849 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */delete from empleado where id_empleado=?
2025-06-08 21:39:53.849 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:39:53.849 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Seccion)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] 
2025-06-08 21:39:53.849 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Seccion]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion.detalle]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion.estado]

2025-06-08 21:39:53.850 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Seccion) {
          primaryTableReference : seccion as s1_0
        }
      }
    }

2025-06-08 21:39:53.850 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:39:53.850 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Seccion */ select id_seccion from seccion where id_seccion=?
2025-06-08 21:39:53.850 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */insert into seccion (detalle,estado) values (?,?)
2025-06-08 21:39:53.850 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */update seccion set detalle=?,estado=? where id_seccion=?
2025-06-08 21:39:53.850 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */delete from seccion where id_seccion=?
2025-06-08 21:39:53.850 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:39:53.850 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Cliente)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] 
2025-06-08 21:39:53.851 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Cliente]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.cantVisitas]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.email]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.nombre]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.telefono]

2025-06-08 21:39:53.851 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Cliente) {
          primaryTableReference : cliente as c1_0
        }
      }
    }

2025-06-08 21:39:53.851 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:39:53.851 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Cliente */ select id_cliente from cliente where id_cliente=?
2025-06-08 21:39:53.851 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */insert into cliente (apellido,cant_visitas,dni,email,estado,nombre,telefono) values (?,?,?,?,?,?,?)
2025-06-08 21:39:53.852 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */update cliente set apellido=?,cant_visitas=?,dni=?,email=?,estado=?,nombre=?,telefono=? where id_cliente=?
2025-06-08 21:39:53.852 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */delete from cliente where id_cliente=?
2025-06-08 21:39:53.852 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:39:53.852 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Menu)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu] 
2025-06-08 21:39:53.853 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@155bd0fa] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido] 
2025-06-08 21:39:53.853 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:39:53.854 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@284a7818] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente] 
2025-06-08 21:39:53.854 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:39:53.854 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@49508d] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado] 
2025-06-08 21:39:53.854 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:39:53.855 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4fbd97b2] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa] 
2025-06-08 21:39:53.855 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m2_0
2025-06-08 21:39:53.855 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@42a52bf] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto] 
2025-06-08 21:39:53.855 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p2_0
2025-06-08 21:39:53.856 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7fdb709a] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria] 
2025-06-08 21:39:53.856 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:39:53.856 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@35dc9ad4] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion] 
2025-06-08 21:39:53.856 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:39:53.857 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.codPedido]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.rol]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.telefono]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.total]
 |  \-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.descripcion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.precio]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion.detalle]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.stock]

2025-06-08 21:39:53.857 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu) {
          primaryTableReference : menu as m1_0
          TableGroupJoins {
            left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido) {
              primaryTableReference : pedido as p1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente) {
                  primaryTableReference : cliente as c1_0
                }
                left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado) {
                  primaryTableReference : empleado as e1_0
                }
                left  join LazyTableGroup (m2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa) {
                  primaryTableReference : mesa as m2_0
                }
              }
            }
            left  join LazyTableGroup (p2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto) {
              primaryTableReference : producto as p2_0
              TableGroupJoins {
                left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria) {
                  primaryTableReference : categoria as c2_0
                }
                left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion) {
                  primaryTableReference : seccion as s1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:39:53.858 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:39:53.858 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Menu */ select id_menu from menu where id_menu=?
2025-06-08 21:39:53.858 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Menu */insert into menu (cod_pedido,id_pedido,id_producto) values (?,?,?)
2025-06-08 21:39:53.858 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Menu */update menu set cod_pedido=?,id_pedido=?,id_producto=? where id_menu=?
2025-06-08 21:39:53.858 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Menu */delete from menu where id_menu=?
2025-06-08 21:39:53.859 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : dp1_0
2025-06-08 21:39:53.859 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.DetPedido)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] 
2025-06-08 21:39:53.859 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@40968c10] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura] 
2025-06-08 21:39:53.860 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2025-06-08 21:39:53.860 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@64ed6b38] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente] 
2025-06-08 21:39:53.861 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:39:53.861 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3536474b] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido] 
2025-06-08 21:39:53.861 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:39:53.862 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5ffd2b7c] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente] 
2025-06-08 21:39:53.862 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:39:53.862 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2b7fca9f] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado] 
2025-06-08 21:39:53.863 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:39:53.863 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2444c063] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa] 
2025-06-08 21:39:53.863 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:39:53.864 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@23cfd7bf] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido] 
2025-06-08 21:39:53.866 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p2_0
2025-06-08 21:39:53.867 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3a487721] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente] 
2025-06-08 21:39:53.867 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c3_0
2025-06-08 21:39:53.868 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@59d970c2] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado] 
2025-06-08 21:39:53.868 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e2_0
2025-06-08 21:39:53.869 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1d6e4f2a] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa] 
2025-06-08 21:39:53.869 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m2_0
2025-06-08 21:39:53.870 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@11980883] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto] 
2025-06-08 21:39:53.871 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p3_0
2025-06-08 21:39:53.871 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@689084ee] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria] 
2025-06-08 21:39:53.871 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c4_0
2025-06-08 21:39:53.871 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7a5da65e] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion] 
2025-06-08 21:39:53.871 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:39:53.872 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.cantidad]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.estado]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.telefono]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.codigo]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.fechaEmision]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.igv]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cantPedidos]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.apellido]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.cantVisitas]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.dni]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.email]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.estado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.nombre]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.telefono]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.apellido]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.dni]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.estado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.nombre]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.password]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.rol]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.telefono]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.usuario]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.fechaHora]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.capacidad]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.detalle]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.estado]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.numero]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.total]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.subtotal]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.igv]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.rol]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.telefono]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.precioUnitario]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.descripcion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.precio]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion.detalle]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.stock]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.subtotal]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.total]

2025-06-08 21:39:53.872 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (dp1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido) {
          primaryTableReference : detalle_pedido as dp1_0
          TableGroupJoins {
            left  join LazyTableGroup (f1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura) {
              primaryTableReference : factura as f1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente) {
                  primaryTableReference : cliente as c1_0
                }
                left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido) {
                  primaryTableReference : pedido as p1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente) {
                      primaryTableReference : cliente as c2_0
                    }
                    left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado) {
                      primaryTableReference : empleado as e1_0
                    }
                    left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa) {
                      primaryTableReference : mesa as m1_0
                    }
                  }
                }
              }
            }
             join LazyTableGroup (p2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido) {
              primaryTableReference : pedido as p2_0
              TableGroupJoins {
                left  join LazyTableGroup (c3 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente) {
                  primaryTableReference : cliente as c3_0
                }
                left  join LazyTableGroup (e2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado) {
                  primaryTableReference : empleado as e2_0
                }
                left  join LazyTableGroup (m2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa) {
                  primaryTableReference : mesa as m2_0
                }
              }
            }
             join LazyTableGroup (p3 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto) {
              primaryTableReference : producto as p3_0
              TableGroupJoins {
                left  join LazyTableGroup (c4 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria) {
                  primaryTableReference : categoria as c4_0
                }
                left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion) {
                  primaryTableReference : seccion as s1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:39:53.874 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:39:53.874 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */ select id_detalle_pedido from detalle_pedido where id_detalle_pedido=?
2025-06-08 21:39:53.874 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */insert into detalle_pedido (cantidad,estado,id_factura,igv,id_pedido,precio_unitario,id_producto,subtotal,total) values (?,?,?,?,?,?,?,?,?)
2025-06-08 21:39:53.874 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */update detalle_pedido set cantidad=?,estado=?,id_factura=?,igv=?,id_pedido=?,precio_unitario=?,id_producto=?,subtotal=?,total=? where id_detalle_pedido=?
2025-06-08 21:39:53.874 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */delete from detalle_pedido where id_detalle_pedido=?
2025-06-08 21:39:53.874 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:39:53.874 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Producto)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto] 
2025-06-08 21:39:53.874 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@44286f17] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria] 
2025-06-08 21:39:53.875 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:39:53.875 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@28f33488] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion] 
2025-06-08 21:39:53.875 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:39:53.876 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.descripcion]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.precio]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion.detalle]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.stock]

2025-06-08 21:39:53.876 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto) {
          primaryTableReference : producto as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria) {
              primaryTableReference : categoria as c1_0
            }
            left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion) {
              primaryTableReference : seccion as s1_0
            }
          }
        }
      }
    }

2025-06-08 21:39:53.877 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:39:53.877 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Producto */ select id_producto from producto where id_producto=?
2025-06-08 21:39:53.877 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Producto */insert into producto (id_categoria,descripcion,estado,nombre,precio,id_seccion,stock) values (?,?,?,?,?,?,?)
2025-06-08 21:39:53.877 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Producto */update producto set id_categoria=?,descripcion=?,estado=?,nombre=?,precio=?,id_seccion=?,stock=? where id_producto=?
2025-06-08 21:39:53.877 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Producto */delete from producto where id_producto=?
2025-06-08 21:39:53.877 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:39:53.877 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Categoria)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] 
2025-06-08 21:39:53.878 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Categoria]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Categoria.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Categoria.nombre]

2025-06-08 21:39:53.878 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Categoria) {
          primaryTableReference : categoria as c1_0
        }
      }
    }

2025-06-08 21:39:53.878 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:39:53.878 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Categoria */ select id_categoria from categoria where id_categoria=?
2025-06-08 21:39:53.879 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */insert into categoria (estado,nombre) values (?,?)
2025-06-08 21:39:53.879 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */update categoria set estado=?,nombre=? where id_categoria=?
2025-06-08 21:39:53.879 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */delete from categoria where id_categoria=?
2025-06-08 21:39:53.879 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:39:53.879 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Mesa)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] 
2025-06-08 21:39:53.879 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Mesa]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.capacidad]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.detalle]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.numero]

2025-06-08 21:39:53.880 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Mesa) {
          primaryTableReference : mesa as m1_0
        }
      }
    }

2025-06-08 21:39:53.880 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:39:53.880 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Mesa */ select id_mesa from mesa where id_mesa=?
2025-06-08 21:39:53.880 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */insert into mesa (capacidad,detalle,estado,numero) values (?,?,?,?)
2025-06-08 21:39:53.880 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */update mesa set capacidad=?,detalle=?,estado=?,numero=? where id_mesa=?
2025-06-08 21:39:53.880 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */delete from mesa where id_mesa=?
2025-06-08 21:39:53.880 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:39:53.880 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Pedido)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] 
2025-06-08 21:39:53.881 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@31ae2638] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente] 
2025-06-08 21:39:53.881 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:39:53.882 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5606177b] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado] 
2025-06-08 21:39:53.882 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:39:53.883 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2d75e727] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa] 
2025-06-08 21:39:53.883 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:39:53.883 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cantPedidos]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.cantVisitas]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.email]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.nombre]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.telefono]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.password]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.rol]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.telefono]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.usuario]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.fechaHora]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.capacidad]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.detalle]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.numero]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.total]

2025-06-08 21:39:53.884 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido) {
          primaryTableReference : pedido as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente) {
              primaryTableReference : cliente as c1_0
            }
            left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado) {
              primaryTableReference : empleado as e1_0
            }
            left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa) {
              primaryTableReference : mesa as m1_0
            }
          }
        }
      }
    }

2025-06-08 21:39:53.884 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:39:53.884 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Pedido */ select id_pedido from pedido where id_pedido=?
2025-06-08 21:39:53.884 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */insert into pedido (cant_pedidos,id_cliente,id_empleado,estado,fecha_hora,id_mesa,total) values (?,?,?,?,?,?,?)
2025-06-08 21:39:53.885 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */update pedido set cant_pedidos=?,id_cliente=?,id_empleado=?,estado=?,fecha_hora=?,id_mesa=?,total=? where id_pedido=?
2025-06-08 21:39:53.885 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */delete from pedido where id_pedido=?
2025-06-08 21:39:53.918 [JavaFX-Launcher] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-08 21:39:53.919 [JavaFX-Launcher] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5042011f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2f74b1e8]
2025-06-08 21:39:53.921 [JavaFX-Launcher] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries
2025-06-08 21:39:53.921 [JavaFX-Launcher] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries
2025-06-08 21:39:53.976 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : categoria
2025-06-08 21:39:53.976 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : cliente
2025-06-08 21:39:53.976 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : detalle_pedido
2025-06-08 21:39:53.980 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    alter table empleado 
       add column apellido varchar(100) not null
2025-06-08 21:39:53.983 [JavaFX-Launcher] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table empleado 
       add column apellido varchar(100) not null" via JDBC [[SQLITE_ERROR] SQL error or missing database (Cannot add a NOT NULL column with default value NULL)]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table empleado 
       add column apellido varchar(100) not null" via JDBC [[SQLITE_ERROR] SQL error or missing database (Cannot add a NOT NULL column with default value NULL)]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1430)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:39)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (Cannot add a NOT NULL column with default value NULL)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:988)
	at org.sqlite.core.CoreStatement.exec(CoreStatement.java:91)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:43)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 38 common frames omitted
2025-06-08 21:39:53.988 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    alter table empleado 
       add column dni varchar(8) not null unique
2025-06-08 21:39:53.988 [JavaFX-Launcher] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table empleado 
       add column dni varchar(8) not null unique" via JDBC [[SQLITE_ERROR] SQL error or missing database (Cannot add a UNIQUE column)]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table empleado 
       add column dni varchar(8) not null unique" via JDBC [[SQLITE_ERROR] SQL error or missing database (Cannot add a UNIQUE column)]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1430)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:39)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (Cannot add a UNIQUE column)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:132)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:54)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:43)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 38 common frames omitted
2025-06-08 21:39:53.990 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : factura
2025-06-08 21:39:53.990 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : menu
2025-06-08 21:39:53.990 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : mesa
2025-06-08 21:39:53.990 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : pedido
2025-06-08 21:39:53.990 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : producto
2025-06-08 21:39:53.990 [JavaFX-Launcher] DEBUG org.hibernate.mapping.Table - No alter strings for table : seccion
2025-06-08 21:39:53.993 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    alter table empleado 
       drop constraint UKanilfn0t89ht43r8n8lthr5b6
2025-06-08 21:39:53.996 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7cee9d3e
2025-06-08 21:39:53.996 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: fe65103f-70d7-4131-bc16-3ef9cccea79b (<unnamed>)
2025-06-08 21:39:53.996 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-06-08 21:39:53.996 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory
2025-06-08 21:39:53.996 [JavaFX-Launcher] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-08 21:39:54.232 [JavaFX-Launcher] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2025-06-08 21:39:54.482 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy106.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:39)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:39:54.533 [JavaFX-Launcher] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-08 21:39:54.541 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy106.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:147)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:39)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:39:54.659 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy106.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:39)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:39:54.871 [JavaFX-Launcher] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:39:54.874 [JavaFX-Launcher] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-06-08 21:39:54.874 [JavaFX-Launcher] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-06-08 21:39:54.877 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:39:54.877 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-06-08 21:39:54.877 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:39:54.877 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:39:54.877 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:39:54.877 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:39:54.878 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:39:54.879 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:39:54.880 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:39:54.880 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:39:54.880 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:39:54.880 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:39:54.880 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:39:55.190 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - Started application in 7.385 seconds (process running for 8.538)
2025-06-08 21:39:55.532 [JavaFX-Launcher] INFO  p.e.u.p.ProyectoRestaurantApplication - === LISTADO DE EMPLEADOS ===
2025-06-08 21:39:55.558 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-08 21:39:55.558 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - begin
2025-06-08 21:39:55.657 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:39:55.658 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3))] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:39:55.670 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3)]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).rol]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).telefono]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).usuario]

2025-06-08 21:39:55.671 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3)) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:39:55.684 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:39:55.690 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id_empleado,
        e1_0.apellido,
        e1_0.dni,
        e1_0.estado,
        e1_0.nombre,
        e1_0.password,
        e1_0.rol,
        e1_0.telefono,
        e1_0.usuario 
    from
        empleado e1_0
2025-06-08 21:39:55.694 [JavaFX-Launcher] DEBUG o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [/* <criteria> */ select e1_0.id_empleado,e1_0.apellido,e1_0.dni,e1_0.estado,e1_0.nombre,e1_0.password,e1_0.rol,e1_0.telefono,e1_0.usuario from empleado e1_0]
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such column: e1_0.apellido)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:132)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.core.CorePreparedStatement.<init>(CorePreparedStatement.java:46)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.<init>(JDBC3PreparedStatement.java:32)
	at org.sqlite.jdbc4.JDBC4PreparedStatement.<init>(JDBC4PreparedStatement.java:25)
	at org.sqlite.jdbc4.JDBC4Connection.prepareStatement(JDBC4Connection.java:34)
	at org.sqlite.jdbc3.JDBC3Connection.prepareStatement(JDBC3Connection.java:225)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:402)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:734)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy110.findAll(Unknown Source)
	at pe.edu.upeu.proyecto_restaurant.service.EmpleadoService.listarTodos(EmpleadoService.java:20)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:48)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:39:55.695 [JavaFX-Launcher] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1, SQLState: null
2025-06-08 21:39:55.696 [JavaFX-Launcher] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_ERROR] SQL error or missing database (no such column: e1_0.apellido)
2025-06-08 21:39:55.702 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:543)
	at org.hibernate.internal.ExceptionConverterImpl.rollbackIfNecessary(ExceptionConverterImpl.java:264)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:160)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:151)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:402)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:734)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy110.findAll(Unknown Source)
	at pe.edu.upeu.proyecto_restaurant.service.EmpleadoService.listarTodos(EmpleadoService.java:20)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:48)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:39:55.706 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - rolling back
2025-06-08 21:39:55.723 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-08 21:39:55.723 [SpringApplicationShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing
2025-06-08 21:39:55.723 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@513e2e69] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2f74b1e8]
2025-06-08 21:39:55.723 [SpringApplicationShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2025-06-08 21:39:55.723 [SpringApplicationShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2025-06-08 21:39:55.723 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-08 21:39:55.735 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-08 21:40:40.373 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:40:40.379 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:40:40.379 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:40:40.380 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:40:40.393 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:40:40.395 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:40:40.442 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:40:40.709 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:40:40.724 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:40:40.725 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:40:40.725 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:40:40.725 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:40:40.725 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:40:40.822 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - Starting application using Java 23.0.2 with PID 15504 (started by USUARIO in C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant)
2025-06-08 21:40:40.825 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-08 21:40:41.992 [JavaFX-Launcher] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-08 21:40:42.166 [JavaFX-Launcher] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 157 ms. Found 10 JPA repository interfaces.
2025-06-08 21:40:43.009 [JavaFX-Launcher] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@506e1b77
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/USUARIO/Documents/ProyectoRestaurantJava/ProyectoRestaurant/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		pe.edu.upeu.proyecto_restaurant.modulo.Categoria
		pe.edu.upeu.proyecto_restaurant.modulo.Cliente
		pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
		pe.edu.upeu.proyecto_restaurant.modulo.Empleado
		pe.edu.upeu.proyecto_restaurant.modulo.Factura
		pe.edu.upeu.proyecto_restaurant.modulo.Menu
		pe.edu.upeu.proyecto_restaurant.modulo.Mesa
		pe.edu.upeu.proyecto_restaurant.modulo.Pedido
		pe.edu.upeu.proyecto_restaurant.modulo.Producto
		pe.edu.upeu.proyecto_restaurant.modulo.Seccion]
	Mapping files names []
	Properties []
2025-06-08 21:40:43.020 [JavaFX-Launcher] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-06-08 21:40:43.022 [JavaFX-Launcher] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-06-08 21:40:43.086 [JavaFX-Launcher] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-08 21:40:43.088 [JavaFX-Launcher] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found
2025-06-08 21:40:43.114 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-06-08 21:40:43.114 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-06-08 21:40:43.116 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:40:43.116 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:40:43.117 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-06-08 21:40:43.119 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-06-08 21:40:43.119 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-06-08 21:40:43.121 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:40:43.123 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-06-08 21:40:43.124 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-06-08 21:40:43.125 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:40:43.126 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-06-08 21:40:43.136 [JavaFX-Launcher] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-06-08 21:40:43.138 [JavaFX-Launcher] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-08 21:40:43.252 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4d81848e
2025-06-08 21:40:43.253 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4d81848e
2025-06-08 21:40:43.253 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4d81848e
2025-06-08 21:40:43.253 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@48f312e2
2025-06-08 21:40:43.253 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@48f312e2
2025-06-08 21:40:43.253 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4c8fb131
2025-06-08 21:40:43.253 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4c8fb131
2025-06-08 21:40:43.253 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@d92aba4
2025-06-08 21:40:43.253 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@d92aba4
2025-06-08 21:40:43.253 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4cf6eb6c
2025-06-08 21:40:43.253 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4cf6eb6c
2025-06-08 21:40:43.253 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4cf6eb6c
2025-06-08 21:40:43.254 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1cc28412
2025-06-08 21:40:43.254 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1cc28412
2025-06-08 21:40:43.254 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1cc28412
2025-06-08 21:40:43.254 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2df5b882
2025-06-08 21:40:43.254 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2df5b882
2025-06-08 21:40:43.255 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3522f913
2025-06-08 21:40:43.255 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4e74d950
2025-06-08 21:40:43.255 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4e74d950
2025-06-08 21:40:43.255 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@469e3698
2025-06-08 21:40:43.256 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@462fb761
2025-06-08 21:40:43.257 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@64e734d6
2025-06-08 21:40:43.257 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@64e734d6
2025-06-08 21:40:43.257 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@64e734d6
2025-06-08 21:40:43.258 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@c31df43
2025-06-08 21:40:43.259 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@c31df43
2025-06-08 21:40:43.259 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@c31df43
2025-06-08 21:40:43.259 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@3b2c02ab
2025-06-08 21:40:43.259 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@3b2c02ab
2025-06-08 21:40:43.259 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3b2c02ab
2025-06-08 21:40:43.260 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@832e10
2025-06-08 21:40:43.260 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@832e10
2025-06-08 21:40:43.260 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@832e10
2025-06-08 21:40:43.261 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5d9feb52
2025-06-08 21:40:43.261 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5d9feb52
2025-06-08 21:40:43.261 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5d9feb52
2025-06-08 21:40:43.261 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5fd6ec65
2025-06-08 21:40:43.261 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5fd6ec65
2025-06-08 21:40:43.261 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4b4946e
2025-06-08 21:40:43.261 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4b4946e
2025-06-08 21:40:43.261 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@1d5ed946
2025-06-08 21:40:43.262 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@1d5ed946
2025-06-08 21:40:43.262 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1d5ed946
2025-06-08 21:40:43.262 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3f3974c4
2025-06-08 21:40:43.262 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@57e40282
2025-06-08 21:40:43.262 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@57e40282
2025-06-08 21:40:43.262 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@77d3fbf4
2025-06-08 21:40:43.263 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@1c2c88a1
2025-06-08 21:40:43.263 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1c2c88a1
2025-06-08 21:40:43.263 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@1c2c88a1
2025-06-08 21:40:43.263 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@684740b4
2025-06-08 21:40:43.264 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@1fc0bf2c
2025-06-08 21:40:43.264 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7724fb7b
2025-06-08 21:40:43.264 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@f351cbe
2025-06-08 21:40:43.264 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@f351cbe
2025-06-08 21:40:43.265 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5da5bf0c
2025-06-08 21:40:43.265 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5da5bf0c
2025-06-08 21:40:43.265 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4706424b
2025-06-08 21:40:43.265 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@17a996f3
2025-06-08 21:40:43.266 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@30dea854
2025-06-08 21:40:43.266 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@40733c9c
2025-06-08 21:40:43.266 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@35123ac3
2025-06-08 21:40:43.267 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6e572c9c
2025-06-08 21:40:43.267 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2b8eb50a
2025-06-08 21:40:43.267 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2b8eb50a
2025-06-08 21:40:43.267 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@72c0fb3b
2025-06-08 21:40:43.268 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@72c0fb3b
2025-06-08 21:40:43.268 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@56a00382
2025-06-08 21:40:43.269 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@56a00382
2025-06-08 21:40:43.269 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@144f606
2025-06-08 21:40:43.269 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@144f606
2025-06-08 21:40:43.270 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5f3c25c1
2025-06-08 21:40:43.270 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5f3c25c1
2025-06-08 21:40:43.270 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2ad0043e
2025-06-08 21:40:43.271 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7c3aaef5
2025-06-08 21:40:43.271 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5a6893b2
2025-06-08 21:40:43.271 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5a6893b2
2025-06-08 21:40:43.271 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6444b713
2025-06-08 21:40:43.271 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4e1fae51
2025-06-08 21:40:43.271 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@67fbec61
2025-06-08 21:40:43.272 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7990062f
2025-06-08 21:40:43.272 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7990062f
2025-06-08 21:40:43.273 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@38adda21
2025-06-08 21:40:43.274 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b738643
2025-06-08 21:40:43.275 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@33d3fba8
2025-06-08 21:40:43.275 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@33d3fba8
2025-06-08 21:40:43.276 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4a8b2283
2025-06-08 21:40:43.276 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4a8b2283
2025-06-08 21:40:43.276 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1c219521
2025-06-08 21:40:43.277 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1c219521
2025-06-08 21:40:43.277 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1c219521
2025-06-08 21:40:43.278 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@bf74978
2025-06-08 21:40:43.278 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@bf74978
2025-06-08 21:40:43.278 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@bf74978
2025-06-08 21:40:43.279 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2755ed15
2025-06-08 21:40:43.279 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@24c14f71
2025-06-08 21:40:43.279 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@154c6e18
2025-06-08 21:40:43.279 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@154c6e18
2025-06-08 21:40:43.279 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1df904e1
2025-06-08 21:40:43.280 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1df904e1
2025-06-08 21:40:43.280 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1df904e1
2025-06-08 21:40:43.280 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@63bc4064
2025-06-08 21:40:43.281 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4da831a5
2025-06-08 21:40:43.281 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3b62baa6
2025-06-08 21:40:43.281 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3b62baa6
2025-06-08 21:40:43.282 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6e696f27
2025-06-08 21:40:43.282 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6e696f27
2025-06-08 21:40:43.282 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6e696f27
2025-06-08 21:40:43.282 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6f57adee
2025-06-08 21:40:43.282 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6f57adee
2025-06-08 21:40:43.282 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@63fe9cb8
2025-06-08 21:40:43.283 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@63fe9cb8
2025-06-08 21:40:43.283 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4d67bdeb
2025-06-08 21:40:43.283 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4d67bdeb
2025-06-08 21:40:43.283 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@68d2e337
2025-06-08 21:40:43.283 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@68d2e337
2025-06-08 21:40:43.283 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@3a380b1e
2025-06-08 21:40:43.283 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3a380b1e
2025-06-08 21:40:43.283 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@2d345bbd
2025-06-08 21:40:43.283 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@5d4c2315
2025-06-08 21:40:43.283 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@2278b8d0
2025-06-08 21:40:43.283 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@5862377a
2025-06-08 21:40:43.284 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@57847678
2025-06-08 21:40:43.292 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@346b98d0
2025-06-08 21:40:43.292 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@346b98d0
2025-06-08 21:40:43.295 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@56f47e1
2025-06-08 21:40:43.295 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@75b25881
2025-06-08 21:40:43.296 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3debbfe3
2025-06-08 21:40:43.296 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2c1c5c03
2025-06-08 21:40:43.296 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@53b3462e
2025-06-08 21:40:43.296 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@34a27a89
2025-06-08 21:40:43.296 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5456df59
2025-06-08 21:40:43.296 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1a646d94
2025-06-08 21:40:43.296 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@53afcac0
2025-06-08 21:40:43.302 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@73f94ef2] into BootstrapContext; was [null]
2025-06-08 21:40:43.302 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@73f94ef2) [was null]
2025-06-08 21:40:43.302 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@2103b02b] into BootstrapContext; was [null]
2025-06-08 21:40:43.303 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@744f4272] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@49c9f61e]
2025-06-08 21:40:43.327 [JavaFX-Launcher] DEBUG o.h.j.b.i.PersistenceUnitInfoDescriptor - Pushing class transformers for PU named 'default' on loading classloader jdk.internal.loader.ClassLoaders$AppClassLoader@506e1b77
2025-06-08 21:40:43.581 [JavaFX-Launcher] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-08 21:40:43.581 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@73f94ef2]
2025-06-08 21:40:43.581 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@73f94ef2]
2025-06-08 21:40:43.629 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-08 21:40:43.781 [JavaFX-Launcher] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@2e918f33
2025-06-08 21:40:43.783 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-08 21:40:43.799 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : SQLite
	version : 3.46.0
	  major : 3
	  minor : 46
2025-06-08 21:40:43.800 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : SQLite JDBC
	version : 3.46.0.0
	  major : 3
	  minor : 46
2025-06-08 21:40:43.800 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2
2025-06-08 21:40:43.819 [JavaFX-Launcher] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.community.dialect.SQLiteDialect, version: 3.46
2025-06-08 21:40:43.826 [JavaFX-Launcher] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-06-08 21:40:43.827 [JavaFX-Launcher] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2025-06-08 21:40:43.850 [JavaFX-Launcher] DEBUG org.hibernate.orm.jdbc.lob - HHH10010005: Disabling contextual LOB creation as createClob() method threw error : java.sql.SQLFeatureNotSupportedException
2025-06-08 21:40:43.855 [JavaFX-Launcher] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 3.46
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-08 21:40:43.872 [JavaFX-Launcher] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(PRIMITIVE_ARRAY_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-06-08 21:40:43.872 [JavaFX-Launcher] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STRING_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-08 21:40:43.879 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-06-08 21:40:43.880 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:40:43.880 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:40:43.883 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:40:43.883 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:40:43.883 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:40:43.883 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:40:43.883 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:40:43.883 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:40:43.885 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:40:43.885 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:40:43.885 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:40:43.886 [JavaFX-Launcher] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29c93f13] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4613a9aa]
2025-06-08 21:40:43.944 [JavaFX-Launcher] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-06-08 21:40:43.980 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:40:43.993 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Categoria
2025-06-08 21:40:44.005 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Categoria on table categoria
2025-06-08 21:40:44.024 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:40:44.057 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_categoria')
2025-06-08 21:40:44.060 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:40:44.060 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:40:44.066 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCategoria with lazy=false
2025-06-08 21:40:44.071 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:idCategoria]
2025-06-08 21:40:44.079 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCategoria
2025-06-08 21:40:44.084 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.id_categoria
2025-06-08 21:40:44.086 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCategoria
2025-06-08 21:40:44.094 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_categoria)]), idCategoria, identity, , ...)
2025-06-08 21:40:44.097 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:40:44.097 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:40:44.097 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:estado]
2025-06-08 21:40:44.097 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:40:44.098 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.estado
2025-06-08 21:40:44.098 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:40:44.099 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:40:44.099 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:40:44.100 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:nombre]
2025-06-08 21:40:44.100 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:40:44.101 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.nombre
2025-06-08 21:40:44.101 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:40:44.104 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:40:44.112 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:40:44.112 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Cliente
2025-06-08 21:40:44.112 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Cliente on table cliente
2025-06-08 21:40:44.113 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:40:44.116 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_cliente')
2025-06-08 21:40:44.116 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:40:44.117 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:40:44.117 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCliente with lazy=false
2025-06-08 21:40:44.117 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:idCliente]
2025-06-08 21:40:44.117 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCliente
2025-06-08 21:40:44.117 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.id_cliente
2025-06-08 21:40:44.117 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCliente
2025-06-08 21:40:44.118 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_cliente)]), idCliente, identity, , ...)
2025-06-08 21:40:44.118 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='apellido')
2025-06-08 21:40:44.119 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property apellido with lazy=false
2025-06-08 21:40:44.119 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:apellido]
2025-06-08 21:40:44.119 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for apellido
2025-06-08 21:40:44.119 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.apellido
2025-06-08 21:40:44.119 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property apellido
2025-06-08 21:40:44.120 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cant_visitas')
2025-06-08 21:40:44.120 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantVisitas with lazy=false
2025-06-08 21:40:44.120 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:cantVisitas]
2025-06-08 21:40:44.120 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantVisitas
2025-06-08 21:40:44.121 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.cant_visitas
2025-06-08 21:40:44.121 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantVisitas
2025-06-08 21:40:44.126 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='dni')
2025-06-08 21:40:44.127 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property dni with lazy=false
2025-06-08 21:40:44.127 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:dni]
2025-06-08 21:40:44.127 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for dni
2025-06-08 21:40:44.127 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.dni
2025-06-08 21:40:44.127 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property dni
2025-06-08 21:40:44.128 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
2025-06-08 21:40:44.128 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-06-08 21:40:44.129 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:email]
2025-06-08 21:40:44.129 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email
2025-06-08 21:40:44.129 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.email
2025-06-08 21:40:44.130 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property email
2025-06-08 21:40:44.130 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:40:44.131 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:40:44.131 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:estado]
2025-06-08 21:40:44.131 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:40:44.131 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.estado
2025-06-08 21:40:44.131 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:40:44.132 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:40:44.133 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:40:44.133 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:nombre]
2025-06-08 21:40:44.134 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:40:44.134 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.nombre
2025-06-08 21:40:44.135 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:40:44.135 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='telefono')
2025-06-08 21:40:44.135 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property telefono with lazy=false
2025-06-08 21:40:44.136 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:telefono]
2025-06-08 21:40:44.136 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for telefono
2025-06-08 21:40:44.136 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.telefono
2025-06-08 21:40:44.136 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property telefono
2025-06-08 21:40:44.137 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:40:44.138 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:40:44.139 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name DetPedido
2025-06-08 21:40:44.140 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.DetPedido on table detalle_pedido
2025-06-08 21:40:44.140 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:40:44.150 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_detalle_pedido')
2025-06-08 21:40:44.150 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:40:44.150 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:40:44.150 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idDetallePedido with lazy=false
2025-06-08 21:40:44.150 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:idDetallePedido]
2025-06-08 21:40:44.150 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idDetallePedido
2025-06-08 21:40:44.151 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.id_detalle_pedido
2025-06-08 21:40:44.151 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idDetallePedido
2025-06-08 21:40:44.151 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_detalle_pedido)]), idDetallePedido, identity, , ...)
2025-06-08 21:40:44.152 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cantidad')
2025-06-08 21:40:44.152 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantidad with lazy=false
2025-06-08 21:40:44.153 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:cantidad]
2025-06-08 21:40:44.153 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantidad
2025-06-08 21:40:44.153 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.cantidad
2025-06-08 21:40:44.154 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantidad
2025-06-08 21:40:44.154 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:40:44.155 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:40:44.155 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:estado]
2025-06-08 21:40:44.156 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:40:44.156 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.estado
2025-06-08 21:40:44.157 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:40:44.160 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_factura',referencedColumn='id_factura')
2025-06-08 21:40:44.164 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:40:44.174 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property factura
2025-06-08 21:40:44.174 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='igv')
2025-06-08 21:40:44.175 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property igv with lazy=false
2025-06-08 21:40:44.175 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:igv]
2025-06-08 21:40:44.175 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for igv
2025-06-08 21:40:44.176 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.igv
2025-06-08 21:40:44.176 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property igv
2025-06-08 21:40:44.177 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:40:44.178 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:40:44.178 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:40:44.179 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio_unitario')
2025-06-08 21:40:44.179 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precioUnitario with lazy=false
2025-06-08 21:40:44.180 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:precioUnitario]
2025-06-08 21:40:44.180 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precioUnitario
2025-06-08 21:40:44.181 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.precio_unitario
2025-06-08 21:40:44.181 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property precioUnitario
2025-06-08 21:40:44.182 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_producto',referencedColumn='id_producto')
2025-06-08 21:40:44.183 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:40:44.183 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property producto
2025-06-08 21:40:44.184 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='subtotal')
2025-06-08 21:40:44.184 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property subtotal with lazy=false
2025-06-08 21:40:44.185 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:subtotal]
2025-06-08 21:40:44.185 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for subtotal
2025-06-08 21:40:44.185 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.subtotal
2025-06-08 21:40:44.185 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property subtotal
2025-06-08 21:40:44.187 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:40:44.187 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:40:44.187 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:total]
2025-06-08 21:40:44.188 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:40:44.188 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.total
2025-06-08 21:40:44.189 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:40:44.190 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:40:44.191 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:40:44.191 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Empleado
2025-06-08 21:40:44.192 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Empleado on table empleado
2025-06-08 21:40:44.193 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:40:44.195 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_empleado')
2025-06-08 21:40:44.196 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:40:44.196 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:40:44.197 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-06-08 21:40:44.197 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:id]
2025-06-08 21:40:44.198 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id
2025-06-08 21:40:44.198 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.id_empleado
2025-06-08 21:40:44.199 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property id
2025-06-08 21:40:44.199 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_empleado)]), id, identity, , ...)
2025-06-08 21:40:44.199 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='apellido')
2025-06-08 21:40:44.199 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property apellido with lazy=false
2025-06-08 21:40:44.199 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:apellido]
2025-06-08 21:40:44.199 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for apellido
2025-06-08 21:40:44.201 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.apellido
2025-06-08 21:40:44.201 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property apellido
2025-06-08 21:40:44.201 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='dni')
2025-06-08 21:40:44.201 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property dni with lazy=false
2025-06-08 21:40:44.201 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:dni]
2025-06-08 21:40:44.201 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for dni
2025-06-08 21:40:44.202 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.dni
2025-06-08 21:40:44.202 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property dni
2025-06-08 21:40:44.202 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:40:44.202 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:40:44.202 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:estado]
2025-06-08 21:40:44.202 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:40:44.202 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.estado
2025-06-08 21:40:44.202 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:40:44.204 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:40:44.204 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:40:44.204 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:nombre]
2025-06-08 21:40:44.205 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:40:44.205 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.nombre
2025-06-08 21:40:44.205 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:40:44.207 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password')
2025-06-08 21:40:44.207 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-06-08 21:40:44.207 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:password]
2025-06-08 21:40:44.207 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password
2025-06-08 21:40:44.209 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.password
2025-06-08 21:40:44.209 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property password
2025-06-08 21:40:44.209 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='rol')
2025-06-08 21:40:44.210 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property rol with lazy=false
2025-06-08 21:40:44.210 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:rol]
2025-06-08 21:40:44.210 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for rol
2025-06-08 21:40:44.211 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.rol
2025-06-08 21:40:44.211 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property rol
2025-06-08 21:40:44.211 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='telefono')
2025-06-08 21:40:44.212 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property telefono with lazy=false
2025-06-08 21:40:44.212 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:telefono]
2025-06-08 21:40:44.212 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for telefono
2025-06-08 21:40:44.212 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.telefono
2025-06-08 21:40:44.213 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property telefono
2025-06-08 21:40:44.213 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='usuario')
2025-06-08 21:40:44.214 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property usuario with lazy=false
2025-06-08 21:40:44.214 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:usuario]
2025-06-08 21:40:44.214 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for usuario
2025-06-08 21:40:44.214 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.usuario
2025-06-08 21:40:44.214 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property usuario
2025-06-08 21:40:44.216 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:40:44.217 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:40:44.218 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Factura
2025-06-08 21:40:44.218 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Factura on table factura
2025-06-08 21:40:44.219 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:40:44.225 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_factura')
2025-06-08 21:40:44.225 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:40:44.225 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:40:44.225 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idFactura with lazy=false
2025-06-08 21:40:44.226 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:idFactura]
2025-06-08 21:40:44.226 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idFactura
2025-06-08 21:40:44.227 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.id_factura
2025-06-08 21:40:44.227 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idFactura
2025-06-08 21:40:44.227 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_factura)]), idFactura, identity, , ...)
2025-06-08 21:40:44.228 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_cliente',referencedColumn='id_cliente')
2025-06-08 21:40:44.228 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:40:44.229 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cliente
2025-06-08 21:40:44.230 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='codigo')
2025-06-08 21:40:44.230 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codigo with lazy=false
2025-06-08 21:40:44.230 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:codigo]
2025-06-08 21:40:44.230 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codigo
2025-06-08 21:40:44.230 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.codigo
2025-06-08 21:40:44.231 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property codigo
2025-06-08 21:40:44.232 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:40:44.232 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:40:44.232 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:estado]
2025-06-08 21:40:44.233 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:40:44.233 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.estado
2025-06-08 21:40:44.233 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:40:44.234 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fecha_emision')
2025-06-08 21:40:44.234 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaEmision with lazy=false
2025-06-08 21:40:44.234 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:fechaEmision]
2025-06-08 21:40:44.234 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaEmision
2025-06-08 21:40:44.235 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.fecha_emision
2025-06-08 21:40:44.235 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaEmision
2025-06-08 21:40:44.235 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='igv')
2025-06-08 21:40:44.236 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property igv with lazy=false
2025-06-08 21:40:44.236 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:igv]
2025-06-08 21:40:44.237 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for igv
2025-06-08 21:40:44.237 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.igv
2025-06-08 21:40:44.237 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property igv
2025-06-08 21:40:44.238 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:40:44.239 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:40:44.240 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:40:44.241 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='subtotal')
2025-06-08 21:40:44.241 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property subtotal with lazy=false
2025-06-08 21:40:44.241 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:subtotal]
2025-06-08 21:40:44.241 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for subtotal
2025-06-08 21:40:44.242 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.subtotal
2025-06-08 21:40:44.242 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property subtotal
2025-06-08 21:40:44.242 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:40:44.243 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:40:44.243 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:total]
2025-06-08 21:40:44.243 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:40:44.243 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.total
2025-06-08 21:40:44.243 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:40:44.244 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:40:44.245 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:40:44.246 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Menu
2025-06-08 21:40:44.246 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Menu on table menu
2025-06-08 21:40:44.246 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:40:44.249 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_menu')
2025-06-08 21:40:44.249 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:40:44.249 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:40:44.250 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idMenu with lazy=false
2025-06-08 21:40:44.250 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Menu:idMenu]
2025-06-08 21:40:44.250 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idMenu
2025-06-08 21:40:44.250 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: menu.id_menu
2025-06-08 21:40:44.250 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idMenu
2025-06-08 21:40:44.250 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_menu)]), idMenu, identity, , ...)
2025-06-08 21:40:44.251 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cod_pedido')
2025-06-08 21:40:44.251 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codPedido with lazy=false
2025-06-08 21:40:44.251 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Menu:codPedido]
2025-06-08 21:40:44.251 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codPedido
2025-06-08 21:40:44.251 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: menu.cod_pedido
2025-06-08 21:40:44.251 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property codPedido
2025-06-08 21:40:44.252 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:40:44.252 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:40:44.253 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:40:44.253 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_producto',referencedColumn='id_producto')
2025-06-08 21:40:44.254 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:40:44.254 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property producto
2025-06-08 21:40:44.256 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:40:44.257 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:40:44.257 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Mesa
2025-06-08 21:40:44.258 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Mesa on table mesa
2025-06-08 21:40:44.258 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:40:44.260 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_mesa')
2025-06-08 21:40:44.261 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:40:44.261 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:40:44.261 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idMesa with lazy=false
2025-06-08 21:40:44.261 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:idMesa]
2025-06-08 21:40:44.261 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idMesa
2025-06-08 21:40:44.262 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.id_mesa
2025-06-08 21:40:44.262 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idMesa
2025-06-08 21:40:44.263 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_mesa)]), idMesa, identity, , ...)
2025-06-08 21:40:44.263 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='capacidad')
2025-06-08 21:40:44.263 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property capacidad with lazy=false
2025-06-08 21:40:44.264 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:capacidad]
2025-06-08 21:40:44.264 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for capacidad
2025-06-08 21:40:44.264 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.capacidad
2025-06-08 21:40:44.264 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property capacidad
2025-06-08 21:40:44.264 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='detalle')
2025-06-08 21:40:44.265 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property detalle with lazy=false
2025-06-08 21:40:44.265 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:detalle]
2025-06-08 21:40:44.265 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for detalle
2025-06-08 21:40:44.266 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.detalle
2025-06-08 21:40:44.266 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property detalle
2025-06-08 21:40:44.266 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:40:44.267 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:40:44.267 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:estado]
2025-06-08 21:40:44.267 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:40:44.267 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.estado
2025-06-08 21:40:44.267 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:40:44.268 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='numero')
2025-06-08 21:40:44.268 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property numero with lazy=false
2025-06-08 21:40:44.268 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:numero]
2025-06-08 21:40:44.269 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for numero
2025-06-08 21:40:44.269 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.numero
2025-06-08 21:40:44.269 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property numero
2025-06-08 21:40:44.270 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:40:44.271 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:40:44.272 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Pedido
2025-06-08 21:40:44.272 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Pedido on table pedido
2025-06-08 21:40:44.273 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:40:44.276 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_pedido')
2025-06-08 21:40:44.277 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:40:44.277 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:40:44.277 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idPedido with lazy=false
2025-06-08 21:40:44.277 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:idPedido]
2025-06-08 21:40:44.277 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idPedido
2025-06-08 21:40:44.277 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.id_pedido
2025-06-08 21:40:44.278 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idPedido
2025-06-08 21:40:44.278 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_pedido)]), idPedido, identity, , ...)
2025-06-08 21:40:44.278 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cant_pedidos')
2025-06-08 21:40:44.279 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantPedidos with lazy=false
2025-06-08 21:40:44.279 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:cantPedidos]
2025-06-08 21:40:44.279 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantPedidos
2025-06-08 21:40:44.279 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.cant_pedidos
2025-06-08 21:40:44.279 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantPedidos
2025-06-08 21:40:44.280 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_cliente',referencedColumn='id_cliente')
2025-06-08 21:40:44.280 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:40:44.281 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cliente
2025-06-08 21:40:44.281 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_empleado',referencedColumn='id_empleado')
2025-06-08 21:40:44.282 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:40:44.282 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property empleado
2025-06-08 21:40:44.283 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:40:44.283 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:40:44.283 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:estado]
2025-06-08 21:40:44.283 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:40:44.283 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.estado
2025-06-08 21:40:44.283 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:40:44.284 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fecha_hora')
2025-06-08 21:40:44.284 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaHora with lazy=false
2025-06-08 21:40:44.284 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:fechaHora]
2025-06-08 21:40:44.284 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaHora
2025-06-08 21:40:44.284 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.fecha_hora
2025-06-08 21:40:44.284 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaHora
2025-06-08 21:40:44.285 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_mesa',referencedColumn='id_mesa')
2025-06-08 21:40:44.285 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:40:44.286 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property mesa
2025-06-08 21:40:44.286 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:40:44.286 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:40:44.286 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:total]
2025-06-08 21:40:44.287 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:40:44.287 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.total
2025-06-08 21:40:44.287 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:40:44.289 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:40:44.290 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:40:44.290 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Producto
2025-06-08 21:40:44.291 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Producto on table producto
2025-06-08 21:40:44.292 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:40:44.295 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_producto')
2025-06-08 21:40:44.295 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:40:44.295 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:40:44.295 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idProducto with lazy=false
2025-06-08 21:40:44.295 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:idProducto]
2025-06-08 21:40:44.295 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idProducto
2025-06-08 21:40:44.296 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.id_producto
2025-06-08 21:40:44.296 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idProducto
2025-06-08 21:40:44.296 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_producto)]), idProducto, identity, , ...)
2025-06-08 21:40:44.297 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_categoria',referencedColumn='id_categoria')
2025-06-08 21:40:44.297 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:40:44.297 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property categoria
2025-06-08 21:40:44.297 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='descripcion')
2025-06-08 21:40:44.298 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property descripcion with lazy=false
2025-06-08 21:40:44.298 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:descripcion]
2025-06-08 21:40:44.298 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for descripcion
2025-06-08 21:40:44.298 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.descripcion
2025-06-08 21:40:44.298 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property descripcion
2025-06-08 21:40:44.299 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:40:44.299 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:40:44.299 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:estado]
2025-06-08 21:40:44.299 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:40:44.299 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.estado
2025-06-08 21:40:44.299 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:40:44.300 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:40:44.300 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:40:44.300 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:nombre]
2025-06-08 21:40:44.300 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:40:44.300 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.nombre
2025-06-08 21:40:44.300 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:40:44.301 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio')
2025-06-08 21:40:44.301 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precio with lazy=false
2025-06-08 21:40:44.301 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:precio]
2025-06-08 21:40:44.301 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precio
2025-06-08 21:40:44.302 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.precio
2025-06-08 21:40:44.302 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property precio
2025-06-08 21:40:44.302 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_seccion',referencedColumn='id_seccion')
2025-06-08 21:40:44.302 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:40:44.303 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property seccion
2025-06-08 21:40:44.303 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='stock')
2025-06-08 21:40:44.303 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property stock with lazy=false
2025-06-08 21:40:44.304 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:stock]
2025-06-08 21:40:44.304 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for stock
2025-06-08 21:40:44.304 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.stock
2025-06-08 21:40:44.304 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property stock
2025-06-08 21:40:44.305 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:40:44.306 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:40:44.307 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Seccion
2025-06-08 21:40:44.308 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Seccion on table seccion
2025-06-08 21:40:44.308 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:40:44.311 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_seccion')
2025-06-08 21:40:44.311 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:40:44.311 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:40:44.311 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idSeccion with lazy=false
2025-06-08 21:40:44.311 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:idSeccion]
2025-06-08 21:40:44.311 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idSeccion
2025-06-08 21:40:44.311 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.id_seccion
2025-06-08 21:40:44.311 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idSeccion
2025-06-08 21:40:44.311 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_seccion)]), idSeccion, identity, , ...)
2025-06-08 21:40:44.312 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='detalle')
2025-06-08 21:40:44.312 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property detalle with lazy=false
2025-06-08 21:40:44.312 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:detalle]
2025-06-08 21:40:44.312 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for detalle
2025-06-08 21:40:44.312 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.detalle
2025-06-08 21:40:44.312 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property detalle
2025-06-08 21:40:44.313 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:40:44.313 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:40:44.313 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:estado]
2025-06-08 21:40:44.313 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:40:44.314 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.estado
2025-06-08 21:40:44.314 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:40:44.315 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:40:44.316 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idCategoria
2025-06-08 21:40:44.318 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:40:44.318 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:40:44.319 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idCliente
2025-06-08 21:40:44.319 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apellido
2025-06-08 21:40:44.319 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantVisitas
2025-06-08 21:40:44.319 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for dni
2025-06-08 21:40:44.319 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-06-08 21:40:44.319 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:40:44.319 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:40:44.319 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for telefono
2025-06-08 21:40:44.319 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idDetallePedido
2025-06-08 21:40:44.319 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantidad
2025-06-08 21:40:44.319 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:40:44.319 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for igv
2025-06-08 21:40:44.319 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precioUnitario
2025-06-08 21:40:44.319 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for subtotal
2025-06-08 21:40:44.319 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:40:44.319 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-06-08 21:40:44.319 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apellido
2025-06-08 21:40:44.319 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for dni
2025-06-08 21:40:44.319 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:40:44.320 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:40:44.320 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-06-08 21:40:44.320 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for rol
2025-06-08 21:40:44.320 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for telefono
2025-06-08 21:40:44.320 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for usuario
2025-06-08 21:40:44.320 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idFactura
2025-06-08 21:40:44.320 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codigo
2025-06-08 21:40:44.320 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:40:44.320 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaEmision
2025-06-08 21:40:44.320 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for igv
2025-06-08 21:40:44.320 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for subtotal
2025-06-08 21:40:44.320 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:40:44.320 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idMenu
2025-06-08 21:40:44.320 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codPedido
2025-06-08 21:40:44.320 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idMesa
2025-06-08 21:40:44.320 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for capacidad
2025-06-08 21:40:44.320 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for detalle
2025-06-08 21:40:44.320 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:40:44.320 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for numero
2025-06-08 21:40:44.320 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idPedido
2025-06-08 21:40:44.320 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantPedidos
2025-06-08 21:40:44.320 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:40:44.321 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaHora
2025-06-08 21:40:44.321 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:40:44.321 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idProducto
2025-06-08 21:40:44.321 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for descripcion
2025-06-08 21:40:44.321 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:40:44.321 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:40:44.321 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precio
2025-06-08 21:40:44.321 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for stock
2025-06-08 21:40:44.322 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idSeccion
2025-06-08 21:40:44.322 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for detalle
2025-06-08 21:40:44.322 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:40:44.333 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_categoria] to be non-null as it is part of the primary key for table [categoria]
2025-06-08 21:40:44.333 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_cliente] to be non-null as it is part of the primary key for table [cliente]
2025-06-08 21:40:44.333 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_detalle_pedido] to be non-null as it is part of the primary key for table [detalle_pedido]
2025-06-08 21:40:44.333 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_empleado] to be non-null as it is part of the primary key for table [empleado]
2025-06-08 21:40:44.333 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_factura] to be non-null as it is part of the primary key for table [factura]
2025-06-08 21:40:44.333 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_menu] to be non-null as it is part of the primary key for table [menu]
2025-06-08 21:40:44.333 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_mesa] to be non-null as it is part of the primary key for table [mesa]
2025-06-08 21:40:44.333 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_pedido] to be non-null as it is part of the primary key for table [pedido]
2025-06-08 21:40:44.333 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_producto] to be non-null as it is part of the primary key for table [producto]
2025-06-08 21:40:44.333 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_seccion] to be non-null as it is part of the primary key for table [seccion]
2025-06-08 21:40:44.744 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2025-06-08 21:40:44.790 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:40:44.790 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=23, javafx.runtime.version=21.0.1+6, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@483b7ad4, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.community.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant\target\classes;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.0\jackson-annotations-2.17.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.19.0\jackson-core-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.19.0\jackson-databind-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-xml\2.19.0\jackson-dataformat-xml-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\woodstox\woodstox-core\7.1.0\woodstox-core-7.1.0.jar;C:\Users\USUARIO\.m2\repository\com\github\virtuald\curvesapi\1.07\curvesapi-1.07.jar;C:\Users\USUARIO\.m2\repository\com\lowagie\itext\2.1.7.js10\itext-2.1.7.js10.jar;C:\Users\USUARIO\.m2\repository\com\miglayout\miglayout\3.7.4\miglayout-3.7.4.jar;C:\Users\USUARIO\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\SparseBitSet\1.2\SparseBitSet-1.2.jar;C:\Users\USUARIO\.m2\repository\commons-beanutils\commons-beanutils\1.9.4\commons-beanutils-1.9.4.jar;C:\Users\USUARIO\.m2\repository\commons-codec\commons-codec\1.18.0\commons-codec-1.18.0.jar;C:\Users\USUARIO\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\USUARIO\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\USUARIO\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\USUARIO\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\USUARIO\.m2\repository\io\github\mkpaz\atlantafx-base\2.0.0\atlantafx-base-2.0.0.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-commons\1.15.0\micrometer-commons-1.15.0.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-observation\1.15.0\micrometer-observation-1.15.0.jar;C:\Users\USUARIO\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\USUARIO\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\USUARIO\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\USUARIO\.m2\repository\jakarta\el\jakarta.el-api\4.0.0\jakarta.el-api-4.0.0.jar;C:\Users\USUARIO\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\USUARIO\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\USUARIO\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\USUARIO\.m2\repository\net\bytebuddy\byte-buddy\1.17.5\byte-buddy-1.17.5.jar;C:\Users\USUARIO\.m2\repository\net\sf\jasperreports\jasperreports\6.20.0\jasperreports-6.20.0.jar;C:\Users\USUARIO\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-collections4\4.2\commons-collections4-4.2.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-compress\1.21\commons-compress-1.21.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-math3\3.6.1\commons-math3-3.6.1.jar;C:\Users\USUARIO\.m2\repository\org\apache\groovy\groovy\4.0.6\groovy-4.0.6.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi\5.2.3\poi-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml\5.2.3\poi-ooxml-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml-lite\5.2.3\poi-ooxml-lite-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\xmlbeans\xmlbeans\5.1.1\xmlbeans-5.1.1.jar;C:\Users\USUARIO\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcprov-jdk15on\1.70\bcprov-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcutil-jdk15on\1.70\bcutil-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\codehaus\woodstox\stax2-api\4.2.2\stax2-api-4.2.2.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\jdt\ecj\3.21.0\ecj-3.21.0.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jakarta.el\4.0.2\jakarta.el-4.0.2.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-community-dialects\6.4.4.Final\hibernate-community-dialects-6.4.4.Final.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-core\6.6.15.Final\hibernate-core-6.6.15.Final.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.2.Final\hibernate-validator-7.0.2.Final.jar;C:\Users\USUARIO\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jcommon\1.0.23\jcommon-1.0.23.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jfreechart\1.0.19\jfreechart-1.0.19.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\bootstrapfx\bootstrapfx-core\0.2.4\bootstrapfx-core-0.2.4.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-core\12.3.1\ikonli-core-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-fontawesome5-pack\12.3.1\ikonli-fontawesome5-pack-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-javafx\12.3.1\ikonli-javafx-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aop\6.2.7\spring-aop-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aspects\6.2.7\spring-aspects-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-beans\6.2.7\spring-beans-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-context\6.2.7\spring-context-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-core\6.2.7\spring-core-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-expression\6.2.7\spring-expression-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jcl\6.2.7\spring-jcl-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jdbc\6.2.7\spring-jdbc-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-orm\6.2.7\spring-orm-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-tx\6.2.7\spring-tx-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot\3.5.0\spring-boot-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.5.0\spring-boot-autoconfigure-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter\3.5.0\spring-boot-starter-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.5.0\spring-boot-starter-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.5.0\spring-boot-starter-jdbc-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.5.0\spring-boot-starter-logging-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-commons\3.5.0\spring-data-commons-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-jpa\3.5.0\spring-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\xerial\sqlite-jdbc\3.46.0.0\sqlite-jdbc-3.46.0.0.jar;C:\Users\USUARIO\.m2\repository\org\yaml\snakeyaml\2.4\snakeyaml-2.4.jar;C:\Users\USUARIO\.m2\repository\win\zqxu\jrviewer-fx\0.1.1\jrviewer-fx-0.1.1.jar, LOGBACK_ROLLINGPOLICY_MAX_FILE_SIZE=10485760, java.vm.vendor=Oracle Corporation, LOG_PATH=logs/, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Bogota, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, javafx.version=21.0.1, os.name=Windows 11, java.vm.specification.version=23, APPLICATION_NAME=ProyectoRestaurant, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=MX, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk-23\bin, sun.java.command=pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.use_sql_comments=true, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@4e8591b, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\USUARIO, user.language=es, java.specification.vendor=Oracle Corporation, jdk.module.path=C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-fxml\21.0.1\javafx-fxml-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-fxml\21.0.1\javafx-fxml-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-swing\21.0.1\javafx-swing-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-swing\21.0.1\javafx-swing-21.0.1.jar, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-23, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7-58, user.name=USUARIO, stdout.encoding=Cp1252, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, FILE_LOG_PATTERN=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, LOG_FILE=logs/restaurant.log, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\USUARIO\AppData\Local\Temp\, java.version=23.0.2, LOGBACK_ROLLINGPOLICY_CLEAN_HISTORY_ON_START=false, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=15504, sun.os.patch.level=, CONSOLE_LOG_CHARSET=windows-1252, LOGBACK_ROLLINGPOLICY_MAX_HISTORY=30, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2a475e84, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-23\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;c:\Users\USUARIO\AppData\Local\Programs\cursor\resources\app\bin;C:\Users\USUARIO\AppData\Local\Programs\Python\Python313\Scripts\;C:\Users\USUARIO\AppData\Local\Programs\Python\Launcher\;C:\Users\USUARIO\AppData\Local\Microsoft\WindowsApps;C:\Users\USUARIO\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\USUARIO\AppData\Roaming\npm;C:\flutter\bin;C:\Users\USUARIO\AppData\Local\Programs\Python\Python313\;C:\ffpmg\bin;C:\Users\USUARIO\Downloads\apache-maven-3.9.9\bin;C:\Users\USUARIO\AppData\Local\GitHubDesktop\bin;C:\Users\USUARIO\AppData\Local\Microsoft\WinGet\Packages\Schniz.fnm_Microsoft.Winget.Source_8wekyb3d8bbwe;C:\Users\USUARIO\AppData\Local\Programs\cursor\resources\app\bin;., stderr.encoding=Cp1252, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=23.0.2+7-58, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), CONSOLE_LOG_PATTERN=%d{HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{36}) - %msg%n, java.class.version=67.0, LOGGED_APPLICATION_NAME=[ProyectoRestaurant] , LOGBACK_ROLLINGPOLICY_TOTAL_SIZE_CAP=104857600}
2025-06-08 21:40:44.796 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-06-08 21:40:44.802 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:40:44.802 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:40:44.802 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:40:44.802 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:40:44.802 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:40:44.802 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:40:44.803 [JavaFX-Launcher] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:40:44.805 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:40:44.806 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:40:44.806 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:40:44.806 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:40:44.806 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:40:44.806 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:40:44.807 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:40:44.807 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:40:44.846 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:40:44.846 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:40:44.850 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:40:44.850 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:40:44.852 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:40:44.852 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:40:44.857 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:40:44.857 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:40:44.860 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:40:44.860 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:40:44.864 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:40:44.864 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:40:44.867 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:40:44.867 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:40:44.869 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:40:44.869 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:40:44.872 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:40:44.872 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:40:44.875 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:40:44.923 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-06-08 21:40:44.923 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-06-08 21:40:44.924 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-06-08 21:40:44.925 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-06-08 21:40:44.927 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6e6bd090] under count; prior registration was null
2025-06-08 21:40:44.928 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4ded2a07] under every; prior registration was null
2025-06-08 21:40:44.928 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2f3e7afe] under any; prior registration was null
2025-06-08 21:40:44.929 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-06-08 21:40:44.929 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-06-08 21:40:44.929 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-06-08 21:40:44.929 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-06-08 21:40:44.929 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-06-08 21:40:44.929 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-06-08 21:40:44.929 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-06-08 21:40:44.929 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-06-08 21:40:44.929 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-06-08 21:40:44.930 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-06-08 21:40:44.930 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-06-08 21:40:44.930 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-06-08 21:40:44.930 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-06-08 21:40:44.930 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-06-08 21:40:44.930 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-06-08 21:40:44.930 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-06-08 21:40:44.930 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-06-08 21:40:44.932 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ad709e6] under sinh; prior registration was null
2025-06-08 21:40:44.932 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@36d1f686] under cosh; prior registration was null
2025-06-08 21:40:44.932 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5328a669] under tanh; prior registration was null
2025-06-08 21:40:44.932 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16c30479] under pi; prior registration was null
2025-06-08 21:40:44.932 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@74b9a77e] under log; prior registration was null
2025-06-08 21:40:44.933 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-06-08 21:40:44.933 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-06-08 21:40:44.933 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-06-08 21:40:44.933 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-06-08 21:40:44.933 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-06-08 21:40:44.933 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-06-08 21:40:44.934 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-06-08 21:40:44.934 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-06-08 21:40:44.934 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-06-08 21:40:44.934 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-06-08 21:40:44.934 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-06-08 21:40:44.934 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-06-08 21:40:44.935 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6f0ff6ea] under position; prior registration was null
2025-06-08 21:40:44.941 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7a85c962] under overlay; prior registration was null
2025-06-08 21:40:44.942 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@2f82b308] under trim; prior registration was null
2025-06-08 21:40:44.944 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@18a8d6d0] under cast; prior registration was null
2025-06-08 21:40:44.944 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5718e93] under collate; prior registration was null
2025-06-08 21:40:44.945 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5436b044] under extract; prior registration was null
2025-06-08 21:40:44.945 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-06-08 21:40:44.945 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-06-08 21:40:44.946 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3057daa7] under ifnull; prior registration was null
2025-06-08 21:40:44.946 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-06-08 21:40:44.946 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-06-08 21:40:44.947 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@7f29e2f0] under pad; prior registration was null
2025-06-08 21:40:44.947 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@43d2f030] under str; prior registration was null
2025-06-08 21:40:44.950 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2b937f3d] under format; prior registration was null
2025-06-08 21:40:44.951 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@27644257] under timestampadd; prior registration was null
2025-06-08 21:40:44.953 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@e371fbc] under timestampdiff; prior registration was null
2025-06-08 21:40:44.953 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-06-08 21:40:44.953 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-06-08 21:40:44.953 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1151a380] under current_date; prior registration was null
2025-06-08 21:40:44.953 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6cacf6f2] under current_time; prior registration was null
2025-06-08 21:40:44.953 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3b717473] under current_timestamp; prior registration was null
2025-06-08 21:40:44.953 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-06-08 21:40:44.953 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-06-08 21:40:44.954 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-06-08 21:40:44.954 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@70867d99] under local_date; prior registration was null
2025-06-08 21:40:44.954 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6cd78daa] under local_time; prior registration was null
2025-06-08 21:40:44.954 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6747eda4] under local_datetime; prior registration was null
2025-06-08 21:40:44.954 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@57a5dfd3] under offset_datetime; prior registration was null
2025-06-08 21:40:44.954 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-06-08 21:40:44.954 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-06-08 21:40:44.954 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-06-08 21:40:44.954 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-06-08 21:40:44.954 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@140c0a0b] under instant; prior registration was null
2025-06-08 21:40:44.954 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-06-08 21:40:44.955 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@111e9de1] under sql; prior registration was null
2025-06-08 21:40:44.955 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66f011a8] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-06-08 21:40:44.955 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e5c59be] under left; prior registration was NamedSqmFunctionTemplate(left)
2025-06-08 21:40:44.955 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fc37384] under right; prior registration was NamedSqmFunctionTemplate(right)
2025-06-08 21:40:44.955 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ad70608] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-06-08 21:40:44.956 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(length)] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-06-08 21:40:44.956 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-06-08 21:40:44.956 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under least; prior registration was NamedSqmFunctionTemplate(least)
2025-06-08 21:40:44.956 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under greatest; prior registration was NamedSqmFunctionTemplate(greatest)
2025-06-08 21:40:44.956 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-06-08 21:40:44.956 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-06-08 21:40:44.958 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@42e5d88f] under trunc; prior registration was null
2025-06-08 21:40:44.958 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-06-08 21:40:44.958 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@74b9a77e
2025-06-08 21:40:44.958 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-06-08 21:40:44.958 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-06-08 21:40:44.958 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-06-08 21:40:44.959 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-06-08 21:40:44.959 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2025-06-08 21:40:44.959 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : chr -> char
2025-06-08 21:40:44.960 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@72bfdee2] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-06-08 21:40:44.960 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5d52d61c] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2025-06-08 21:40:44.960 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3791b442] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2025-06-08 21:40:44.960 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(strftime)] under format; prior registration was org.hibernate.dialect.function.FormatFunction@2b937f3d
2025-06-08 21:40:44.960 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-06-08 21:40:44.961 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-06-08 21:40:44.961 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-06-08 21:40:44.961 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-06-08 21:40:44.961 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-06-08 21:40:44.961 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-06-08 21:40:44.962 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@283c775] under listagg; prior registration was null
2025-06-08 21:40:44.964 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg)
2025-06-08 21:40:44.964 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-06-08 21:40:44.964 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2025-06-08 21:40:44.964 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-06-08 21:40:44.964 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-06-08 21:40:44.964 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-06-08 21:40:44.964 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg)
2025-06-08 21:40:44.964 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type)
2025-06-08 21:40:44.964 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-06-08 21:40:44.964 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg)
2025-06-08 21:40:44.964 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-06-08 21:40:44.964 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-06-08 21:40:44.964 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-06-08 21:40:44.964 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-06-08 21:40:44.964 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2025-06-08 21:40:44.964 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-06-08 21:40:44.964 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-06-08 21:40:44.964 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-06-08 21:40:44.964 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date
2025-06-08 21:40:44.964 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time
2025-06-08 21:40:44.964 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp
2025-06-08 21:40:44.964 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date
2025-06-08 21:40:44.964 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant
2025-06-08 21:40:44.965 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time
2025-06-08 21:40:44.965 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp
2025-06-08 21:40:44.965 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-06-08 21:40:44.965 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-06-08 21:40:44.966 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-06-08 21:40:44.966 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2025-06-08 21:40:44.966 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-06-08 21:40:44.966 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-06-08 21:40:44.966 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value
2025-06-08 21:40:44.966 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg)
2025-06-08 21:40:44.966 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-06-08 21:40:44.966 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-06-08 21:40:44.966 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-06-08 21:40:44.966 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant
2025-06-08 21:40:44.966 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-06-08 21:40:44.966 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value
2025-06-08 21:40:44.966 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-06-08 21:40:44.966 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-06-08 21:40:44.966 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-06-08 21:40:44.966 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-06-08 21:40:44.967 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-06-08 21:40:44.967 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-06-08 21:40:44.967 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date
2025-06-08 21:40:44.967 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime
2025-06-08 21:40:44.967 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time
2025-06-08 21:40:44.967 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date
2025-06-08 21:40:44.967 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime
2025-06-08 21:40:44.967 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time
2025-06-08 21:40:44.967 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(pattern, string[, start])
2025-06-08 21:40:44.967 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-06-08 21:40:44.967 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string)
2025-06-08 21:40:44.967 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding])
2025-06-08 21:40:44.967 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-06-08 21:40:44.967 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg)
2025-06-08 21:40:44.967 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg)
2025-06-08 21:40:44.967 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-06-08 21:40:44.967 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-06-08 21:40:44.967 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1)
2025-06-08 21:40:44.967 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-06-08 21:40:44.967 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-06-08 21:40:44.967 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2025-06-08 21:40:44.968 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-06-08 21:40:44.968 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi
2025-06-08 21:40:44.968 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-06-08 21:40:44.968 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-06-08 21:40:44.968 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-06-08 21:40:44.968 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-06-08 21:40:44.968 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-06-08 21:40:44.968 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-06-08 21:40:44.968 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number()
2025-06-08 21:40:44.968 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding])
2025-06-08 21:40:44.968 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-06-08 21:40:44.968 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-06-08 21:40:44.968 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-06-08 21:40:44.968 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-06-08 21:40:44.968 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql
2025-06-08 21:40:44.968 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-06-08 21:40:44.968 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg)
2025-06-08 21:40:44.968 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-06-08 21:40:44.968 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-06-08 21:40:44.968 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg)
2025-06-08 21:40:44.968 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-06-08 21:40:44.968 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-06-08 21:40:44.968 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-06-08 21:40:44.968 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-06-08 21:40:44.968 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-06-08 21:40:44.968 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... )
2025-06-08 21:40:44.968 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... )
2025-06-08 21:40:44.968 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string)
2025-06-08 21:40:44.975 [JavaFX-Launcher] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048)
2025-06-08 21:40:45.057 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:40:45.059 [JavaFX-Launcher] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-06-08 21:40:45.161 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.170 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.179 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.179 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.180 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:40:45.180 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:40:45.387 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Factura]: private accessor [cliente]
2025-06-08 21:40:45.395 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.395 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.421 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:40:45.422 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:40:45.449 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Empleado]: private accessor [apellido]
2025-06-08 21:40:45.450 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:40:45.451 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:40:45.465 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Seccion]: private accessor [detalle]
2025-06-08 21:40:45.466 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:40:45.467 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:40:45.492 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Cliente]: private accessor [apellido]
2025-06-08 21:40:45.493 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.493 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.493 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.493 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.493 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:40:45.493 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:40:45.509 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Menu]: private accessor [codPedido]
2025-06-08 21:40:45.509 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.510 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.511 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.511 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.511 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.511 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.511 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.511 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.511 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:40:45.511 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:40:45.527 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido]: private accessor [cantidad]
2025-06-08 21:40:45.528 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.528 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.528 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.529 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.529 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.529 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.529 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.529 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:40:45.529 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:40:45.543 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Producto]: private accessor [categoria]
2025-06-08 21:40:45.544 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.544 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.545 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:40:45.545 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:40:45.554 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Categoria]: private accessor [estado]
2025-06-08 21:40:45.556 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:40:45.556 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:40:45.568 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Mesa]: private accessor [capacidad]
2025-06-08 21:40:45.569 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.569 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.569 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.569 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.569 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.569 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.569 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:40:45.569 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:40:45.581 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Pedido]: private accessor [cantPedidos]
2025-06-08 21:40:45.582 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.582 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.582 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:40:45.612 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks
2025-06-08 21:40:45.612 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente]
2025-06-08 21:40:45.618 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido]
2025-06-08 21:40:45.618 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Factura) `staticFetchableList` generator
2025-06-08 21:40:45.618 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Empleado) `staticFetchableList` generator
2025-06-08 21:40:45.619 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Seccion) `staticFetchableList` generator
2025-06-08 21:40:45.619 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Cliente) `staticFetchableList` generator
2025-06-08 21:40:45.619 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido]
2025-06-08 21:40:45.619 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto]
2025-06-08 21:40:45.619 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Menu) `staticFetchableList` generator
2025-06-08 21:40:45.619 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura]
2025-06-08 21:40:45.619 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido]
2025-06-08 21:40:45.620 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto]
2025-06-08 21:40:45.620 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.DetPedido) `staticFetchableList` generator
2025-06-08 21:40:45.620 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria]
2025-06-08 21:40:45.620 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion]
2025-06-08 21:40:45.620 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Producto) `staticFetchableList` generator
2025-06-08 21:40:45.620 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Categoria) `staticFetchableList` generator
2025-06-08 21:40:45.620 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Mesa) `staticFetchableList` generator
2025-06-08 21:40:45.620 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente]
2025-06-08 21:40:45.620 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado]
2025-06-08 21:40:45.621 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa]
2025-06-08 21:40:45.621 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Pedido) `staticFetchableList` generator
2025-06-08 21:40:45.723 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2025-06-08 21:40:45.726 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Factura)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura] 
2025-06-08 21:40:45.738 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@589d2bfc] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente] 
2025-06-08 21:40:45.740 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:40:45.745 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@621a78ca] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido] 
2025-06-08 21:40:45.745 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:40:45.745 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@ce02d78] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente] 
2025-06-08 21:40:45.745 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:40:45.746 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4e700202] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado] 
2025-06-08 21:40:45.746 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:40:45.746 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4b0dce44] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa] 
2025-06-08 21:40:45.747 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:40:45.753 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.cantVisitas]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.email]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.nombre]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.telefono]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.codigo]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.fechaEmision]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.igv]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.rol]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.telefono]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.subtotal]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.total]

2025-06-08 21:40:45.758 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (f1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura) {
          primaryTableReference : factura as f1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente) {
              primaryTableReference : cliente as c1_0
            }
            left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido) {
              primaryTableReference : pedido as p1_0
              TableGroupJoins {
                left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente) {
                  primaryTableReference : cliente as c2_0
                }
                left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado) {
                  primaryTableReference : empleado as e1_0
                }
                left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa) {
                  primaryTableReference : mesa as m1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:40:45.770 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:40:45.771 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Factura */ select id_factura from factura where id_factura=?
2025-06-08 21:40:45.771 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Factura */insert into factura (id_cliente,codigo,estado,fecha_emision,igv,id_pedido,subtotal,total) values (?,?,?,?,?,?,?,?)
2025-06-08 21:40:45.771 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Factura */update factura set id_cliente=?,codigo=?,estado=?,fecha_emision=?,igv=?,id_pedido=?,subtotal=?,total=? where id_factura=?
2025-06-08 21:40:45.771 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Factura */delete from factura where id_factura=?
2025-06-08 21:40:45.771 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:40:45.771 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:40:45.772 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.rol]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.telefono]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.usuario]

2025-06-08 21:40:45.772 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:40:45.772 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:40:45.773 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Empleado */ select id_empleado from empleado where id_empleado=?
2025-06-08 21:40:45.773 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */insert into empleado (apellido,dni,estado,nombre,password,rol,telefono,usuario) values (?,?,?,?,?,?,?,?)
2025-06-08 21:40:45.773 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */update empleado set apellido=?,dni=?,estado=?,nombre=?,password=?,rol=?,telefono=?,usuario=? where id_empleado=?
2025-06-08 21:40:45.773 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */delete from empleado where id_empleado=?
2025-06-08 21:40:45.773 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:40:45.773 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Seccion)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] 
2025-06-08 21:40:45.773 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Seccion]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion.detalle]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion.estado]

2025-06-08 21:40:45.774 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Seccion) {
          primaryTableReference : seccion as s1_0
        }
      }
    }

2025-06-08 21:40:45.774 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:40:45.774 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Seccion */ select id_seccion from seccion where id_seccion=?
2025-06-08 21:40:45.774 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */insert into seccion (detalle,estado) values (?,?)
2025-06-08 21:40:45.774 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */update seccion set detalle=?,estado=? where id_seccion=?
2025-06-08 21:40:45.774 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */delete from seccion where id_seccion=?
2025-06-08 21:40:45.774 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:40:45.774 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Cliente)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] 
2025-06-08 21:40:45.775 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Cliente]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.cantVisitas]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.email]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.nombre]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.telefono]

2025-06-08 21:40:45.775 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Cliente) {
          primaryTableReference : cliente as c1_0
        }
      }
    }

2025-06-08 21:40:45.775 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:40:45.775 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Cliente */ select id_cliente from cliente where id_cliente=?
2025-06-08 21:40:45.775 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */insert into cliente (apellido,cant_visitas,dni,email,estado,nombre,telefono) values (?,?,?,?,?,?,?)
2025-06-08 21:40:45.775 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */update cliente set apellido=?,cant_visitas=?,dni=?,email=?,estado=?,nombre=?,telefono=? where id_cliente=?
2025-06-08 21:40:45.776 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */delete from cliente where id_cliente=?
2025-06-08 21:40:45.776 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:40:45.776 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Menu)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu] 
2025-06-08 21:40:45.776 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@493d435d] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido] 
2025-06-08 21:40:45.776 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:40:45.776 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@21d54a0d] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente] 
2025-06-08 21:40:45.777 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:40:45.777 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@ac3982d] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado] 
2025-06-08 21:40:45.777 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:40:45.778 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@15597a0e] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa] 
2025-06-08 21:40:45.778 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m2_0
2025-06-08 21:40:45.778 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@365de453] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto] 
2025-06-08 21:40:45.778 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p2_0
2025-06-08 21:40:45.779 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3dd355b7] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria] 
2025-06-08 21:40:45.779 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:40:45.779 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2bc7b0d0] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion] 
2025-06-08 21:40:45.779 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:40:45.780 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.codPedido]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.rol]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.telefono]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.total]
 |  \-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.descripcion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.precio]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion.detalle]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.stock]

2025-06-08 21:40:45.780 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu) {
          primaryTableReference : menu as m1_0
          TableGroupJoins {
            left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido) {
              primaryTableReference : pedido as p1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente) {
                  primaryTableReference : cliente as c1_0
                }
                left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado) {
                  primaryTableReference : empleado as e1_0
                }
                left  join LazyTableGroup (m2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa) {
                  primaryTableReference : mesa as m2_0
                }
              }
            }
            left  join LazyTableGroup (p2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto) {
              primaryTableReference : producto as p2_0
              TableGroupJoins {
                left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria) {
                  primaryTableReference : categoria as c2_0
                }
                left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion) {
                  primaryTableReference : seccion as s1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:40:45.781 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:40:45.781 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Menu */ select id_menu from menu where id_menu=?
2025-06-08 21:40:45.781 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Menu */insert into menu (cod_pedido,id_pedido,id_producto) values (?,?,?)
2025-06-08 21:40:45.781 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Menu */update menu set cod_pedido=?,id_pedido=?,id_producto=? where id_menu=?
2025-06-08 21:40:45.781 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Menu */delete from menu where id_menu=?
2025-06-08 21:40:45.781 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : dp1_0
2025-06-08 21:40:45.781 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.DetPedido)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] 
2025-06-08 21:40:45.782 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2c363b21] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura] 
2025-06-08 21:40:45.782 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2025-06-08 21:40:45.782 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@b6fbdfd] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente] 
2025-06-08 21:40:45.782 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:40:45.783 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1db8dd70] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido] 
2025-06-08 21:40:45.783 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:40:45.783 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@69e9bd2d] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente] 
2025-06-08 21:40:45.783 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:40:45.784 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@741b6c02] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado] 
2025-06-08 21:40:45.784 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:40:45.785 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@26db729] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa] 
2025-06-08 21:40:45.785 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:40:45.786 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@59e5a949] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido] 
2025-06-08 21:40:45.787 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p2_0
2025-06-08 21:40:45.788 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4668a3ed] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente] 
2025-06-08 21:40:45.788 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c3_0
2025-06-08 21:40:45.789 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@97f4549] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado] 
2025-06-08 21:40:45.789 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e2_0
2025-06-08 21:40:45.790 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@68551823] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa] 
2025-06-08 21:40:45.790 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m2_0
2025-06-08 21:40:45.790 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@240404cb] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto] 
2025-06-08 21:40:45.790 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p3_0
2025-06-08 21:40:45.791 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2770bc6d] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria] 
2025-06-08 21:40:45.791 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c4_0
2025-06-08 21:40:45.791 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@54d6e0c7] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion] 
2025-06-08 21:40:45.791 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:40:45.792 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.cantidad]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.estado]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.telefono]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.codigo]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.fechaEmision]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.igv]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cantPedidos]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.apellido]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.cantVisitas]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.dni]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.email]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.estado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.nombre]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.telefono]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.apellido]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.dni]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.estado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.nombre]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.password]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.rol]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.telefono]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.usuario]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.fechaHora]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.capacidad]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.detalle]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.estado]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.numero]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.total]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.subtotal]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.igv]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.rol]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.telefono]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.precioUnitario]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.descripcion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.precio]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion.detalle]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.stock]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.subtotal]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.total]

2025-06-08 21:40:45.793 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (dp1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido) {
          primaryTableReference : detalle_pedido as dp1_0
          TableGroupJoins {
            left  join LazyTableGroup (f1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura) {
              primaryTableReference : factura as f1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente) {
                  primaryTableReference : cliente as c1_0
                }
                left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido) {
                  primaryTableReference : pedido as p1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente) {
                      primaryTableReference : cliente as c2_0
                    }
                    left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado) {
                      primaryTableReference : empleado as e1_0
                    }
                    left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa) {
                      primaryTableReference : mesa as m1_0
                    }
                  }
                }
              }
            }
             join LazyTableGroup (p2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido) {
              primaryTableReference : pedido as p2_0
              TableGroupJoins {
                left  join LazyTableGroup (c3 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente) {
                  primaryTableReference : cliente as c3_0
                }
                left  join LazyTableGroup (e2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado) {
                  primaryTableReference : empleado as e2_0
                }
                left  join LazyTableGroup (m2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa) {
                  primaryTableReference : mesa as m2_0
                }
              }
            }
             join LazyTableGroup (p3 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto) {
              primaryTableReference : producto as p3_0
              TableGroupJoins {
                left  join LazyTableGroup (c4 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria) {
                  primaryTableReference : categoria as c4_0
                }
                left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion) {
                  primaryTableReference : seccion as s1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:40:45.794 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:40:45.794 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */ select id_detalle_pedido from detalle_pedido where id_detalle_pedido=?
2025-06-08 21:40:45.794 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */insert into detalle_pedido (cantidad,estado,id_factura,igv,id_pedido,precio_unitario,id_producto,subtotal,total) values (?,?,?,?,?,?,?,?,?)
2025-06-08 21:40:45.794 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */update detalle_pedido set cantidad=?,estado=?,id_factura=?,igv=?,id_pedido=?,precio_unitario=?,id_producto=?,subtotal=?,total=? where id_detalle_pedido=?
2025-06-08 21:40:45.794 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */delete from detalle_pedido where id_detalle_pedido=?
2025-06-08 21:40:45.795 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:40:45.795 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Producto)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto] 
2025-06-08 21:40:45.795 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@10240269] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria] 
2025-06-08 21:40:45.796 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:40:45.796 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@321557d4] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion] 
2025-06-08 21:40:45.796 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:40:45.797 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.descripcion]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.precio]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion.detalle]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.stock]

2025-06-08 21:40:45.797 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto) {
          primaryTableReference : producto as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria) {
              primaryTableReference : categoria as c1_0
            }
            left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion) {
              primaryTableReference : seccion as s1_0
            }
          }
        }
      }
    }

2025-06-08 21:40:45.798 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:40:45.798 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Producto */ select id_producto from producto where id_producto=?
2025-06-08 21:40:45.798 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Producto */insert into producto (id_categoria,descripcion,estado,nombre,precio,id_seccion,stock) values (?,?,?,?,?,?,?)
2025-06-08 21:40:45.798 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Producto */update producto set id_categoria=?,descripcion=?,estado=?,nombre=?,precio=?,id_seccion=?,stock=? where id_producto=?
2025-06-08 21:40:45.798 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Producto */delete from producto where id_producto=?
2025-06-08 21:40:45.798 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:40:45.798 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Categoria)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] 
2025-06-08 21:40:45.798 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Categoria]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Categoria.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Categoria.nombre]

2025-06-08 21:40:45.799 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Categoria) {
          primaryTableReference : categoria as c1_0
        }
      }
    }

2025-06-08 21:40:45.799 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:40:45.799 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Categoria */ select id_categoria from categoria where id_categoria=?
2025-06-08 21:40:45.799 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */insert into categoria (estado,nombre) values (?,?)
2025-06-08 21:40:45.799 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */update categoria set estado=?,nombre=? where id_categoria=?
2025-06-08 21:40:45.799 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */delete from categoria where id_categoria=?
2025-06-08 21:40:45.799 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:40:45.799 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Mesa)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] 
2025-06-08 21:40:45.799 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Mesa]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.capacidad]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.detalle]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.numero]

2025-06-08 21:40:45.799 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Mesa) {
          primaryTableReference : mesa as m1_0
        }
      }
    }

2025-06-08 21:40:45.800 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:40:45.800 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Mesa */ select id_mesa from mesa where id_mesa=?
2025-06-08 21:40:45.800 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */insert into mesa (capacidad,detalle,estado,numero) values (?,?,?,?)
2025-06-08 21:40:45.800 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */update mesa set capacidad=?,detalle=?,estado=?,numero=? where id_mesa=?
2025-06-08 21:40:45.800 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */delete from mesa where id_mesa=?
2025-06-08 21:40:45.800 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:40:45.800 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Pedido)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] 
2025-06-08 21:40:45.801 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7ee48b4d] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente] 
2025-06-08 21:40:45.801 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:40:45.802 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1dedef09] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado] 
2025-06-08 21:40:45.802 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:40:45.803 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4e0c1abd] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa] 
2025-06-08 21:40:45.803 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:40:45.803 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cantPedidos]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.cantVisitas]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.email]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.nombre]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.telefono]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.password]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.rol]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.telefono]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.usuario]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.fechaHora]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.capacidad]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.detalle]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.numero]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.total]

2025-06-08 21:40:45.804 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido) {
          primaryTableReference : pedido as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente) {
              primaryTableReference : cliente as c1_0
            }
            left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado) {
              primaryTableReference : empleado as e1_0
            }
            left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa) {
              primaryTableReference : mesa as m1_0
            }
          }
        }
      }
    }

2025-06-08 21:40:45.805 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:40:45.805 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Pedido */ select id_pedido from pedido where id_pedido=?
2025-06-08 21:40:45.805 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */insert into pedido (cant_pedidos,id_cliente,id_empleado,estado,fecha_hora,id_mesa,total) values (?,?,?,?,?,?,?)
2025-06-08 21:40:45.805 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */update pedido set cant_pedidos=?,id_cliente=?,id_empleado=?,estado=?,fecha_hora=?,id_mesa=?,total=? where id_pedido=?
2025-06-08 21:40:45.805 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */delete from pedido where id_pedido=?
2025-06-08 21:40:45.844 [JavaFX-Launcher] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-08 21:40:45.845 [JavaFX-Launcher] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29c93f13] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@335b017b]
2025-06-08 21:40:45.846 [JavaFX-Launcher] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries
2025-06-08 21:40:45.846 [JavaFX-Launcher] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries
2025-06-08 21:40:45.864 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists categoria
2025-06-08 21:40:45.868 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists cliente
2025-06-08 21:40:45.868 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists detalle_pedido
2025-06-08 21:40:45.869 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists empleado
2025-06-08 21:40:45.870 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists factura
2025-06-08 21:40:45.871 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists menu
2025-06-08 21:40:45.872 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists mesa
2025-06-08 21:40:45.873 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists pedido
2025-06-08 21:40:45.873 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists producto
2025-06-08 21:40:45.874 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists seccion
2025-06-08 21:40:45.882 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table categoria (
        id_categoria integer,
        estado varchar(20),
        nombre varchar(100) not null,
        primary key (id_categoria)
    )
2025-06-08 21:40:45.913 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table cliente (
        cant_visitas integer,
        dni varchar(8) unique,
        id_cliente integer,
        telefono varchar(15),
        estado varchar(20),
        apellido varchar(50) not null,
        nombre varchar(50) not null,
        email varchar(100),
        primary key (id_cliente)
    )
2025-06-08 21:40:45.917 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table detalle_pedido (
        cantidad integer not null,
        igv float,
        precio_unitario float not null,
        subtotal float not null,
        total float,
        id_detalle_pedido integer,
        id_factura bigint,
        id_pedido bigint not null,
        id_producto bigint not null,
        estado varchar(20),
        primary key (id_detalle_pedido)
    )
2025-06-08 21:40:45.921 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table empleado (
        dni varchar(8) not null unique,
        id_empleado integer,
        telefono varchar(9),
        estado varchar(20),
        rol varchar(20) not null,
        usuario varchar(50) not null unique,
        apellido varchar(100) not null,
        nombre varchar(100) not null,
        password varchar(100) not null,
        primary key (id_empleado)
    )
2025-06-08 21:40:45.926 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table factura (
        igv float,
        subtotal float,
        total float,
        fecha_emision timestamp,
        id_cliente bigint,
        id_factura integer,
        id_pedido bigint unique,
        codigo varchar(20) unique,
        estado varchar(20),
        primary key (id_factura)
    )
2025-06-08 21:40:45.931 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table menu (
        id_menu integer,
        id_pedido bigint,
        id_producto bigint,
        cod_pedido varchar(50),
        primary key (id_menu)
    )
2025-06-08 21:40:45.935 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table mesa (
        capacidad integer not null,
        numero integer not null unique,
        id_mesa integer,
        estado varchar(20),
        detalle varchar(200),
        primary key (id_mesa)
    )
2025-06-08 21:40:45.940 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table pedido (
        cant_pedidos integer,
        total float,
        fecha_hora timestamp,
        id_cliente bigint,
        id_empleado bigint,
        id_mesa bigint,
        id_pedido integer,
        estado varchar(20),
        primary key (id_pedido)
    )
2025-06-08 21:40:45.945 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table producto (
        precio float not null,
        stock integer,
        id_categoria bigint,
        id_producto integer,
        id_seccion bigint,
        estado varchar(20),
        nombre varchar(100) not null,
        descripcion varchar(200),
        primary key (id_producto)
    )
2025-06-08 21:40:45.950 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table seccion (
        id_seccion integer,
        estado varchar(20),
        detalle varchar(200),
        primary key (id_seccion)
    )
2025-06-08 21:40:45.960 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@78359b2f
2025-06-08 21:40:45.961 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: a9c8a28d-4b99-4879-aee3-79d5bd2c8265 (<unnamed>)
2025-06-08 21:40:45.961 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-06-08 21:40:45.961 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory
2025-06-08 21:40:45.961 [JavaFX-Launcher] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-08 21:40:46.216 [JavaFX-Launcher] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2025-06-08 21:40:46.431 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy106.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:147)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:39)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:40:46.534 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy106.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:39)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:40:46.562 [JavaFX-Launcher] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-08 21:40:46.566 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy106.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:39)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:40:46.798 [JavaFX-Launcher] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:40:46.801 [JavaFX-Launcher] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-06-08 21:40:46.802 [JavaFX-Launcher] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-06-08 21:40:46.805 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:40:46.805 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-06-08 21:40:46.805 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:40:46.806 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:40:46.806 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:40:46.806 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:40:46.806 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:40:46.808 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:40:46.809 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:40:46.809 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:40:46.809 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:40:46.809 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:40:46.809 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:40:47.069 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - Started application in 7.534 seconds (process running for 8.673)
2025-06-08 21:40:47.375 [JavaFX-Launcher] INFO  p.e.u.p.ProyectoRestaurantApplication - === LISTADO DE EMPLEADOS ===
2025-06-08 21:40:47.394 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-08 21:40:47.394 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - begin
2025-06-08 21:40:47.498 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:40:47.499 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3))] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:40:47.517 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3)]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).rol]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).telefono]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).usuario]

2025-06-08 21:40:47.517 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3)) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:40:47.534 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:40:47.541 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id_empleado,
        e1_0.apellido,
        e1_0.dni,
        e1_0.estado,
        e1_0.nombre,
        e1_0.password,
        e1_0.rol,
        e1_0.telefono,
        e1_0.usuario 
    from
        empleado e1_0
2025-06-08 21:40:47.566 [JavaFX-Launcher] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3) -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3))@1139432268 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:40:47.577 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - committing
2025-06-08 21:40:47.579 [JavaFX-Launcher] INFO  p.e.u.p.ProyectoRestaurantApplication - ===========================
2025-06-08 21:40:53.693 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Intentando autenticar usuario: admin
2025-06-08 21:40:53.781 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:40:53.781 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2))] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:40:53.797 [JavaFX Application Thread] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@b33a2a0
2025-06-08 21:40:53.798 [JavaFX Application Thread] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).usuario) 
2025-06-08 21:40:53.813 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2)]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).rol]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).telefono]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).usuario]

2025-06-08 21:40:53.835 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2)) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:40:53.840 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:40:53.841 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id_empleado,
        e1_0.apellido,
        e1_0.dni,
        e1_0.estado,
        e1_0.nombre,
        e1_0.password,
        e1_0.rol,
        e1_0.telefono,
        e1_0.usuario 
    from
        empleado e1_0 
    where
        e1_0.usuario=?
2025-06-08 21:40:53.845 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2) -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2))@1529447638 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:40:53.849 [JavaFX Application Thread] WARN  p.e.u.p.control.ControlLogin - Error de autenticación: Credenciales inválidas para usuario: admin
2025-06-08 21:40:59.905 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Intentando autenticar usuario: admin
2025-06-08 21:40:59.907 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:40:59.908 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2))] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:40:59.908 [JavaFX Application Thread] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@37a505e9
2025-06-08 21:40:59.909 [JavaFX Application Thread] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).usuario) 
2025-06-08 21:40:59.910 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2)]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).rol]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).telefono]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).usuario]

2025-06-08 21:40:59.910 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2)) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:40:59.910 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:40:59.911 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id_empleado,
        e1_0.apellido,
        e1_0.dni,
        e1_0.estado,
        e1_0.nombre,
        e1_0.password,
        e1_0.rol,
        e1_0.telefono,
        e1_0.usuario 
    from
        empleado e1_0 
    where
        e1_0.usuario=?
2025-06-08 21:40:59.913 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2) -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2))@621845048 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:40:59.915 [JavaFX Application Thread] WARN  p.e.u.p.control.ControlLogin - Error de autenticación: Credenciales inválidas para usuario: admin
2025-06-08 21:41:03.319 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Intentando autenticar usuario: admin
2025-06-08 21:41:03.321 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:41:03.321 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2))] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:41:03.322 [JavaFX Application Thread] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@468e46e
2025-06-08 21:41:03.322 [JavaFX Application Thread] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).usuario) 
2025-06-08 21:41:03.323 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2)]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).rol]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).telefono]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).usuario]

2025-06-08 21:41:03.323 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2)) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:41:03.324 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:41:03.324 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id_empleado,
        e1_0.apellido,
        e1_0.dni,
        e1_0.estado,
        e1_0.nombre,
        e1_0.password,
        e1_0.rol,
        e1_0.telefono,
        e1_0.usuario 
    from
        empleado e1_0 
    where
        e1_0.usuario=?
2025-06-08 21:41:03.326 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2) -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2))@2084053649 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:41:03.327 [JavaFX Application Thread] WARN  p.e.u.p.control.ControlLogin - Error de autenticación: Credenciales inválidas para usuario: admin
2025-06-08 21:41:06.682 [JavaFX Application Thread] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-08 21:41:06.683 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing
2025-06-08 21:41:06.684 [JavaFX Application Thread] DEBUG o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2025-06-08 21:41:06.687 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists categoria
2025-06-08 21:41:06.720 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists cliente
2025-06-08 21:41:06.729 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists detalle_pedido
2025-06-08 21:41:06.738 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists empleado
2025-06-08 21:41:06.748 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists factura
2025-06-08 21:41:06.756 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists menu
2025-06-08 21:41:06.765 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists mesa
2025-06-08 21:41:06.773 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists pedido
2025-06-08 21:41:06.784 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists producto
2025-06-08 21:41:06.792 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists seccion
2025-06-08 21:41:06.800 [JavaFX Application Thread] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1d762f71] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@335b017b]
2025-06-08 21:41:06.800 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2025-06-08 21:41:06.802 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2025-06-08 21:41:06.803 [JavaFX Application Thread] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-08 21:41:06.807 [JavaFX Application Thread] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-08 21:44:47.244 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:44:47.251 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:44:47.252 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:44:47.253 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:44:47.264 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:44:47.266 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:44:47.307 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:44:47.578 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:44:47.590 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:44:47.590 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:44:47.591 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:44:47.592 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:44:47.592 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:44:47.709 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - Starting application using Java 23.0.2 with PID 2340 (started by USUARIO in C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant)
2025-06-08 21:44:47.713 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-08 21:44:49.047 [JavaFX-Launcher] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-08 21:44:49.233 [JavaFX-Launcher] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 167 ms. Found 10 JPA repository interfaces.
2025-06-08 21:44:49.948 [JavaFX-Launcher] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@506e1b77
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/USUARIO/Documents/ProyectoRestaurantJava/ProyectoRestaurant/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		pe.edu.upeu.proyecto_restaurant.modulo.Categoria
		pe.edu.upeu.proyecto_restaurant.modulo.Cliente
		pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
		pe.edu.upeu.proyecto_restaurant.modulo.Empleado
		pe.edu.upeu.proyecto_restaurant.modulo.Factura
		pe.edu.upeu.proyecto_restaurant.modulo.Menu
		pe.edu.upeu.proyecto_restaurant.modulo.Mesa
		pe.edu.upeu.proyecto_restaurant.modulo.Pedido
		pe.edu.upeu.proyecto_restaurant.modulo.Producto
		pe.edu.upeu.proyecto_restaurant.modulo.Seccion]
	Mapping files names []
	Properties []
2025-06-08 21:44:49.968 [JavaFX-Launcher] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-06-08 21:44:49.972 [JavaFX-Launcher] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-06-08 21:44:50.104 [JavaFX-Launcher] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-08 21:44:50.106 [JavaFX-Launcher] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found
2025-06-08 21:44:50.151 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-06-08 21:44:50.152 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-06-08 21:44:50.154 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:44:50.154 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:44:50.154 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-06-08 21:44:50.156 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-06-08 21:44:50.157 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-06-08 21:44:50.162 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:44:50.164 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-06-08 21:44:50.165 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-06-08 21:44:50.165 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:44:50.167 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-06-08 21:44:50.176 [JavaFX-Launcher] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-06-08 21:44:50.179 [JavaFX-Launcher] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-08 21:44:50.317 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1cc2268a
2025-06-08 21:44:50.317 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1cc2268a
2025-06-08 21:44:50.317 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1cc2268a
2025-06-08 21:44:50.317 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@783d0aca
2025-06-08 21:44:50.317 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@783d0aca
2025-06-08 21:44:50.318 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@36b77db5
2025-06-08 21:44:50.318 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@36b77db5
2025-06-08 21:44:50.318 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@28e54620
2025-06-08 21:44:50.318 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@28e54620
2025-06-08 21:44:50.318 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@259ec3c0
2025-06-08 21:44:50.318 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@259ec3c0
2025-06-08 21:44:50.318 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@259ec3c0
2025-06-08 21:44:50.318 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@3565e6e3
2025-06-08 21:44:50.319 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3565e6e3
2025-06-08 21:44:50.319 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@3565e6e3
2025-06-08 21:44:50.319 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@38b26f2f
2025-06-08 21:44:50.319 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@38b26f2f
2025-06-08 21:44:50.319 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3a64ea5f
2025-06-08 21:44:50.319 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@69b7be10
2025-06-08 21:44:50.319 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@69b7be10
2025-06-08 21:44:50.319 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@73ff0f3b
2025-06-08 21:44:50.320 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@581fcd7c
2025-06-08 21:44:50.320 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@45b4f232
2025-06-08 21:44:50.320 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@45b4f232
2025-06-08 21:44:50.320 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@45b4f232
2025-06-08 21:44:50.320 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@11a783aa
2025-06-08 21:44:50.320 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@11a783aa
2025-06-08 21:44:50.320 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@11a783aa
2025-06-08 21:44:50.321 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1a2ad072
2025-06-08 21:44:50.321 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1a2ad072
2025-06-08 21:44:50.321 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1a2ad072
2025-06-08 21:44:50.321 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3c788a66
2025-06-08 21:44:50.321 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3c788a66
2025-06-08 21:44:50.321 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3c788a66
2025-06-08 21:44:50.321 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5ebfcab9
2025-06-08 21:44:50.321 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5ebfcab9
2025-06-08 21:44:50.321 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5ebfcab9
2025-06-08 21:44:50.322 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7328b817
2025-06-08 21:44:50.322 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7328b817
2025-06-08 21:44:50.322 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3fcd4f40
2025-06-08 21:44:50.322 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3fcd4f40
2025-06-08 21:44:50.322 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@471ec965
2025-06-08 21:44:50.322 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@471ec965
2025-06-08 21:44:50.322 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@471ec965
2025-06-08 21:44:50.322 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@67d4293d
2025-06-08 21:44:50.323 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@518acdd0
2025-06-08 21:44:50.323 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@518acdd0
2025-06-08 21:44:50.323 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4e82fee
2025-06-08 21:44:50.323 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@350c9bf7
2025-06-08 21:44:50.324 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@350c9bf7
2025-06-08 21:44:50.324 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@350c9bf7
2025-06-08 21:44:50.325 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7357d1aa
2025-06-08 21:44:50.326 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7434765d
2025-06-08 21:44:50.326 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@31e6a06a
2025-06-08 21:44:50.326 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@60e44682
2025-06-08 21:44:50.327 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@60e44682
2025-06-08 21:44:50.328 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2df311b5
2025-06-08 21:44:50.328 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2df311b5
2025-06-08 21:44:50.328 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7a221cc8
2025-06-08 21:44:50.329 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7e431616
2025-06-08 21:44:50.329 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3cd19f0a
2025-06-08 21:44:50.329 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@99a5f9c
2025-06-08 21:44:50.330 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@63b4c63b
2025-06-08 21:44:50.330 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5218ffd
2025-06-08 21:44:50.330 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@35b8799c
2025-06-08 21:44:50.330 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@35b8799c
2025-06-08 21:44:50.331 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6e05a608
2025-06-08 21:44:50.331 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6e05a608
2025-06-08 21:44:50.331 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2bc520ed
2025-06-08 21:44:50.331 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2bc520ed
2025-06-08 21:44:50.332 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@22120c0f
2025-06-08 21:44:50.332 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@22120c0f
2025-06-08 21:44:50.332 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5490e548
2025-06-08 21:44:50.332 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5490e548
2025-06-08 21:44:50.332 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@17662c34
2025-06-08 21:44:50.332 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1526a47d
2025-06-08 21:44:50.332 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@27e6b0a2
2025-06-08 21:44:50.333 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@27e6b0a2
2025-06-08 21:44:50.333 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@740fabb3
2025-06-08 21:44:50.333 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@522e2e8a
2025-06-08 21:44:50.333 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@728b6dfe
2025-06-08 21:44:50.334 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@60fab0ad
2025-06-08 21:44:50.334 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@60fab0ad
2025-06-08 21:44:50.334 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@69a1cd32
2025-06-08 21:44:50.334 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4ad8f4f2
2025-06-08 21:44:50.334 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@639594ca
2025-06-08 21:44:50.334 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@639594ca
2025-06-08 21:44:50.335 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@56df3fcd
2025-06-08 21:44:50.335 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@56df3fcd
2025-06-08 21:44:50.335 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@31f0a079
2025-06-08 21:44:50.336 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@31f0a079
2025-06-08 21:44:50.336 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@31f0a079
2025-06-08 21:44:50.337 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3c82add1
2025-06-08 21:44:50.337 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3c82add1
2025-06-08 21:44:50.337 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3c82add1
2025-06-08 21:44:50.338 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@737e4d4f
2025-06-08 21:44:50.339 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6837b535
2025-06-08 21:44:50.339 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@417261c7
2025-06-08 21:44:50.340 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@417261c7
2025-06-08 21:44:50.340 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@40e74893
2025-06-08 21:44:50.340 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@40e74893
2025-06-08 21:44:50.340 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@40e74893
2025-06-08 21:44:50.340 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1de7e8d0
2025-06-08 21:44:50.341 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@482c7844
2025-06-08 21:44:50.342 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1a8244df
2025-06-08 21:44:50.342 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1a8244df
2025-06-08 21:44:50.342 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@60db34cc
2025-06-08 21:44:50.343 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@60db34cc
2025-06-08 21:44:50.343 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@60db34cc
2025-06-08 21:44:50.344 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@42d8e16f
2025-06-08 21:44:50.344 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@42d8e16f
2025-06-08 21:44:50.345 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@699d5f28
2025-06-08 21:44:50.345 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@699d5f28
2025-06-08 21:44:50.346 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@61315a78
2025-06-08 21:44:50.346 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@61315a78
2025-06-08 21:44:50.346 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@58756fc6
2025-06-08 21:44:50.346 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@58756fc6
2025-06-08 21:44:50.347 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5d233e3e
2025-06-08 21:44:50.347 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5d233e3e
2025-06-08 21:44:50.347 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5e444ead
2025-06-08 21:44:50.347 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@35cd3d87
2025-06-08 21:44:50.348 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@46b56fa7
2025-06-08 21:44:50.348 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@2237b81
2025-06-08 21:44:50.348 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7e6e6c4e
2025-06-08 21:44:50.356 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@4da46ad8
2025-06-08 21:44:50.357 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4da46ad8
2025-06-08 21:44:50.360 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@63f175ba
2025-06-08 21:44:50.361 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4d430a2c
2025-06-08 21:44:50.361 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@882bcca
2025-06-08 21:44:50.362 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1c730b1f
2025-06-08 21:44:50.362 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7447e18e
2025-06-08 21:44:50.363 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@21008740
2025-06-08 21:44:50.363 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3c791b46
2025-06-08 21:44:50.364 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3856d425
2025-06-08 21:44:50.364 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@73d61930
2025-06-08 21:44:50.373 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@31a51c74] into BootstrapContext; was [null]
2025-06-08 21:44:50.373 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@31a51c74) [was null]
2025-06-08 21:44:50.374 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@53d7c68c] into BootstrapContext; was [null]
2025-06-08 21:44:50.375 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@75c48679] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1fc1bfbb]
2025-06-08 21:44:50.410 [JavaFX-Launcher] DEBUG o.h.j.b.i.PersistenceUnitInfoDescriptor - Pushing class transformers for PU named 'default' on loading classloader jdk.internal.loader.ClassLoaders$AppClassLoader@506e1b77
2025-06-08 21:44:50.747 [JavaFX-Launcher] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-08 21:44:50.747 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@31a51c74]
2025-06-08 21:44:50.748 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@31a51c74]
2025-06-08 21:44:50.805 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-08 21:44:50.957 [JavaFX-Launcher] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@17ea4965
2025-06-08 21:44:50.961 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-08 21:44:50.979 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : SQLite
	version : 3.46.0
	  major : 3
	  minor : 46
2025-06-08 21:44:50.979 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : SQLite JDBC
	version : 3.46.0.0
	  major : 3
	  minor : 46
2025-06-08 21:44:50.979 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2
2025-06-08 21:44:51.001 [JavaFX-Launcher] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.community.dialect.SQLiteDialect, version: 3.46
2025-06-08 21:44:51.005 [JavaFX-Launcher] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-06-08 21:44:51.005 [JavaFX-Launcher] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2025-06-08 21:44:51.036 [JavaFX-Launcher] DEBUG org.hibernate.orm.jdbc.lob - HHH10010005: Disabling contextual LOB creation as createClob() method threw error : java.sql.SQLFeatureNotSupportedException
2025-06-08 21:44:51.045 [JavaFX-Launcher] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 3.46
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-08 21:44:51.062 [JavaFX-Launcher] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(PRIMITIVE_ARRAY_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-06-08 21:44:51.063 [JavaFX-Launcher] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STRING_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-08 21:44:51.069 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-06-08 21:44:51.070 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:44:51.070 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:44:51.077 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:44:51.077 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:44:51.077 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:44:51.077 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:44:51.077 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:44:51.077 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:44:51.079 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:44:51.079 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:44:51.079 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:44:51.082 [JavaFX-Launcher] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@451e3f38] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7125f17a]
2025-06-08 21:44:51.169 [JavaFX-Launcher] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-06-08 21:44:51.211 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:44:51.219 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Categoria
2025-06-08 21:44:51.235 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Categoria on table categoria
2025-06-08 21:44:51.255 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:44:51.296 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_categoria')
2025-06-08 21:44:51.300 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:44:51.300 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:44:51.310 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCategoria with lazy=false
2025-06-08 21:44:51.317 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:idCategoria]
2025-06-08 21:44:51.327 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCategoria
2025-06-08 21:44:51.333 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.id_categoria
2025-06-08 21:44:51.335 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCategoria
2025-06-08 21:44:51.341 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_categoria)]), idCategoria, identity, , ...)
2025-06-08 21:44:51.343 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:44:51.344 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:44:51.344 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:estado]
2025-06-08 21:44:51.345 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:44:51.345 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.estado
2025-06-08 21:44:51.345 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:44:51.346 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:44:51.347 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:44:51.347 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:nombre]
2025-06-08 21:44:51.347 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:44:51.347 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.nombre
2025-06-08 21:44:51.348 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:44:51.351 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:44:51.360 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:44:51.361 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Cliente
2025-06-08 21:44:51.361 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Cliente on table cliente
2025-06-08 21:44:51.362 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:44:51.365 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_cliente')
2025-06-08 21:44:51.366 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:44:51.366 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:44:51.366 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCliente with lazy=false
2025-06-08 21:44:51.367 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:idCliente]
2025-06-08 21:44:51.367 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCliente
2025-06-08 21:44:51.368 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.id_cliente
2025-06-08 21:44:51.368 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCliente
2025-06-08 21:44:51.369 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_cliente)]), idCliente, identity, , ...)
2025-06-08 21:44:51.369 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='apellido')
2025-06-08 21:44:51.370 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property apellido with lazy=false
2025-06-08 21:44:51.370 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:apellido]
2025-06-08 21:44:51.370 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for apellido
2025-06-08 21:44:51.370 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.apellido
2025-06-08 21:44:51.371 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property apellido
2025-06-08 21:44:51.371 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cant_visitas')
2025-06-08 21:44:51.372 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantVisitas with lazy=false
2025-06-08 21:44:51.372 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:cantVisitas]
2025-06-08 21:44:51.373 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantVisitas
2025-06-08 21:44:51.374 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.cant_visitas
2025-06-08 21:44:51.375 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantVisitas
2025-06-08 21:44:51.378 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='dni')
2025-06-08 21:44:51.379 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property dni with lazy=false
2025-06-08 21:44:51.379 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:dni]
2025-06-08 21:44:51.379 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for dni
2025-06-08 21:44:51.380 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.dni
2025-06-08 21:44:51.380 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property dni
2025-06-08 21:44:51.381 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
2025-06-08 21:44:51.382 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-06-08 21:44:51.382 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:email]
2025-06-08 21:44:51.382 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email
2025-06-08 21:44:51.382 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.email
2025-06-08 21:44:51.382 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property email
2025-06-08 21:44:51.383 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:44:51.383 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:44:51.384 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:estado]
2025-06-08 21:44:51.385 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:44:51.385 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.estado
2025-06-08 21:44:51.385 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:44:51.386 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:44:51.386 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:44:51.386 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:nombre]
2025-06-08 21:44:51.386 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:44:51.387 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.nombre
2025-06-08 21:44:51.387 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:44:51.387 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='telefono')
2025-06-08 21:44:51.388 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property telefono with lazy=false
2025-06-08 21:44:51.388 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:telefono]
2025-06-08 21:44:51.388 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for telefono
2025-06-08 21:44:51.388 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.telefono
2025-06-08 21:44:51.388 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property telefono
2025-06-08 21:44:51.389 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:44:51.390 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:44:51.392 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name DetPedido
2025-06-08 21:44:51.392 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.DetPedido on table detalle_pedido
2025-06-08 21:44:51.393 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:44:51.403 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_detalle_pedido')
2025-06-08 21:44:51.404 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:44:51.404 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:44:51.404 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idDetallePedido with lazy=false
2025-06-08 21:44:51.405 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:idDetallePedido]
2025-06-08 21:44:51.405 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idDetallePedido
2025-06-08 21:44:51.406 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.id_detalle_pedido
2025-06-08 21:44:51.406 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idDetallePedido
2025-06-08 21:44:51.407 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_detalle_pedido)]), idDetallePedido, identity, , ...)
2025-06-08 21:44:51.408 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cantidad')
2025-06-08 21:44:51.409 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantidad with lazy=false
2025-06-08 21:44:51.409 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:cantidad]
2025-06-08 21:44:51.410 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantidad
2025-06-08 21:44:51.410 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.cantidad
2025-06-08 21:44:51.410 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantidad
2025-06-08 21:44:51.411 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:44:51.412 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:44:51.412 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:estado]
2025-06-08 21:44:51.412 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:44:51.413 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.estado
2025-06-08 21:44:51.414 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:44:51.417 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_factura',referencedColumn='id_factura')
2025-06-08 21:44:51.421 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:44:51.430 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property factura
2025-06-08 21:44:51.430 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='igv')
2025-06-08 21:44:51.430 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property igv with lazy=false
2025-06-08 21:44:51.431 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:igv]
2025-06-08 21:44:51.431 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for igv
2025-06-08 21:44:51.431 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.igv
2025-06-08 21:44:51.432 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property igv
2025-06-08 21:44:51.432 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:44:51.433 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:44:51.433 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:44:51.434 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio_unitario')
2025-06-08 21:44:51.434 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precioUnitario with lazy=false
2025-06-08 21:44:51.435 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:precioUnitario]
2025-06-08 21:44:51.435 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precioUnitario
2025-06-08 21:44:51.435 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.precio_unitario
2025-06-08 21:44:51.435 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property precioUnitario
2025-06-08 21:44:51.436 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_producto',referencedColumn='id_producto')
2025-06-08 21:44:51.436 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:44:51.437 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property producto
2025-06-08 21:44:51.437 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='subtotal')
2025-06-08 21:44:51.437 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property subtotal with lazy=false
2025-06-08 21:44:51.437 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:subtotal]
2025-06-08 21:44:51.438 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for subtotal
2025-06-08 21:44:51.438 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.subtotal
2025-06-08 21:44:51.438 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property subtotal
2025-06-08 21:44:51.439 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:44:51.439 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:44:51.440 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:total]
2025-06-08 21:44:51.440 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:44:51.440 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.total
2025-06-08 21:44:51.441 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:44:51.442 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:44:51.444 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:44:51.444 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Empleado
2025-06-08 21:44:51.445 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Empleado on table empleado
2025-06-08 21:44:51.445 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:44:51.447 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_empleado')
2025-06-08 21:44:51.448 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:44:51.448 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:44:51.448 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-06-08 21:44:51.449 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:id]
2025-06-08 21:44:51.449 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id
2025-06-08 21:44:51.449 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.id_empleado
2025-06-08 21:44:51.450 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property id
2025-06-08 21:44:51.450 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_empleado)]), id, identity, , ...)
2025-06-08 21:44:51.450 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='apellido')
2025-06-08 21:44:51.451 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property apellido with lazy=false
2025-06-08 21:44:51.451 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:apellido]
2025-06-08 21:44:51.451 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for apellido
2025-06-08 21:44:51.451 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.apellido
2025-06-08 21:44:51.451 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property apellido
2025-06-08 21:44:51.452 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='dni')
2025-06-08 21:44:51.452 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property dni with lazy=false
2025-06-08 21:44:51.452 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:dni]
2025-06-08 21:44:51.452 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for dni
2025-06-08 21:44:51.452 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.dni
2025-06-08 21:44:51.453 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property dni
2025-06-08 21:44:51.453 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:44:51.453 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:44:51.454 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:estado]
2025-06-08 21:44:51.454 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:44:51.454 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.estado
2025-06-08 21:44:51.454 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:44:51.455 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:44:51.455 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:44:51.455 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:nombre]
2025-06-08 21:44:51.456 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:44:51.456 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.nombre
2025-06-08 21:44:51.457 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:44:51.458 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password')
2025-06-08 21:44:51.458 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-06-08 21:44:51.459 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:password]
2025-06-08 21:44:51.459 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password
2025-06-08 21:44:51.460 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.password
2025-06-08 21:44:51.461 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property password
2025-06-08 21:44:51.461 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='rol')
2025-06-08 21:44:51.461 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property rol with lazy=false
2025-06-08 21:44:51.461 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:rol]
2025-06-08 21:44:51.462 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for rol
2025-06-08 21:44:51.462 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.rol
2025-06-08 21:44:51.462 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property rol
2025-06-08 21:44:51.463 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='telefono')
2025-06-08 21:44:51.464 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property telefono with lazy=false
2025-06-08 21:44:51.464 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:telefono]
2025-06-08 21:44:51.464 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for telefono
2025-06-08 21:44:51.464 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.telefono
2025-06-08 21:44:51.464 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property telefono
2025-06-08 21:44:51.465 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='usuario')
2025-06-08 21:44:51.466 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property usuario with lazy=false
2025-06-08 21:44:51.466 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:usuario]
2025-06-08 21:44:51.466 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for usuario
2025-06-08 21:44:51.466 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.usuario
2025-06-08 21:44:51.466 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property usuario
2025-06-08 21:44:51.467 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:44:51.468 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:44:51.468 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Factura
2025-06-08 21:44:51.468 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Factura on table factura
2025-06-08 21:44:51.469 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:44:51.474 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_factura')
2025-06-08 21:44:51.475 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:44:51.475 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:44:51.476 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idFactura with lazy=false
2025-06-08 21:44:51.476 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:idFactura]
2025-06-08 21:44:51.477 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idFactura
2025-06-08 21:44:51.477 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.id_factura
2025-06-08 21:44:51.477 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idFactura
2025-06-08 21:44:51.477 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_factura)]), idFactura, identity, , ...)
2025-06-08 21:44:51.478 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_cliente',referencedColumn='id_cliente')
2025-06-08 21:44:51.478 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:44:51.479 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cliente
2025-06-08 21:44:51.479 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='codigo')
2025-06-08 21:44:51.480 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codigo with lazy=false
2025-06-08 21:44:51.480 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:codigo]
2025-06-08 21:44:51.480 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codigo
2025-06-08 21:44:51.480 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.codigo
2025-06-08 21:44:51.480 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property codigo
2025-06-08 21:44:51.481 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:44:51.481 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:44:51.481 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:estado]
2025-06-08 21:44:51.481 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:44:51.481 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.estado
2025-06-08 21:44:51.481 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:44:51.482 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fecha_emision')
2025-06-08 21:44:51.482 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaEmision with lazy=false
2025-06-08 21:44:51.483 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:fechaEmision]
2025-06-08 21:44:51.483 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaEmision
2025-06-08 21:44:51.483 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.fecha_emision
2025-06-08 21:44:51.483 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaEmision
2025-06-08 21:44:51.484 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='igv')
2025-06-08 21:44:51.484 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property igv with lazy=false
2025-06-08 21:44:51.484 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:igv]
2025-06-08 21:44:51.484 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for igv
2025-06-08 21:44:51.484 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.igv
2025-06-08 21:44:51.485 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property igv
2025-06-08 21:44:51.485 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:44:51.486 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:44:51.486 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:44:51.487 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='subtotal')
2025-06-08 21:44:51.487 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property subtotal with lazy=false
2025-06-08 21:44:51.487 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:subtotal]
2025-06-08 21:44:51.487 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for subtotal
2025-06-08 21:44:51.487 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.subtotal
2025-06-08 21:44:51.488 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property subtotal
2025-06-08 21:44:51.488 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:44:51.488 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:44:51.488 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:total]
2025-06-08 21:44:51.488 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:44:51.488 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.total
2025-06-08 21:44:51.488 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:44:51.489 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:44:51.489 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:44:51.490 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Menu
2025-06-08 21:44:51.490 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Menu on table menu
2025-06-08 21:44:51.491 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:44:51.493 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_menu')
2025-06-08 21:44:51.494 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:44:51.494 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:44:51.494 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idMenu with lazy=false
2025-06-08 21:44:51.494 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Menu:idMenu]
2025-06-08 21:44:51.494 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idMenu
2025-06-08 21:44:51.494 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: menu.id_menu
2025-06-08 21:44:51.494 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idMenu
2025-06-08 21:44:51.495 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_menu)]), idMenu, identity, , ...)
2025-06-08 21:44:51.495 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cod_pedido')
2025-06-08 21:44:51.495 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codPedido with lazy=false
2025-06-08 21:44:51.496 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Menu:codPedido]
2025-06-08 21:44:51.496 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codPedido
2025-06-08 21:44:51.496 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: menu.cod_pedido
2025-06-08 21:44:51.496 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property codPedido
2025-06-08 21:44:51.497 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:44:51.497 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:44:51.498 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:44:51.498 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_producto',referencedColumn='id_producto')
2025-06-08 21:44:51.499 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:44:51.499 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property producto
2025-06-08 21:44:51.500 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:44:51.501 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:44:51.501 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Mesa
2025-06-08 21:44:51.502 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Mesa on table mesa
2025-06-08 21:44:51.502 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:44:51.505 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_mesa')
2025-06-08 21:44:51.505 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:44:51.505 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:44:51.505 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idMesa with lazy=false
2025-06-08 21:44:51.505 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:idMesa]
2025-06-08 21:44:51.505 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idMesa
2025-06-08 21:44:51.506 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.id_mesa
2025-06-08 21:44:51.506 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idMesa
2025-06-08 21:44:51.507 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_mesa)]), idMesa, identity, , ...)
2025-06-08 21:44:51.508 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='capacidad')
2025-06-08 21:44:51.508 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property capacidad with lazy=false
2025-06-08 21:44:51.508 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:capacidad]
2025-06-08 21:44:51.509 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for capacidad
2025-06-08 21:44:51.509 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.capacidad
2025-06-08 21:44:51.509 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property capacidad
2025-06-08 21:44:51.510 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='detalle')
2025-06-08 21:44:51.510 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property detalle with lazy=false
2025-06-08 21:44:51.510 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:detalle]
2025-06-08 21:44:51.511 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for detalle
2025-06-08 21:44:51.511 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.detalle
2025-06-08 21:44:51.511 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property detalle
2025-06-08 21:44:51.511 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:44:51.512 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:44:51.512 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:estado]
2025-06-08 21:44:51.512 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:44:51.512 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.estado
2025-06-08 21:44:51.512 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:44:51.513 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='numero')
2025-06-08 21:44:51.513 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property numero with lazy=false
2025-06-08 21:44:51.513 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:numero]
2025-06-08 21:44:51.513 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for numero
2025-06-08 21:44:51.514 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.numero
2025-06-08 21:44:51.514 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property numero
2025-06-08 21:44:51.516 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:44:51.516 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:44:51.517 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Pedido
2025-06-08 21:44:51.517 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Pedido on table pedido
2025-06-08 21:44:51.518 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:44:51.520 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_pedido')
2025-06-08 21:44:51.520 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:44:51.520 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:44:51.520 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idPedido with lazy=false
2025-06-08 21:44:51.521 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:idPedido]
2025-06-08 21:44:51.521 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idPedido
2025-06-08 21:44:51.521 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.id_pedido
2025-06-08 21:44:51.521 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idPedido
2025-06-08 21:44:51.521 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_pedido)]), idPedido, identity, , ...)
2025-06-08 21:44:51.521 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cant_pedidos')
2025-06-08 21:44:51.522 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantPedidos with lazy=false
2025-06-08 21:44:51.522 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:cantPedidos]
2025-06-08 21:44:51.522 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantPedidos
2025-06-08 21:44:51.522 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.cant_pedidos
2025-06-08 21:44:51.522 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantPedidos
2025-06-08 21:44:51.523 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_cliente',referencedColumn='id_cliente')
2025-06-08 21:44:51.523 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:44:51.524 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cliente
2025-06-08 21:44:51.524 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_empleado',referencedColumn='id_empleado')
2025-06-08 21:44:51.525 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:44:51.525 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property empleado
2025-06-08 21:44:51.526 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:44:51.526 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:44:51.526 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:estado]
2025-06-08 21:44:51.526 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:44:51.526 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.estado
2025-06-08 21:44:51.526 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:44:51.527 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fecha_hora')
2025-06-08 21:44:51.527 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaHora with lazy=false
2025-06-08 21:44:51.527 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:fechaHora]
2025-06-08 21:44:51.527 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaHora
2025-06-08 21:44:51.527 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.fecha_hora
2025-06-08 21:44:51.527 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaHora
2025-06-08 21:44:51.528 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_mesa',referencedColumn='id_mesa')
2025-06-08 21:44:51.528 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:44:51.528 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property mesa
2025-06-08 21:44:51.528 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:44:51.529 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:44:51.529 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:total]
2025-06-08 21:44:51.529 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:44:51.529 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.total
2025-06-08 21:44:51.529 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:44:51.530 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:44:51.530 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:44:51.530 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Producto
2025-06-08 21:44:51.530 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Producto on table producto
2025-06-08 21:44:51.531 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:44:51.533 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_producto')
2025-06-08 21:44:51.533 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:44:51.533 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:44:51.533 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idProducto with lazy=false
2025-06-08 21:44:51.533 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:idProducto]
2025-06-08 21:44:51.533 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idProducto
2025-06-08 21:44:51.533 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.id_producto
2025-06-08 21:44:51.533 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idProducto
2025-06-08 21:44:51.533 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_producto)]), idProducto, identity, , ...)
2025-06-08 21:44:51.534 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_categoria',referencedColumn='id_categoria')
2025-06-08 21:44:51.534 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:44:51.535 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property categoria
2025-06-08 21:44:51.535 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='descripcion')
2025-06-08 21:44:51.535 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property descripcion with lazy=false
2025-06-08 21:44:51.535 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:descripcion]
2025-06-08 21:44:51.535 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for descripcion
2025-06-08 21:44:51.535 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.descripcion
2025-06-08 21:44:51.535 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property descripcion
2025-06-08 21:44:51.536 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:44:51.536 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:44:51.536 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:estado]
2025-06-08 21:44:51.536 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:44:51.537 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.estado
2025-06-08 21:44:51.537 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:44:51.537 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:44:51.537 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:44:51.537 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:nombre]
2025-06-08 21:44:51.537 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:44:51.537 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.nombre
2025-06-08 21:44:51.538 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:44:51.538 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio')
2025-06-08 21:44:51.538 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precio with lazy=false
2025-06-08 21:44:51.539 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:precio]
2025-06-08 21:44:51.539 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precio
2025-06-08 21:44:51.539 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.precio
2025-06-08 21:44:51.539 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property precio
2025-06-08 21:44:51.539 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_seccion',referencedColumn='id_seccion')
2025-06-08 21:44:51.540 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:44:51.540 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property seccion
2025-06-08 21:44:51.541 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='stock')
2025-06-08 21:44:51.541 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property stock with lazy=false
2025-06-08 21:44:51.541 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:stock]
2025-06-08 21:44:51.542 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for stock
2025-06-08 21:44:51.542 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.stock
2025-06-08 21:44:51.542 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property stock
2025-06-08 21:44:51.543 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:44:51.544 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:44:51.544 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Seccion
2025-06-08 21:44:51.545 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Seccion on table seccion
2025-06-08 21:44:51.545 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:44:51.547 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_seccion')
2025-06-08 21:44:51.547 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:44:51.547 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:44:51.547 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idSeccion with lazy=false
2025-06-08 21:44:51.548 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:idSeccion]
2025-06-08 21:44:51.548 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idSeccion
2025-06-08 21:44:51.548 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.id_seccion
2025-06-08 21:44:51.548 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idSeccion
2025-06-08 21:44:51.548 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_seccion)]), idSeccion, identity, , ...)
2025-06-08 21:44:51.548 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='detalle')
2025-06-08 21:44:51.548 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property detalle with lazy=false
2025-06-08 21:44:51.548 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:detalle]
2025-06-08 21:44:51.548 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for detalle
2025-06-08 21:44:51.549 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.detalle
2025-06-08 21:44:51.549 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property detalle
2025-06-08 21:44:51.549 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:44:51.549 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:44:51.549 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:estado]
2025-06-08 21:44:51.549 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:44:51.549 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.estado
2025-06-08 21:44:51.549 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:44:51.550 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:44:51.552 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idCategoria
2025-06-08 21:44:51.554 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:44:51.554 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:44:51.554 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idCliente
2025-06-08 21:44:51.554 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apellido
2025-06-08 21:44:51.554 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantVisitas
2025-06-08 21:44:51.554 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for dni
2025-06-08 21:44:51.554 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-06-08 21:44:51.554 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:44:51.554 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:44:51.554 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for telefono
2025-06-08 21:44:51.554 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idDetallePedido
2025-06-08 21:44:51.554 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantidad
2025-06-08 21:44:51.554 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:44:51.554 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for igv
2025-06-08 21:44:51.554 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precioUnitario
2025-06-08 21:44:51.554 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for subtotal
2025-06-08 21:44:51.555 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:44:51.555 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-06-08 21:44:51.555 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apellido
2025-06-08 21:44:51.555 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for dni
2025-06-08 21:44:51.555 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:44:51.555 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:44:51.555 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-06-08 21:44:51.555 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for rol
2025-06-08 21:44:51.555 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for telefono
2025-06-08 21:44:51.555 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for usuario
2025-06-08 21:44:51.555 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idFactura
2025-06-08 21:44:51.555 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codigo
2025-06-08 21:44:51.555 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:44:51.555 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaEmision
2025-06-08 21:44:51.555 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for igv
2025-06-08 21:44:51.555 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for subtotal
2025-06-08 21:44:51.555 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:44:51.555 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idMenu
2025-06-08 21:44:51.555 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codPedido
2025-06-08 21:44:51.555 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idMesa
2025-06-08 21:44:51.555 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for capacidad
2025-06-08 21:44:51.555 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for detalle
2025-06-08 21:44:51.555 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:44:51.555 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for numero
2025-06-08 21:44:51.555 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idPedido
2025-06-08 21:44:51.555 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantPedidos
2025-06-08 21:44:51.555 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:44:51.555 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaHora
2025-06-08 21:44:51.556 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:44:51.556 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idProducto
2025-06-08 21:44:51.556 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for descripcion
2025-06-08 21:44:51.556 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:44:51.556 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:44:51.556 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precio
2025-06-08 21:44:51.556 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for stock
2025-06-08 21:44:51.556 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idSeccion
2025-06-08 21:44:51.556 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for detalle
2025-06-08 21:44:51.556 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:44:51.566 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_categoria] to be non-null as it is part of the primary key for table [categoria]
2025-06-08 21:44:51.566 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_cliente] to be non-null as it is part of the primary key for table [cliente]
2025-06-08 21:44:51.566 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_detalle_pedido] to be non-null as it is part of the primary key for table [detalle_pedido]
2025-06-08 21:44:51.566 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_empleado] to be non-null as it is part of the primary key for table [empleado]
2025-06-08 21:44:51.566 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_factura] to be non-null as it is part of the primary key for table [factura]
2025-06-08 21:44:51.566 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_menu] to be non-null as it is part of the primary key for table [menu]
2025-06-08 21:44:51.566 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_mesa] to be non-null as it is part of the primary key for table [mesa]
2025-06-08 21:44:51.566 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_pedido] to be non-null as it is part of the primary key for table [pedido]
2025-06-08 21:44:51.566 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_producto] to be non-null as it is part of the primary key for table [producto]
2025-06-08 21:44:51.566 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_seccion] to be non-null as it is part of the primary key for table [seccion]
2025-06-08 21:44:51.847 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2025-06-08 21:44:51.894 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:44:51.894 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=23, javafx.runtime.version=21.0.1+6, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@2aa3106d, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.community.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant\target\classes;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.0\jackson-annotations-2.17.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.19.0\jackson-core-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.19.0\jackson-databind-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-xml\2.19.0\jackson-dataformat-xml-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\woodstox\woodstox-core\7.1.0\woodstox-core-7.1.0.jar;C:\Users\USUARIO\.m2\repository\com\github\virtuald\curvesapi\1.07\curvesapi-1.07.jar;C:\Users\USUARIO\.m2\repository\com\lowagie\itext\2.1.7.js10\itext-2.1.7.js10.jar;C:\Users\USUARIO\.m2\repository\com\miglayout\miglayout\3.7.4\miglayout-3.7.4.jar;C:\Users\USUARIO\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\SparseBitSet\1.2\SparseBitSet-1.2.jar;C:\Users\USUARIO\.m2\repository\commons-beanutils\commons-beanutils\1.9.4\commons-beanutils-1.9.4.jar;C:\Users\USUARIO\.m2\repository\commons-codec\commons-codec\1.18.0\commons-codec-1.18.0.jar;C:\Users\USUARIO\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\USUARIO\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\USUARIO\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\USUARIO\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\USUARIO\.m2\repository\io\github\mkpaz\atlantafx-base\2.0.0\atlantafx-base-2.0.0.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-commons\1.15.0\micrometer-commons-1.15.0.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-observation\1.15.0\micrometer-observation-1.15.0.jar;C:\Users\USUARIO\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\USUARIO\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\USUARIO\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\USUARIO\.m2\repository\jakarta\el\jakarta.el-api\4.0.0\jakarta.el-api-4.0.0.jar;C:\Users\USUARIO\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\USUARIO\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\USUARIO\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\USUARIO\.m2\repository\net\bytebuddy\byte-buddy\1.17.5\byte-buddy-1.17.5.jar;C:\Users\USUARIO\.m2\repository\net\sf\jasperreports\jasperreports\6.20.0\jasperreports-6.20.0.jar;C:\Users\USUARIO\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-collections4\4.2\commons-collections4-4.2.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-compress\1.21\commons-compress-1.21.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-math3\3.6.1\commons-math3-3.6.1.jar;C:\Users\USUARIO\.m2\repository\org\apache\groovy\groovy\4.0.6\groovy-4.0.6.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi\5.2.3\poi-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml\5.2.3\poi-ooxml-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml-lite\5.2.3\poi-ooxml-lite-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\xmlbeans\xmlbeans\5.1.1\xmlbeans-5.1.1.jar;C:\Users\USUARIO\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcprov-jdk15on\1.70\bcprov-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcutil-jdk15on\1.70\bcutil-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\codehaus\woodstox\stax2-api\4.2.2\stax2-api-4.2.2.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\jdt\ecj\3.21.0\ecj-3.21.0.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jakarta.el\4.0.2\jakarta.el-4.0.2.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-community-dialects\6.4.4.Final\hibernate-community-dialects-6.4.4.Final.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-core\6.6.15.Final\hibernate-core-6.6.15.Final.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.2.Final\hibernate-validator-7.0.2.Final.jar;C:\Users\USUARIO\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jcommon\1.0.23\jcommon-1.0.23.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jfreechart\1.0.19\jfreechart-1.0.19.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\bootstrapfx\bootstrapfx-core\0.2.4\bootstrapfx-core-0.2.4.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-core\12.3.1\ikonli-core-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-fontawesome5-pack\12.3.1\ikonli-fontawesome5-pack-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-javafx\12.3.1\ikonli-javafx-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aop\6.2.7\spring-aop-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aspects\6.2.7\spring-aspects-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-beans\6.2.7\spring-beans-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-context\6.2.7\spring-context-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-core\6.2.7\spring-core-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-expression\6.2.7\spring-expression-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jcl\6.2.7\spring-jcl-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jdbc\6.2.7\spring-jdbc-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-orm\6.2.7\spring-orm-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-tx\6.2.7\spring-tx-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot\3.5.0\spring-boot-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.5.0\spring-boot-autoconfigure-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter\3.5.0\spring-boot-starter-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.5.0\spring-boot-starter-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.5.0\spring-boot-starter-jdbc-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.5.0\spring-boot-starter-logging-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-commons\3.5.0\spring-data-commons-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-jpa\3.5.0\spring-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\xerial\sqlite-jdbc\3.46.0.0\sqlite-jdbc-3.46.0.0.jar;C:\Users\USUARIO\.m2\repository\org\yaml\snakeyaml\2.4\snakeyaml-2.4.jar;C:\Users\USUARIO\.m2\repository\win\zqxu\jrviewer-fx\0.1.1\jrviewer-fx-0.1.1.jar, LOGBACK_ROLLINGPOLICY_MAX_FILE_SIZE=10485760, java.vm.vendor=Oracle Corporation, LOG_PATH=logs/, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Bogota, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, javafx.version=21.0.1, os.name=Windows 11, java.vm.specification.version=23, APPLICATION_NAME=ProyectoRestaurant, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=MX, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk-23\bin, sun.java.command=pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.use_sql_comments=true, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@2e6ec8bc, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\USUARIO, user.language=es, java.specification.vendor=Oracle Corporation, jdk.module.path=C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-fxml\21.0.1\javafx-fxml-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-fxml\21.0.1\javafx-fxml-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-swing\21.0.1\javafx-swing-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-swing\21.0.1\javafx-swing-21.0.1.jar, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-23, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7-58, user.name=USUARIO, stdout.encoding=Cp1252, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, FILE_LOG_PATTERN=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, LOG_FILE=logs/restaurant.log, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\USUARIO\AppData\Local\Temp\, java.version=23.0.2, LOGBACK_ROLLINGPOLICY_CLEAN_HISTORY_ON_START=false, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=2340, sun.os.patch.level=, CONSOLE_LOG_CHARSET=windows-1252, LOGBACK_ROLLINGPOLICY_MAX_HISTORY=30, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@7719eb79, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-23\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;c:\Users\USUARIO\AppData\Local\Programs\cursor\resources\app\bin;C:\Users\USUARIO\AppData\Local\Programs\Python\Python313\Scripts\;C:\Users\USUARIO\AppData\Local\Programs\Python\Launcher\;C:\Users\USUARIO\AppData\Local\Microsoft\WindowsApps;C:\Users\USUARIO\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\USUARIO\AppData\Roaming\npm;C:\flutter\bin;C:\Users\USUARIO\AppData\Local\Programs\Python\Python313\;C:\ffpmg\bin;C:\Users\USUARIO\Downloads\apache-maven-3.9.9\bin;C:\Users\USUARIO\AppData\Local\GitHubDesktop\bin;C:\Users\USUARIO\AppData\Local\Microsoft\WinGet\Packages\Schniz.fnm_Microsoft.Winget.Source_8wekyb3d8bbwe;C:\Users\USUARIO\AppData\Local\Programs\cursor\resources\app\bin;., stderr.encoding=Cp1252, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=23.0.2+7-58, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), CONSOLE_LOG_PATTERN=%d{HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{36}) - %msg%n, java.class.version=67.0, LOGGED_APPLICATION_NAME=[ProyectoRestaurant] , LOGBACK_ROLLINGPOLICY_TOTAL_SIZE_CAP=104857600}
2025-06-08 21:44:51.901 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-06-08 21:44:51.907 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:44:51.908 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:44:51.908 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:44:51.908 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:44:51.909 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:44:51.909 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:44:51.910 [JavaFX-Launcher] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:44:51.912 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:44:51.913 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:44:51.913 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:44:51.913 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:44:51.913 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:44:51.913 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:44:51.915 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:44:51.915 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:44:51.956 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:44:51.956 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:44:51.961 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:44:51.961 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:44:51.964 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:44:51.964 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:44:51.968 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:44:51.968 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:44:51.970 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:44:51.970 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:44:51.977 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:44:51.977 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:44:51.981 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:44:51.981 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:44:51.983 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:44:51.983 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:44:51.986 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:44:51.986 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:44:51.988 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:44:52.043 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-06-08 21:44:52.043 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-06-08 21:44:52.044 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-06-08 21:44:52.045 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-06-08 21:44:52.047 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@468b65be] under count; prior registration was null
2025-06-08 21:44:52.048 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@689dc231] under every; prior registration was null
2025-06-08 21:44:52.048 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@c86341d] under any; prior registration was null
2025-06-08 21:44:52.049 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-06-08 21:44:52.049 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-06-08 21:44:52.049 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-06-08 21:44:52.049 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-06-08 21:44:52.050 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-06-08 21:44:52.050 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-06-08 21:44:52.050 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-06-08 21:44:52.050 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-06-08 21:44:52.050 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-06-08 21:44:52.050 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-06-08 21:44:52.051 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-06-08 21:44:52.051 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-06-08 21:44:52.051 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-06-08 21:44:52.051 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-06-08 21:44:52.051 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-06-08 21:44:52.051 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-06-08 21:44:52.051 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-06-08 21:44:52.053 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4050dc1] under sinh; prior registration was null
2025-06-08 21:44:52.053 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@748e8fed] under cosh; prior registration was null
2025-06-08 21:44:52.053 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cd52f5f] under tanh; prior registration was null
2025-06-08 21:44:52.053 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e3f80dd] under pi; prior registration was null
2025-06-08 21:44:52.053 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1278f9de] under log; prior registration was null
2025-06-08 21:44:52.054 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-06-08 21:44:52.054 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-06-08 21:44:52.054 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-06-08 21:44:52.054 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-06-08 21:44:52.054 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-06-08 21:44:52.054 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-06-08 21:44:52.055 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-06-08 21:44:52.055 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-06-08 21:44:52.055 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-06-08 21:44:52.055 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-06-08 21:44:52.055 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-06-08 21:44:52.055 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-06-08 21:44:52.056 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@433537f6] under position; prior registration was null
2025-06-08 21:44:52.059 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7e2f7e25] under overlay; prior registration was null
2025-06-08 21:44:52.059 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@d180f1d] under trim; prior registration was null
2025-06-08 21:44:52.061 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@10067c2d] under cast; prior registration was null
2025-06-08 21:44:52.061 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2226f1dc] under collate; prior registration was null
2025-06-08 21:44:52.062 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@284755d6] under extract; prior registration was null
2025-06-08 21:44:52.062 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-06-08 21:44:52.062 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-06-08 21:44:52.062 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@2d6b4887] under ifnull; prior registration was null
2025-06-08 21:44:52.064 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-06-08 21:44:52.064 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-06-08 21:44:52.067 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@5872401f] under pad; prior registration was null
2025-06-08 21:44:52.068 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@3f7fc71c] under str; prior registration was null
2025-06-08 21:44:52.071 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3cfdc6fd] under format; prior registration was null
2025-06-08 21:44:52.071 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@5b152801] under timestampadd; prior registration was null
2025-06-08 21:44:52.073 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@48eebe7a] under timestampdiff; prior registration was null
2025-06-08 21:44:52.073 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-06-08 21:44:52.073 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-06-08 21:44:52.074 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7bef679e] under current_date; prior registration was null
2025-06-08 21:44:52.074 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@58db24e6] under current_time; prior registration was null
2025-06-08 21:44:52.074 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@76b7ee76] under current_timestamp; prior registration was null
2025-06-08 21:44:52.074 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-06-08 21:44:52.074 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-06-08 21:44:52.074 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-06-08 21:44:52.074 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@48a45977] under local_date; prior registration was null
2025-06-08 21:44:52.074 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4877046a] under local_time; prior registration was null
2025-06-08 21:44:52.074 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@490af596] under local_datetime; prior registration was null
2025-06-08 21:44:52.074 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@87669f] under offset_datetime; prior registration was null
2025-06-08 21:44:52.074 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-06-08 21:44:52.074 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-06-08 21:44:52.074 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-06-08 21:44:52.074 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-06-08 21:44:52.074 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a02e819] under instant; prior registration was null
2025-06-08 21:44:52.074 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-06-08 21:44:52.075 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@42a94db9] under sql; prior registration was null
2025-06-08 21:44:52.076 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f890546] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-06-08 21:44:52.076 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b4c2cc2] under left; prior registration was NamedSqmFunctionTemplate(left)
2025-06-08 21:44:52.076 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1597c2e1] under right; prior registration was NamedSqmFunctionTemplate(right)
2025-06-08 21:44:52.076 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1d5b916f] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-06-08 21:44:52.076 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(length)] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-06-08 21:44:52.076 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-06-08 21:44:52.076 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under least; prior registration was NamedSqmFunctionTemplate(least)
2025-06-08 21:44:52.076 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under greatest; prior registration was NamedSqmFunctionTemplate(greatest)
2025-06-08 21:44:52.076 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-06-08 21:44:52.076 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-06-08 21:44:52.078 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@86b8aa5] under trunc; prior registration was null
2025-06-08 21:44:52.079 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-06-08 21:44:52.079 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1278f9de
2025-06-08 21:44:52.079 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-06-08 21:44:52.079 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-06-08 21:44:52.079 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-06-08 21:44:52.079 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-06-08 21:44:52.079 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2025-06-08 21:44:52.079 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : chr -> char
2025-06-08 21:44:52.080 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5a99e841] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-06-08 21:44:52.080 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@66351941] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2025-06-08 21:44:52.080 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@43d7ca97] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2025-06-08 21:44:52.080 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(strftime)] under format; prior registration was org.hibernate.dialect.function.FormatFunction@3cfdc6fd
2025-06-08 21:44:52.080 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-06-08 21:44:52.081 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-06-08 21:44:52.081 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-06-08 21:44:52.081 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-06-08 21:44:52.081 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-06-08 21:44:52.081 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-06-08 21:44:52.082 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@4bfcf23a] under listagg; prior registration was null
2025-06-08 21:44:52.084 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg)
2025-06-08 21:44:52.084 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-06-08 21:44:52.084 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2025-06-08 21:44:52.084 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-06-08 21:44:52.084 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-06-08 21:44:52.084 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-06-08 21:44:52.085 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg)
2025-06-08 21:44:52.085 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type)
2025-06-08 21:44:52.085 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-06-08 21:44:52.085 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg)
2025-06-08 21:44:52.085 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-06-08 21:44:52.085 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-06-08 21:44:52.085 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-06-08 21:44:52.085 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-06-08 21:44:52.085 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2025-06-08 21:44:52.085 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-06-08 21:44:52.085 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-06-08 21:44:52.085 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-06-08 21:44:52.085 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date
2025-06-08 21:44:52.085 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time
2025-06-08 21:44:52.085 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp
2025-06-08 21:44:52.085 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date
2025-06-08 21:44:52.085 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant
2025-06-08 21:44:52.085 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time
2025-06-08 21:44:52.085 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp
2025-06-08 21:44:52.085 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-06-08 21:44:52.085 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-06-08 21:44:52.085 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-06-08 21:44:52.085 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2025-06-08 21:44:52.085 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-06-08 21:44:52.085 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-06-08 21:44:52.085 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value
2025-06-08 21:44:52.085 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg)
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(pattern, string[, start])
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string)
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding])
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg)
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg)
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1)
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-06-08 21:44:52.086 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2025-06-08 21:44:52.087 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-06-08 21:44:52.087 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi
2025-06-08 21:44:52.087 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-06-08 21:44:52.087 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-06-08 21:44:52.087 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-06-08 21:44:52.087 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-06-08 21:44:52.087 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-06-08 21:44:52.087 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-06-08 21:44:52.087 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number()
2025-06-08 21:44:52.087 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding])
2025-06-08 21:44:52.087 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-06-08 21:44:52.087 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-06-08 21:44:52.087 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-06-08 21:44:52.087 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-06-08 21:44:52.087 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql
2025-06-08 21:44:52.087 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-06-08 21:44:52.087 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg)
2025-06-08 21:44:52.087 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-06-08 21:44:52.087 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-06-08 21:44:52.087 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg)
2025-06-08 21:44:52.087 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-06-08 21:44:52.087 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-06-08 21:44:52.087 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-06-08 21:44:52.087 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-06-08 21:44:52.087 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-06-08 21:44:52.087 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... )
2025-06-08 21:44:52.087 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... )
2025-06-08 21:44:52.087 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string)
2025-06-08 21:44:52.093 [JavaFX-Launcher] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048)
2025-06-08 21:44:52.164 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:44:52.166 [JavaFX-Launcher] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-06-08 21:44:52.259 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.266 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.272 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.272 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.272 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:44:52.272 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:44:52.481 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Factura]: private accessor [cliente]
2025-06-08 21:44:52.485 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.486 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.508 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:44:52.508 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:44:52.533 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Empleado]: private accessor [apellido]
2025-06-08 21:44:52.534 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:44:52.535 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:44:52.550 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Seccion]: private accessor [detalle]
2025-06-08 21:44:52.552 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:44:52.552 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:44:52.578 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Cliente]: private accessor [apellido]
2025-06-08 21:44:52.579 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.579 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.579 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.579 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.579 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:44:52.579 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:44:52.598 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Menu]: private accessor [codPedido]
2025-06-08 21:44:52.598 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.599 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.600 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.600 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.600 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.600 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.600 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.600 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.600 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:44:52.600 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:44:52.626 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido]: private accessor [cantidad]
2025-06-08 21:44:52.627 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.627 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.627 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.629 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.629 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.629 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.629 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.629 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:44:52.629 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:44:52.651 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Producto]: private accessor [categoria]
2025-06-08 21:44:52.651 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.651 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.653 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:44:52.653 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:44:52.668 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Categoria]: private accessor [estado]
2025-06-08 21:44:52.668 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:44:52.669 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:44:52.684 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Mesa]: private accessor [capacidad]
2025-06-08 21:44:52.685 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.685 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.686 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.686 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.686 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.686 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.686 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:44:52.686 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:44:52.709 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Pedido]: private accessor [cantPedidos]
2025-06-08 21:44:52.709 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.710 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.710 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:44:52.746 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks
2025-06-08 21:44:52.747 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente]
2025-06-08 21:44:52.753 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido]
2025-06-08 21:44:52.753 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Factura) `staticFetchableList` generator
2025-06-08 21:44:52.754 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Empleado) `staticFetchableList` generator
2025-06-08 21:44:52.754 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Seccion) `staticFetchableList` generator
2025-06-08 21:44:52.754 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Cliente) `staticFetchableList` generator
2025-06-08 21:44:52.754 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido]
2025-06-08 21:44:52.754 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto]
2025-06-08 21:44:52.755 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Menu) `staticFetchableList` generator
2025-06-08 21:44:52.755 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura]
2025-06-08 21:44:52.755 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido]
2025-06-08 21:44:52.756 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto]
2025-06-08 21:44:52.757 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.DetPedido) `staticFetchableList` generator
2025-06-08 21:44:52.757 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria]
2025-06-08 21:44:52.758 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion]
2025-06-08 21:44:52.758 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Producto) `staticFetchableList` generator
2025-06-08 21:44:52.759 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Categoria) `staticFetchableList` generator
2025-06-08 21:44:52.759 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Mesa) `staticFetchableList` generator
2025-06-08 21:44:52.759 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente]
2025-06-08 21:44:52.760 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado]
2025-06-08 21:44:52.760 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa]
2025-06-08 21:44:52.760 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Pedido) `staticFetchableList` generator
2025-06-08 21:44:52.869 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2025-06-08 21:44:52.872 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Factura)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura] 
2025-06-08 21:44:52.887 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@64fe0125] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente] 
2025-06-08 21:44:52.891 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:44:52.897 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@48fed3e0] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido] 
2025-06-08 21:44:52.897 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:44:52.897 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5c851069] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente] 
2025-06-08 21:44:52.898 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:44:52.898 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6cca252f] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado] 
2025-06-08 21:44:52.899 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:44:52.899 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3c24ea46] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa] 
2025-06-08 21:44:52.899 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:44:52.911 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.cantVisitas]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.email]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.nombre]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.telefono]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.codigo]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.fechaEmision]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.igv]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.rol]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.telefono]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.subtotal]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.total]

2025-06-08 21:44:52.916 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (f1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura) {
          primaryTableReference : factura as f1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente) {
              primaryTableReference : cliente as c1_0
            }
            left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido) {
              primaryTableReference : pedido as p1_0
              TableGroupJoins {
                left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente) {
                  primaryTableReference : cliente as c2_0
                }
                left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado) {
                  primaryTableReference : empleado as e1_0
                }
                left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa) {
                  primaryTableReference : mesa as m1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:44:52.931 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:44:52.932 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Factura */ select id_factura from factura where id_factura=?
2025-06-08 21:44:52.932 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Factura */insert into factura (id_cliente,codigo,estado,fecha_emision,igv,id_pedido,subtotal,total) values (?,?,?,?,?,?,?,?)
2025-06-08 21:44:52.932 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Factura */update factura set id_cliente=?,codigo=?,estado=?,fecha_emision=?,igv=?,id_pedido=?,subtotal=?,total=? where id_factura=?
2025-06-08 21:44:52.932 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Factura */delete from factura where id_factura=?
2025-06-08 21:44:52.932 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:44:52.932 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:44:52.932 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.rol]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.telefono]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.usuario]

2025-06-08 21:44:52.933 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:44:52.933 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:44:52.933 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Empleado */ select id_empleado from empleado where id_empleado=?
2025-06-08 21:44:52.933 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */insert into empleado (apellido,dni,estado,nombre,password,rol,telefono,usuario) values (?,?,?,?,?,?,?,?)
2025-06-08 21:44:52.933 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */update empleado set apellido=?,dni=?,estado=?,nombre=?,password=?,rol=?,telefono=?,usuario=? where id_empleado=?
2025-06-08 21:44:52.933 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */delete from empleado where id_empleado=?
2025-06-08 21:44:52.933 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:44:52.934 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Seccion)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] 
2025-06-08 21:44:52.934 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Seccion]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion.detalle]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion.estado]

2025-06-08 21:44:52.934 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Seccion) {
          primaryTableReference : seccion as s1_0
        }
      }
    }

2025-06-08 21:44:52.934 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:44:52.934 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Seccion */ select id_seccion from seccion where id_seccion=?
2025-06-08 21:44:52.934 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */insert into seccion (detalle,estado) values (?,?)
2025-06-08 21:44:52.934 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */update seccion set detalle=?,estado=? where id_seccion=?
2025-06-08 21:44:52.934 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */delete from seccion where id_seccion=?
2025-06-08 21:44:52.935 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:44:52.935 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Cliente)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] 
2025-06-08 21:44:52.935 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Cliente]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.cantVisitas]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.email]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.nombre]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.telefono]

2025-06-08 21:44:52.936 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Cliente) {
          primaryTableReference : cliente as c1_0
        }
      }
    }

2025-06-08 21:44:52.936 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:44:52.936 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Cliente */ select id_cliente from cliente where id_cliente=?
2025-06-08 21:44:52.936 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */insert into cliente (apellido,cant_visitas,dni,email,estado,nombre,telefono) values (?,?,?,?,?,?,?)
2025-06-08 21:44:52.936 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */update cliente set apellido=?,cant_visitas=?,dni=?,email=?,estado=?,nombre=?,telefono=? where id_cliente=?
2025-06-08 21:44:52.936 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */delete from cliente where id_cliente=?
2025-06-08 21:44:52.936 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:44:52.936 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Menu)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu] 
2025-06-08 21:44:52.937 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@746b2073] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido] 
2025-06-08 21:44:52.937 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:44:52.937 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@320b377d] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente] 
2025-06-08 21:44:52.938 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:44:52.939 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@184f025f] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado] 
2025-06-08 21:44:52.939 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:44:52.940 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@a486b4e] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa] 
2025-06-08 21:44:52.940 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m2_0
2025-06-08 21:44:52.941 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@270daacc] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto] 
2025-06-08 21:44:52.942 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p2_0
2025-06-08 21:44:52.943 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4c56d18f] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria] 
2025-06-08 21:44:52.943 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:44:52.944 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2ceb7fa0] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion] 
2025-06-08 21:44:52.944 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:44:52.945 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.codPedido]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.rol]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.telefono]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.total]
 |  \-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.descripcion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.precio]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion.detalle]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.stock]

2025-06-08 21:44:52.945 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu) {
          primaryTableReference : menu as m1_0
          TableGroupJoins {
            left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido) {
              primaryTableReference : pedido as p1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente) {
                  primaryTableReference : cliente as c1_0
                }
                left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado) {
                  primaryTableReference : empleado as e1_0
                }
                left  join LazyTableGroup (m2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa) {
                  primaryTableReference : mesa as m2_0
                }
              }
            }
            left  join LazyTableGroup (p2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto) {
              primaryTableReference : producto as p2_0
              TableGroupJoins {
                left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria) {
                  primaryTableReference : categoria as c2_0
                }
                left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion) {
                  primaryTableReference : seccion as s1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:44:52.946 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:44:52.946 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Menu */ select id_menu from menu where id_menu=?
2025-06-08 21:44:52.946 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Menu */insert into menu (cod_pedido,id_pedido,id_producto) values (?,?,?)
2025-06-08 21:44:52.946 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Menu */update menu set cod_pedido=?,id_pedido=?,id_producto=? where id_menu=?
2025-06-08 21:44:52.946 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Menu */delete from menu where id_menu=?
2025-06-08 21:44:52.946 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : dp1_0
2025-06-08 21:44:52.946 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.DetPedido)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] 
2025-06-08 21:44:52.947 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2fa1fec8] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura] 
2025-06-08 21:44:52.947 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2025-06-08 21:44:52.947 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5581981a] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente] 
2025-06-08 21:44:52.947 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:44:52.948 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2260fb75] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido] 
2025-06-08 21:44:52.948 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:44:52.948 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@44ade772] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente] 
2025-06-08 21:44:52.948 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:44:52.949 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@645a0691] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado] 
2025-06-08 21:44:52.949 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:44:52.950 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3d421348] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa] 
2025-06-08 21:44:52.950 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:44:52.951 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@185cecc6] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido] 
2025-06-08 21:44:52.952 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p2_0
2025-06-08 21:44:52.953 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@368100ec] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente] 
2025-06-08 21:44:52.953 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c3_0
2025-06-08 21:44:52.954 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6f8c9920] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado] 
2025-06-08 21:44:52.954 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e2_0
2025-06-08 21:44:52.955 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@660eaf65] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa] 
2025-06-08 21:44:52.955 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m2_0
2025-06-08 21:44:52.955 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@32e446dc] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto] 
2025-06-08 21:44:52.956 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p3_0
2025-06-08 21:44:52.957 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@cdca60c] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria] 
2025-06-08 21:44:52.957 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c4_0
2025-06-08 21:44:52.958 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7926b2e] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion] 
2025-06-08 21:44:52.958 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:44:52.959 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.cantidad]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.estado]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.telefono]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.codigo]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.fechaEmision]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.igv]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cantPedidos]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.apellido]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.cantVisitas]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.dni]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.email]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.estado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.nombre]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.telefono]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.apellido]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.dni]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.estado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.nombre]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.password]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.rol]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.telefono]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.usuario]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.fechaHora]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.capacidad]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.detalle]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.estado]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.numero]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.total]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.subtotal]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.igv]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.rol]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.telefono]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.precioUnitario]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.descripcion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.precio]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion.detalle]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.stock]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.subtotal]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.total]

2025-06-08 21:44:52.960 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (dp1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido) {
          primaryTableReference : detalle_pedido as dp1_0
          TableGroupJoins {
            left  join LazyTableGroup (f1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura) {
              primaryTableReference : factura as f1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente) {
                  primaryTableReference : cliente as c1_0
                }
                left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido) {
                  primaryTableReference : pedido as p1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente) {
                      primaryTableReference : cliente as c2_0
                    }
                    left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado) {
                      primaryTableReference : empleado as e1_0
                    }
                    left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa) {
                      primaryTableReference : mesa as m1_0
                    }
                  }
                }
              }
            }
             join LazyTableGroup (p2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido) {
              primaryTableReference : pedido as p2_0
              TableGroupJoins {
                left  join LazyTableGroup (c3 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente) {
                  primaryTableReference : cliente as c3_0
                }
                left  join LazyTableGroup (e2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado) {
                  primaryTableReference : empleado as e2_0
                }
                left  join LazyTableGroup (m2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa) {
                  primaryTableReference : mesa as m2_0
                }
              }
            }
             join LazyTableGroup (p3 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto) {
              primaryTableReference : producto as p3_0
              TableGroupJoins {
                left  join LazyTableGroup (c4 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria) {
                  primaryTableReference : categoria as c4_0
                }
                left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion) {
                  primaryTableReference : seccion as s1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:44:52.961 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:44:52.961 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */ select id_detalle_pedido from detalle_pedido where id_detalle_pedido=?
2025-06-08 21:44:52.961 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */insert into detalle_pedido (cantidad,estado,id_factura,igv,id_pedido,precio_unitario,id_producto,subtotal,total) values (?,?,?,?,?,?,?,?,?)
2025-06-08 21:44:52.961 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */update detalle_pedido set cantidad=?,estado=?,id_factura=?,igv=?,id_pedido=?,precio_unitario=?,id_producto=?,subtotal=?,total=? where id_detalle_pedido=?
2025-06-08 21:44:52.961 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */delete from detalle_pedido where id_detalle_pedido=?
2025-06-08 21:44:52.962 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:44:52.962 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Producto)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto] 
2025-06-08 21:44:52.962 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@436efda] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria] 
2025-06-08 21:44:52.962 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:44:52.963 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6db3d596] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion] 
2025-06-08 21:44:52.963 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:44:52.964 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.descripcion]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.precio]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion.detalle]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.stock]

2025-06-08 21:44:52.964 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto) {
          primaryTableReference : producto as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria) {
              primaryTableReference : categoria as c1_0
            }
            left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion) {
              primaryTableReference : seccion as s1_0
            }
          }
        }
      }
    }

2025-06-08 21:44:52.965 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:44:52.965 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Producto */ select id_producto from producto where id_producto=?
2025-06-08 21:44:52.965 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Producto */insert into producto (id_categoria,descripcion,estado,nombre,precio,id_seccion,stock) values (?,?,?,?,?,?,?)
2025-06-08 21:44:52.965 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Producto */update producto set id_categoria=?,descripcion=?,estado=?,nombre=?,precio=?,id_seccion=?,stock=? where id_producto=?
2025-06-08 21:44:52.965 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Producto */delete from producto where id_producto=?
2025-06-08 21:44:52.965 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:44:52.965 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Categoria)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] 
2025-06-08 21:44:52.965 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Categoria]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Categoria.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Categoria.nombre]

2025-06-08 21:44:52.966 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Categoria) {
          primaryTableReference : categoria as c1_0
        }
      }
    }

2025-06-08 21:44:52.966 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:44:52.966 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Categoria */ select id_categoria from categoria where id_categoria=?
2025-06-08 21:44:52.966 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */insert into categoria (estado,nombre) values (?,?)
2025-06-08 21:44:52.966 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */update categoria set estado=?,nombre=? where id_categoria=?
2025-06-08 21:44:52.966 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */delete from categoria where id_categoria=?
2025-06-08 21:44:52.966 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:44:52.966 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Mesa)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] 
2025-06-08 21:44:52.967 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Mesa]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.capacidad]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.detalle]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.numero]

2025-06-08 21:44:52.967 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Mesa) {
          primaryTableReference : mesa as m1_0
        }
      }
    }

2025-06-08 21:44:52.967 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:44:52.967 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Mesa */ select id_mesa from mesa where id_mesa=?
2025-06-08 21:44:52.967 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */insert into mesa (capacidad,detalle,estado,numero) values (?,?,?,?)
2025-06-08 21:44:52.968 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */update mesa set capacidad=?,detalle=?,estado=?,numero=? where id_mesa=?
2025-06-08 21:44:52.968 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */delete from mesa where id_mesa=?
2025-06-08 21:44:52.968 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:44:52.968 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Pedido)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] 
2025-06-08 21:44:52.968 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@9f6c806] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente] 
2025-06-08 21:44:52.969 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:44:52.969 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@10c3c59d] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado] 
2025-06-08 21:44:52.969 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:44:52.970 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@57fe06c1] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa] 
2025-06-08 21:44:52.971 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:44:52.971 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cantPedidos]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.cantVisitas]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.email]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.nombre]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.telefono]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.password]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.rol]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.telefono]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.usuario]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.fechaHora]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.capacidad]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.detalle]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.numero]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.total]

2025-06-08 21:44:52.972 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido) {
          primaryTableReference : pedido as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente) {
              primaryTableReference : cliente as c1_0
            }
            left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado) {
              primaryTableReference : empleado as e1_0
            }
            left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa) {
              primaryTableReference : mesa as m1_0
            }
          }
        }
      }
    }

2025-06-08 21:44:52.973 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:44:52.973 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Pedido */ select id_pedido from pedido where id_pedido=?
2025-06-08 21:44:52.973 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */insert into pedido (cant_pedidos,id_cliente,id_empleado,estado,fecha_hora,id_mesa,total) values (?,?,?,?,?,?,?)
2025-06-08 21:44:52.974 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */update pedido set cant_pedidos=?,id_cliente=?,id_empleado=?,estado=?,fecha_hora=?,id_mesa=?,total=? where id_pedido=?
2025-06-08 21:44:52.974 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */delete from pedido where id_pedido=?
2025-06-08 21:44:53.009 [JavaFX-Launcher] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-08 21:44:53.010 [JavaFX-Launcher] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@451e3f38] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1c9c743c]
2025-06-08 21:44:53.012 [JavaFX-Launcher] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries
2025-06-08 21:44:53.012 [JavaFX-Launcher] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries
2025-06-08 21:44:53.033 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists categoria
2025-06-08 21:44:53.037 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists cliente
2025-06-08 21:44:53.038 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists detalle_pedido
2025-06-08 21:44:53.039 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists empleado
2025-06-08 21:44:53.041 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists factura
2025-06-08 21:44:53.042 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists menu
2025-06-08 21:44:53.042 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists mesa
2025-06-08 21:44:53.043 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists pedido
2025-06-08 21:44:53.044 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists producto
2025-06-08 21:44:53.045 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists seccion
2025-06-08 21:44:53.052 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table categoria (
        id_categoria integer,
        estado varchar(20),
        nombre varchar(100) not null,
        primary key (id_categoria)
    )
2025-06-08 21:44:53.081 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table cliente (
        cant_visitas integer,
        dni varchar(8) unique,
        id_cliente integer,
        telefono varchar(15),
        estado varchar(20),
        apellido varchar(50) not null,
        nombre varchar(50) not null,
        email varchar(100),
        primary key (id_cliente)
    )
2025-06-08 21:44:53.086 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table detalle_pedido (
        cantidad integer not null,
        igv float,
        precio_unitario float not null,
        subtotal float not null,
        total float,
        id_detalle_pedido integer,
        id_factura bigint,
        id_pedido bigint not null,
        id_producto bigint not null,
        estado varchar(20),
        primary key (id_detalle_pedido)
    )
2025-06-08 21:44:53.092 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table empleado (
        dni varchar(8) not null unique,
        id_empleado integer,
        telefono varchar(9),
        estado varchar(20),
        rol varchar(20) not null,
        usuario varchar(50) not null unique,
        apellido varchar(100) not null,
        nombre varchar(100) not null,
        password varchar(100) not null,
        primary key (id_empleado)
    )
2025-06-08 21:44:53.099 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table factura (
        igv float,
        subtotal float,
        total float,
        fecha_emision timestamp,
        id_cliente bigint,
        id_factura integer,
        id_pedido bigint unique,
        codigo varchar(20) unique,
        estado varchar(20),
        primary key (id_factura)
    )
2025-06-08 21:44:53.103 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table menu (
        id_menu integer,
        id_pedido bigint,
        id_producto bigint,
        cod_pedido varchar(50),
        primary key (id_menu)
    )
2025-06-08 21:44:53.108 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table mesa (
        capacidad integer not null,
        numero integer not null unique,
        id_mesa integer,
        estado varchar(20),
        detalle varchar(200),
        primary key (id_mesa)
    )
2025-06-08 21:44:53.114 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table pedido (
        cant_pedidos integer,
        total float,
        fecha_hora timestamp,
        id_cliente bigint,
        id_empleado bigint,
        id_mesa bigint,
        id_pedido integer,
        estado varchar(20),
        primary key (id_pedido)
    )
2025-06-08 21:44:53.120 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table producto (
        precio float not null,
        stock integer,
        id_categoria bigint,
        id_producto integer,
        id_seccion bigint,
        estado varchar(20),
        nombre varchar(100) not null,
        descripcion varchar(200),
        primary key (id_producto)
    )
2025-06-08 21:44:53.125 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table seccion (
        id_seccion integer,
        estado varchar(20),
        detalle varchar(200),
        primary key (id_seccion)
    )
2025-06-08 21:44:53.135 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@50f11ea6
2025-06-08 21:44:53.136 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: f0ad6da4-0379-4a20-aa01-a2fa41ca65cd (<unnamed>)
2025-06-08 21:44:53.136 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-06-08 21:44:53.136 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory
2025-06-08 21:44:53.136 [JavaFX-Launcher] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-08 21:44:53.485 [JavaFX-Launcher] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2025-06-08 21:44:53.774 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy106.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:147)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:38)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:44:54.019 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy106.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:38)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:44:54.076 [JavaFX-Launcher] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-08 21:44:54.080 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy106.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:38)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:44:54.409 [JavaFX-Launcher] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:44:54.413 [JavaFX-Launcher] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-06-08 21:44:54.414 [JavaFX-Launcher] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-06-08 21:44:54.417 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:44:54.418 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-06-08 21:44:54.418 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:44:54.418 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:44:54.419 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:44:54.419 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:44:54.419 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:44:54.421 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:44:54.423 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:44:54.423 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:44:54.423 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:44:54.423 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:44:54.423 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:44:54.754 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - Started application in 8.275 seconds (process running for 9.526)
2025-06-08 21:44:54.792 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-08 21:44:54.792 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - begin
2025-06-08 21:44:54.936 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:44:54.937 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3))] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:44:54.951 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3)]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).rol]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).telefono]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).usuario]

2025-06-08 21:44:54.951 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3)) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:44:54.973 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:44:54.979 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id_empleado,
        e1_0.apellido,
        e1_0.dni,
        e1_0.estado,
        e1_0.nombre,
        e1_0.password,
        e1_0.rol,
        e1_0.telefono,
        e1_0.usuario 
    from
        empleado e1_0
2025-06-08 21:44:55.019 [JavaFX-Launcher] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3) -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3))@971918160 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:44:55.030 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - committing
2025-06-08 21:44:55.033 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-08 21:44:55.033 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - begin
2025-06-08 21:44:55.034 [JavaFX-Launcher] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-08 21:44:55.056 [JavaFX-Launcher] DEBUG o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-08 21:44:55.069 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    /* insert for
        pe.edu.upeu.proyecto_restaurant.modulo.Empleado */insert 
    into
        empleado (apellido, dni, estado, nombre, password, rol, telefono, usuario) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-06-08 21:44:55.100 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    select
        last_insert_rowid()
2025-06-08 21:44:55.111 [JavaFX-Launcher] DEBUG org.hibernate.orm.results - Initializer list is empty
2025-06-08 21:44:55.114 [JavaFX-Launcher] DEBUG o.h.id.IdentifierGeneratorHelper - Extracted generated values [pe.edu.upeu.proyecto_restaurant.modulo.Empleado]: [Ljava.lang.Object;@63489a2
2025-06-08 21:44:55.118 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - committing
2025-06-08 21:44:55.119 [JavaFX-Launcher] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-08 21:44:55.120 [JavaFX-Launcher] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-08 21:44:55.127 [JavaFX-Launcher] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-06-08 21:44:55.128 [JavaFX-Launcher] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-06-08 21:44:55.129 [JavaFX-Launcher] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
2025-06-08 21:44:55.130 [JavaFX-Launcher] DEBUG o.h.internal.util.EntityPrinter - pe.edu.upeu.proyecto_restaurant.modulo.Empleado{estado=activo, password=admin, apellido=Sistema, usuario=admin, id=1, telefono=000000000, nombre=Administrador, dni=00000000, rol=admin}
2025-06-08 21:44:55.134 [JavaFX-Launcher] INFO  p.e.u.p.ProyectoRestaurantApplication - Usuario administrador creado con éxito
2025-06-08 21:45:01.894 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Intentando autenticar usuario: admin
2025-06-08 21:45:01.988 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:45:01.989 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2))] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:45:02.004 [JavaFX Application Thread] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@fd39ade
2025-06-08 21:45:02.006 [JavaFX Application Thread] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).usuario) 
2025-06-08 21:45:02.021 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2)]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).rol]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).telefono]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).usuario]

2025-06-08 21:45:02.039 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2)) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:45:02.044 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:45:02.045 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id_empleado,
        e1_0.apellido,
        e1_0.dni,
        e1_0.estado,
        e1_0.nombre,
        e1_0.password,
        e1_0.rol,
        e1_0.telefono,
        e1_0.usuario 
    from
        empleado e1_0 
    where
        e1_0.usuario=?
2025-06-08 21:45:02.047 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2) -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2))@1086067272 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:45:02.059 [JavaFX Application Thread] WARN  p.e.u.p.control.ControlLogin - Error de autenticación: Credenciales inválidas para usuario: admin
2025-06-08 21:45:05.079 [JavaFX Application Thread] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-08 21:45:05.079 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing
2025-06-08 21:45:05.079 [JavaFX Application Thread] DEBUG o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2025-06-08 21:45:05.080 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists categoria
2025-06-08 21:45:05.093 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists cliente
2025-06-08 21:45:05.098 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists detalle_pedido
2025-06-08 21:45:05.104 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists empleado
2025-06-08 21:45:05.110 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists factura
2025-06-08 21:45:05.115 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists menu
2025-06-08 21:45:05.121 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists mesa
2025-06-08 21:45:05.126 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists pedido
2025-06-08 21:45:05.131 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists producto
2025-06-08 21:45:05.136 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists seccion
2025-06-08 21:45:05.142 [JavaFX Application Thread] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@70ea2c43] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1c9c743c]
2025-06-08 21:45:05.142 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2025-06-08 21:45:05.144 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2025-06-08 21:45:05.145 [JavaFX Application Thread] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-08 21:45:05.148 [JavaFX Application Thread] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-08 21:46:32.810 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:46:32.816 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:46:32.817 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:46:32.817 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:46:32.826 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:46:32.828 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:46:32.872 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:46:33.134 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:46:33.148 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:46:33.150 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:46:33.150 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:46:33.151 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:46:33.151 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:46:33.270 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - Starting application using Java 23.0.2 with PID 4412 (started by USUARIO in C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant)
2025-06-08 21:46:33.273 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-08 21:46:34.561 [JavaFX-Launcher] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-08 21:46:34.737 [JavaFX-Launcher] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 163 ms. Found 10 JPA repository interfaces.
2025-06-08 21:46:35.481 [JavaFX-Launcher] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@506e1b77
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/USUARIO/Documents/ProyectoRestaurantJava/ProyectoRestaurant/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		pe.edu.upeu.proyecto_restaurant.modulo.Categoria
		pe.edu.upeu.proyecto_restaurant.modulo.Cliente
		pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
		pe.edu.upeu.proyecto_restaurant.modulo.Empleado
		pe.edu.upeu.proyecto_restaurant.modulo.Factura
		pe.edu.upeu.proyecto_restaurant.modulo.Menu
		pe.edu.upeu.proyecto_restaurant.modulo.Mesa
		pe.edu.upeu.proyecto_restaurant.modulo.Pedido
		pe.edu.upeu.proyecto_restaurant.modulo.Producto
		pe.edu.upeu.proyecto_restaurant.modulo.Seccion]
	Mapping files names []
	Properties []
2025-06-08 21:46:35.495 [JavaFX-Launcher] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-06-08 21:46:35.502 [JavaFX-Launcher] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-06-08 21:46:35.608 [JavaFX-Launcher] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-08 21:46:35.610 [JavaFX-Launcher] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found
2025-06-08 21:46:35.649 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-06-08 21:46:35.650 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-06-08 21:46:35.652 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:46:35.652 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:46:35.653 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-06-08 21:46:35.655 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-06-08 21:46:35.656 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-06-08 21:46:35.659 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:46:35.660 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-06-08 21:46:35.662 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-06-08 21:46:35.663 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:46:35.665 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-06-08 21:46:35.677 [JavaFX-Launcher] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-06-08 21:46:35.680 [JavaFX-Launcher] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-08 21:46:35.820 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4964e9bb
2025-06-08 21:46:35.820 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4964e9bb
2025-06-08 21:46:35.820 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4964e9bb
2025-06-08 21:46:35.821 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@43123434
2025-06-08 21:46:35.821 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@43123434
2025-06-08 21:46:35.821 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@43a6fc14
2025-06-08 21:46:35.821 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@43a6fc14
2025-06-08 21:46:35.821 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1caf5753
2025-06-08 21:46:35.821 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1caf5753
2025-06-08 21:46:35.821 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@72684c4c
2025-06-08 21:46:35.822 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@72684c4c
2025-06-08 21:46:35.822 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@72684c4c
2025-06-08 21:46:35.822 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@208975a1
2025-06-08 21:46:35.822 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@208975a1
2025-06-08 21:46:35.822 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@208975a1
2025-06-08 21:46:35.822 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@54bb7bf8
2025-06-08 21:46:35.822 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@54bb7bf8
2025-06-08 21:46:35.822 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@32c8bbf3
2025-06-08 21:46:35.822 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2728bca
2025-06-08 21:46:35.823 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2728bca
2025-06-08 21:46:35.823 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@69bdd258
2025-06-08 21:46:35.823 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@66d6102c
2025-06-08 21:46:35.823 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@11363826
2025-06-08 21:46:35.823 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@11363826
2025-06-08 21:46:35.823 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@11363826
2025-06-08 21:46:35.823 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@78ccd11
2025-06-08 21:46:35.824 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@78ccd11
2025-06-08 21:46:35.824 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@78ccd11
2025-06-08 21:46:35.824 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@a4e0aa
2025-06-08 21:46:35.824 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@a4e0aa
2025-06-08 21:46:35.824 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@a4e0aa
2025-06-08 21:46:35.824 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@56a5d7e2
2025-06-08 21:46:35.825 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@56a5d7e2
2025-06-08 21:46:35.825 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@56a5d7e2
2025-06-08 21:46:35.825 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@76f23218
2025-06-08 21:46:35.825 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@76f23218
2025-06-08 21:46:35.825 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@76f23218
2025-06-08 21:46:35.825 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@17f79d92
2025-06-08 21:46:35.825 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@17f79d92
2025-06-08 21:46:35.825 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@30f19e76
2025-06-08 21:46:35.825 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@30f19e76
2025-06-08 21:46:35.825 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@4813454d
2025-06-08 21:46:35.826 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@4813454d
2025-06-08 21:46:35.826 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4813454d
2025-06-08 21:46:35.826 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2f96cca5
2025-06-08 21:46:35.827 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4a6dfc8
2025-06-08 21:46:35.828 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a6dfc8
2025-06-08 21:46:35.829 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3818f304
2025-06-08 21:46:35.830 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6a73f067
2025-06-08 21:46:35.830 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6a73f067
2025-06-08 21:46:35.830 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6a73f067
2025-06-08 21:46:35.831 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7319fa68
2025-06-08 21:46:35.831 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4173335c
2025-06-08 21:46:35.831 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3e8c68a5
2025-06-08 21:46:35.832 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4b0957db
2025-06-08 21:46:35.832 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4b0957db
2025-06-08 21:46:35.832 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@777f2e68
2025-06-08 21:46:35.832 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@777f2e68
2025-06-08 21:46:35.833 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2f4e0a08
2025-06-08 21:46:35.833 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@72da8604
2025-06-08 21:46:35.833 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@736cb00b
2025-06-08 21:46:35.833 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7d6edc60
2025-06-08 21:46:35.834 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@222f878f
2025-06-08 21:46:35.834 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@463cf68
2025-06-08 21:46:35.835 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1299db07
2025-06-08 21:46:35.835 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1299db07
2025-06-08 21:46:35.835 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@191f98e8
2025-06-08 21:46:35.836 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@191f98e8
2025-06-08 21:46:35.836 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@475267bb
2025-06-08 21:46:35.836 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@475267bb
2025-06-08 21:46:35.836 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5dd0e8b6
2025-06-08 21:46:35.836 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5dd0e8b6
2025-06-08 21:46:35.836 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1cd41e8
2025-06-08 21:46:35.837 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1cd41e8
2025-06-08 21:46:35.837 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@647041e1
2025-06-08 21:46:35.837 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@304b9d6b
2025-06-08 21:46:35.837 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6a04568c
2025-06-08 21:46:35.837 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6a04568c
2025-06-08 21:46:35.837 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1ad8825
2025-06-08 21:46:35.838 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6734aeb8
2025-06-08 21:46:35.838 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@bf8c7f0
2025-06-08 21:46:35.838 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@43804035
2025-06-08 21:46:35.838 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@43804035
2025-06-08 21:46:35.838 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2e8114c0
2025-06-08 21:46:35.838 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6c023ec6
2025-06-08 21:46:35.838 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2108a3f1
2025-06-08 21:46:35.839 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2108a3f1
2025-06-08 21:46:35.839 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@6048ce0d
2025-06-08 21:46:35.839 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6048ce0d
2025-06-08 21:46:35.839 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4649e1d0
2025-06-08 21:46:35.840 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4649e1d0
2025-06-08 21:46:35.840 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4649e1d0
2025-06-08 21:46:35.842 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3b4003d1
2025-06-08 21:46:35.842 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3b4003d1
2025-06-08 21:46:35.843 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3b4003d1
2025-06-08 21:46:35.843 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5f333863
2025-06-08 21:46:35.844 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@706394aa
2025-06-08 21:46:35.845 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@4b064ffc
2025-06-08 21:46:35.845 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4b064ffc
2025-06-08 21:46:35.846 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@d3096df
2025-06-08 21:46:35.846 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@d3096df
2025-06-08 21:46:35.846 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@d3096df
2025-06-08 21:46:35.846 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@19609e8a
2025-06-08 21:46:35.846 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@75ca9fc8
2025-06-08 21:46:35.846 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@cca4722
2025-06-08 21:46:35.846 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@cca4722
2025-06-08 21:46:35.847 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@545ae0a
2025-06-08 21:46:35.847 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@545ae0a
2025-06-08 21:46:35.848 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@545ae0a
2025-06-08 21:46:35.848 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@18ccf4e6
2025-06-08 21:46:35.848 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@18ccf4e6
2025-06-08 21:46:35.848 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@39d91ce8
2025-06-08 21:46:35.848 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@39d91ce8
2025-06-08 21:46:35.848 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6774bfa6
2025-06-08 21:46:35.849 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6774bfa6
2025-06-08 21:46:35.849 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4f6978bc
2025-06-08 21:46:35.849 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4f6978bc
2025-06-08 21:46:35.849 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@307dde73
2025-06-08 21:46:35.849 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@307dde73
2025-06-08 21:46:35.850 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@41b2bac8
2025-06-08 21:46:35.850 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@3f9a4d7
2025-06-08 21:46:35.850 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@751908c
2025-06-08 21:46:35.850 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@59015853
2025-06-08 21:46:35.850 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@d31dd41
2025-06-08 21:46:35.857 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@46bdc280
2025-06-08 21:46:35.857 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@46bdc280
2025-06-08 21:46:35.860 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6ddd8584
2025-06-08 21:46:35.861 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1c5760f3
2025-06-08 21:46:35.862 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@8f3a580
2025-06-08 21:46:35.863 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@35b33a9b
2025-06-08 21:46:35.864 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@34c3780c
2025-06-08 21:46:35.864 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1334d69f
2025-06-08 21:46:35.864 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@67ebedc
2025-06-08 21:46:35.864 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2a353b6a
2025-06-08 21:46:35.865 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5192538
2025-06-08 21:46:35.872 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3ef3a49d] into BootstrapContext; was [null]
2025-06-08 21:46:35.873 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3ef3a49d) [was null]
2025-06-08 21:46:35.874 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@685b260d] into BootstrapContext; was [null]
2025-06-08 21:46:35.874 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@61d396e2] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1aa267b2]
2025-06-08 21:46:35.905 [JavaFX-Launcher] DEBUG o.h.j.b.i.PersistenceUnitInfoDescriptor - Pushing class transformers for PU named 'default' on loading classloader jdk.internal.loader.ClassLoaders$AppClassLoader@506e1b77
2025-06-08 21:46:36.219 [JavaFX-Launcher] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-08 21:46:36.220 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3ef3a49d]
2025-06-08 21:46:36.220 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3ef3a49d]
2025-06-08 21:46:36.271 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-08 21:46:36.423 [JavaFX-Launcher] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@51e01833
2025-06-08 21:46:36.425 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-08 21:46:36.437 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : SQLite
	version : 3.46.0
	  major : 3
	  minor : 46
2025-06-08 21:46:36.438 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : SQLite JDBC
	version : 3.46.0.0
	  major : 3
	  minor : 46
2025-06-08 21:46:36.438 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2
2025-06-08 21:46:36.475 [JavaFX-Launcher] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.community.dialect.SQLiteDialect, version: 3.46
2025-06-08 21:46:36.481 [JavaFX-Launcher] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-06-08 21:46:36.482 [JavaFX-Launcher] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2025-06-08 21:46:36.503 [JavaFX-Launcher] DEBUG org.hibernate.orm.jdbc.lob - HHH10010005: Disabling contextual LOB creation as createClob() method threw error : java.sql.SQLFeatureNotSupportedException
2025-06-08 21:46:36.509 [JavaFX-Launcher] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 3.46
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-08 21:46:36.529 [JavaFX-Launcher] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(PRIMITIVE_ARRAY_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-06-08 21:46:36.530 [JavaFX-Launcher] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STRING_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-08 21:46:36.536 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-06-08 21:46:36.537 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:46:36.537 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:46:36.542 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:46:36.542 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:46:36.542 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:46:36.542 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:46:36.542 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:46:36.542 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:46:36.544 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:46:36.544 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:46:36.544 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:46:36.548 [JavaFX-Launcher] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7ac75bdd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@62f1e099]
2025-06-08 21:46:36.615 [JavaFX-Launcher] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-06-08 21:46:36.658 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:46:36.670 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Categoria
2025-06-08 21:46:36.684 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Categoria on table categoria
2025-06-08 21:46:36.703 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:46:36.734 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_categoria')
2025-06-08 21:46:36.737 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:46:36.737 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:46:36.744 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCategoria with lazy=false
2025-06-08 21:46:36.752 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:idCategoria]
2025-06-08 21:46:36.760 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCategoria
2025-06-08 21:46:36.766 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.id_categoria
2025-06-08 21:46:36.767 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCategoria
2025-06-08 21:46:36.774 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_categoria)]), idCategoria, identity, , ...)
2025-06-08 21:46:36.776 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:46:36.777 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:46:36.778 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:estado]
2025-06-08 21:46:36.778 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:46:36.779 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.estado
2025-06-08 21:46:36.779 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:46:36.780 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:46:36.781 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:46:36.781 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:nombre]
2025-06-08 21:46:36.782 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:46:36.782 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.nombre
2025-06-08 21:46:36.783 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:46:36.786 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:46:36.792 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:46:36.793 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Cliente
2025-06-08 21:46:36.794 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Cliente on table cliente
2025-06-08 21:46:36.796 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:46:36.799 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_cliente')
2025-06-08 21:46:36.799 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:46:36.799 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:46:36.800 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCliente with lazy=false
2025-06-08 21:46:36.800 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:idCliente]
2025-06-08 21:46:36.801 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCliente
2025-06-08 21:46:36.801 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.id_cliente
2025-06-08 21:46:36.802 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCliente
2025-06-08 21:46:36.802 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_cliente)]), idCliente, identity, , ...)
2025-06-08 21:46:36.803 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='apellido')
2025-06-08 21:46:36.803 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property apellido with lazy=false
2025-06-08 21:46:36.803 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:apellido]
2025-06-08 21:46:36.804 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for apellido
2025-06-08 21:46:36.804 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.apellido
2025-06-08 21:46:36.804 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property apellido
2025-06-08 21:46:36.805 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cant_visitas')
2025-06-08 21:46:36.805 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantVisitas with lazy=false
2025-06-08 21:46:36.805 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:cantVisitas]
2025-06-08 21:46:36.806 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantVisitas
2025-06-08 21:46:36.806 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.cant_visitas
2025-06-08 21:46:36.807 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantVisitas
2025-06-08 21:46:36.810 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='dni')
2025-06-08 21:46:36.811 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property dni with lazy=false
2025-06-08 21:46:36.812 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:dni]
2025-06-08 21:46:36.813 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for dni
2025-06-08 21:46:36.814 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.dni
2025-06-08 21:46:36.814 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property dni
2025-06-08 21:46:36.815 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
2025-06-08 21:46:36.816 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-06-08 21:46:36.816 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:email]
2025-06-08 21:46:36.816 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email
2025-06-08 21:46:36.817 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.email
2025-06-08 21:46:36.817 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property email
2025-06-08 21:46:36.818 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:46:36.819 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:46:36.819 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:estado]
2025-06-08 21:46:36.819 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:46:36.819 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.estado
2025-06-08 21:46:36.820 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:46:36.820 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:46:36.821 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:46:36.821 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:nombre]
2025-06-08 21:46:36.821 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:46:36.821 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.nombre
2025-06-08 21:46:36.821 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:46:36.822 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='telefono')
2025-06-08 21:46:36.822 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property telefono with lazy=false
2025-06-08 21:46:36.822 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:telefono]
2025-06-08 21:46:36.822 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for telefono
2025-06-08 21:46:36.822 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.telefono
2025-06-08 21:46:36.823 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property telefono
2025-06-08 21:46:36.824 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:46:36.825 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:46:36.825 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name DetPedido
2025-06-08 21:46:36.826 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.DetPedido on table detalle_pedido
2025-06-08 21:46:36.826 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:46:36.838 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_detalle_pedido')
2025-06-08 21:46:36.838 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:46:36.838 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:46:36.838 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idDetallePedido with lazy=false
2025-06-08 21:46:36.839 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:idDetallePedido]
2025-06-08 21:46:36.839 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idDetallePedido
2025-06-08 21:46:36.839 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.id_detalle_pedido
2025-06-08 21:46:36.839 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idDetallePedido
2025-06-08 21:46:36.840 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_detalle_pedido)]), idDetallePedido, identity, , ...)
2025-06-08 21:46:36.840 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cantidad')
2025-06-08 21:46:36.841 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantidad with lazy=false
2025-06-08 21:46:36.841 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:cantidad]
2025-06-08 21:46:36.841 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantidad
2025-06-08 21:46:36.841 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.cantidad
2025-06-08 21:46:36.841 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantidad
2025-06-08 21:46:36.842 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:46:36.842 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:46:36.842 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:estado]
2025-06-08 21:46:36.842 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:46:36.842 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.estado
2025-06-08 21:46:36.842 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:46:36.846 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_factura',referencedColumn='id_factura')
2025-06-08 21:46:36.850 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:46:36.858 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property factura
2025-06-08 21:46:36.858 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='igv')
2025-06-08 21:46:36.859 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property igv with lazy=false
2025-06-08 21:46:36.859 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:igv]
2025-06-08 21:46:36.859 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for igv
2025-06-08 21:46:36.860 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.igv
2025-06-08 21:46:36.860 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property igv
2025-06-08 21:46:36.861 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:46:36.862 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:46:36.863 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:46:36.863 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio_unitario')
2025-06-08 21:46:36.864 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precioUnitario with lazy=false
2025-06-08 21:46:36.864 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:precioUnitario]
2025-06-08 21:46:36.865 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precioUnitario
2025-06-08 21:46:36.865 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.precio_unitario
2025-06-08 21:46:36.865 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property precioUnitario
2025-06-08 21:46:36.866 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_producto',referencedColumn='id_producto')
2025-06-08 21:46:36.866 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:46:36.867 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property producto
2025-06-08 21:46:36.867 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='subtotal')
2025-06-08 21:46:36.868 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property subtotal with lazy=false
2025-06-08 21:46:36.868 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:subtotal]
2025-06-08 21:46:36.868 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for subtotal
2025-06-08 21:46:36.868 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.subtotal
2025-06-08 21:46:36.869 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property subtotal
2025-06-08 21:46:36.869 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:46:36.869 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:46:36.870 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:total]
2025-06-08 21:46:36.870 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:46:36.870 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.total
2025-06-08 21:46:36.871 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:46:36.872 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:46:36.873 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:46:36.873 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Empleado
2025-06-08 21:46:36.874 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Empleado on table empleado
2025-06-08 21:46:36.874 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:46:36.877 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_empleado')
2025-06-08 21:46:36.878 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:46:36.878 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:46:36.879 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-06-08 21:46:36.879 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:id]
2025-06-08 21:46:36.879 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id
2025-06-08 21:46:36.879 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.id_empleado
2025-06-08 21:46:36.880 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property id
2025-06-08 21:46:36.880 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_empleado)]), id, identity, , ...)
2025-06-08 21:46:36.881 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='apellido')
2025-06-08 21:46:36.881 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property apellido with lazy=false
2025-06-08 21:46:36.881 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:apellido]
2025-06-08 21:46:36.881 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for apellido
2025-06-08 21:46:36.881 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.apellido
2025-06-08 21:46:36.882 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property apellido
2025-06-08 21:46:36.882 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='dni')
2025-06-08 21:46:36.882 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property dni with lazy=false
2025-06-08 21:46:36.883 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:dni]
2025-06-08 21:46:36.883 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for dni
2025-06-08 21:46:36.883 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.dni
2025-06-08 21:46:36.883 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property dni
2025-06-08 21:46:36.884 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:46:36.884 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:46:36.884 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:estado]
2025-06-08 21:46:36.884 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:46:36.885 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.estado
2025-06-08 21:46:36.885 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:46:36.885 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:46:36.885 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:46:36.886 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:nombre]
2025-06-08 21:46:36.886 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:46:36.886 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.nombre
2025-06-08 21:46:36.887 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:46:36.887 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password')
2025-06-08 21:46:36.888 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-06-08 21:46:36.888 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:password]
2025-06-08 21:46:36.888 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password
2025-06-08 21:46:36.888 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.password
2025-06-08 21:46:36.889 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property password
2025-06-08 21:46:36.889 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='rol')
2025-06-08 21:46:36.890 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property rol with lazy=false
2025-06-08 21:46:36.890 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:rol]
2025-06-08 21:46:36.890 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for rol
2025-06-08 21:46:36.891 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.rol
2025-06-08 21:46:36.891 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property rol
2025-06-08 21:46:36.892 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='telefono')
2025-06-08 21:46:36.892 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property telefono with lazy=false
2025-06-08 21:46:36.892 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:telefono]
2025-06-08 21:46:36.893 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for telefono
2025-06-08 21:46:36.893 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.telefono
2025-06-08 21:46:36.893 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property telefono
2025-06-08 21:46:36.895 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='usuario')
2025-06-08 21:46:36.896 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property usuario with lazy=false
2025-06-08 21:46:36.897 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:usuario]
2025-06-08 21:46:36.897 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for usuario
2025-06-08 21:46:36.897 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.usuario
2025-06-08 21:46:36.898 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property usuario
2025-06-08 21:46:36.899 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:46:36.900 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:46:36.901 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Factura
2025-06-08 21:46:36.901 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Factura on table factura
2025-06-08 21:46:36.902 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:46:36.907 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_factura')
2025-06-08 21:46:36.908 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:46:36.908 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:46:36.908 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idFactura with lazy=false
2025-06-08 21:46:36.909 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:idFactura]
2025-06-08 21:46:36.909 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idFactura
2025-06-08 21:46:36.909 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.id_factura
2025-06-08 21:46:36.910 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idFactura
2025-06-08 21:46:36.910 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_factura)]), idFactura, identity, , ...)
2025-06-08 21:46:36.911 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_cliente',referencedColumn='id_cliente')
2025-06-08 21:46:36.911 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:46:36.912 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cliente
2025-06-08 21:46:36.913 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='codigo')
2025-06-08 21:46:36.913 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codigo with lazy=false
2025-06-08 21:46:36.914 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:codigo]
2025-06-08 21:46:36.914 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codigo
2025-06-08 21:46:36.914 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.codigo
2025-06-08 21:46:36.915 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property codigo
2025-06-08 21:46:36.915 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:46:36.916 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:46:36.916 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:estado]
2025-06-08 21:46:36.916 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:46:36.916 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.estado
2025-06-08 21:46:36.916 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:46:36.917 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fecha_emision')
2025-06-08 21:46:36.917 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaEmision with lazy=false
2025-06-08 21:46:36.917 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:fechaEmision]
2025-06-08 21:46:36.917 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaEmision
2025-06-08 21:46:36.918 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.fecha_emision
2025-06-08 21:46:36.918 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaEmision
2025-06-08 21:46:36.918 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='igv')
2025-06-08 21:46:36.919 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property igv with lazy=false
2025-06-08 21:46:36.919 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:igv]
2025-06-08 21:46:36.919 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for igv
2025-06-08 21:46:36.919 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.igv
2025-06-08 21:46:36.919 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property igv
2025-06-08 21:46:36.920 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:46:36.921 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:46:36.921 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:46:36.922 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='subtotal')
2025-06-08 21:46:36.922 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property subtotal with lazy=false
2025-06-08 21:46:36.922 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:subtotal]
2025-06-08 21:46:36.922 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for subtotal
2025-06-08 21:46:36.922 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.subtotal
2025-06-08 21:46:36.922 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property subtotal
2025-06-08 21:46:36.923 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:46:36.923 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:46:36.923 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:total]
2025-06-08 21:46:36.923 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:46:36.923 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.total
2025-06-08 21:46:36.923 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:46:36.924 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:46:36.925 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:46:36.926 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Menu
2025-06-08 21:46:36.926 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Menu on table menu
2025-06-08 21:46:36.926 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:46:36.930 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_menu')
2025-06-08 21:46:36.930 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:46:36.930 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:46:36.930 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idMenu with lazy=false
2025-06-08 21:46:36.930 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Menu:idMenu]
2025-06-08 21:46:36.930 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idMenu
2025-06-08 21:46:36.930 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: menu.id_menu
2025-06-08 21:46:36.931 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idMenu
2025-06-08 21:46:36.931 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_menu)]), idMenu, identity, , ...)
2025-06-08 21:46:36.932 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cod_pedido')
2025-06-08 21:46:36.932 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codPedido with lazy=false
2025-06-08 21:46:36.932 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Menu:codPedido]
2025-06-08 21:46:36.932 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codPedido
2025-06-08 21:46:36.932 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: menu.cod_pedido
2025-06-08 21:46:36.932 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property codPedido
2025-06-08 21:46:36.933 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:46:36.933 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:46:36.933 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:46:36.934 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_producto',referencedColumn='id_producto')
2025-06-08 21:46:36.934 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:46:36.935 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property producto
2025-06-08 21:46:36.936 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:46:36.936 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:46:36.937 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Mesa
2025-06-08 21:46:36.937 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Mesa on table mesa
2025-06-08 21:46:36.938 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:46:36.940 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_mesa')
2025-06-08 21:46:36.941 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:46:36.942 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:46:36.942 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idMesa with lazy=false
2025-06-08 21:46:36.942 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:idMesa]
2025-06-08 21:46:36.943 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idMesa
2025-06-08 21:46:36.943 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.id_mesa
2025-06-08 21:46:36.944 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idMesa
2025-06-08 21:46:36.944 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_mesa)]), idMesa, identity, , ...)
2025-06-08 21:46:36.945 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='capacidad')
2025-06-08 21:46:36.946 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property capacidad with lazy=false
2025-06-08 21:46:36.946 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:capacidad]
2025-06-08 21:46:36.947 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for capacidad
2025-06-08 21:46:36.947 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.capacidad
2025-06-08 21:46:36.947 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property capacidad
2025-06-08 21:46:36.948 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='detalle')
2025-06-08 21:46:36.948 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property detalle with lazy=false
2025-06-08 21:46:36.949 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:detalle]
2025-06-08 21:46:36.949 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for detalle
2025-06-08 21:46:36.949 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.detalle
2025-06-08 21:46:36.950 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property detalle
2025-06-08 21:46:36.950 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:46:36.951 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:46:36.951 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:estado]
2025-06-08 21:46:36.951 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:46:36.951 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.estado
2025-06-08 21:46:36.951 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:46:36.952 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='numero')
2025-06-08 21:46:36.953 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property numero with lazy=false
2025-06-08 21:46:36.953 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:numero]
2025-06-08 21:46:36.953 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for numero
2025-06-08 21:46:36.954 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.numero
2025-06-08 21:46:36.954 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property numero
2025-06-08 21:46:36.955 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:46:36.956 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:46:36.957 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Pedido
2025-06-08 21:46:36.957 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Pedido on table pedido
2025-06-08 21:46:36.958 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:46:36.961 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_pedido')
2025-06-08 21:46:36.961 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:46:36.961 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:46:36.962 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idPedido with lazy=false
2025-06-08 21:46:36.962 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:idPedido]
2025-06-08 21:46:36.962 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idPedido
2025-06-08 21:46:36.962 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.id_pedido
2025-06-08 21:46:36.962 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idPedido
2025-06-08 21:46:36.963 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_pedido)]), idPedido, identity, , ...)
2025-06-08 21:46:36.963 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cant_pedidos')
2025-06-08 21:46:36.964 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantPedidos with lazy=false
2025-06-08 21:46:36.964 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:cantPedidos]
2025-06-08 21:46:36.964 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantPedidos
2025-06-08 21:46:36.964 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.cant_pedidos
2025-06-08 21:46:36.964 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantPedidos
2025-06-08 21:46:36.964 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_cliente',referencedColumn='id_cliente')
2025-06-08 21:46:36.965 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:46:36.965 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cliente
2025-06-08 21:46:36.966 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_empleado',referencedColumn='id_empleado')
2025-06-08 21:46:36.966 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:46:36.966 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property empleado
2025-06-08 21:46:36.967 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:46:36.967 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:46:36.967 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:estado]
2025-06-08 21:46:36.967 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:46:36.967 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.estado
2025-06-08 21:46:36.967 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:46:36.967 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fecha_hora')
2025-06-08 21:46:36.968 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaHora with lazy=false
2025-06-08 21:46:36.968 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:fechaHora]
2025-06-08 21:46:36.968 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaHora
2025-06-08 21:46:36.968 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.fecha_hora
2025-06-08 21:46:36.968 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaHora
2025-06-08 21:46:36.969 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_mesa',referencedColumn='id_mesa')
2025-06-08 21:46:36.969 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:46:36.969 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property mesa
2025-06-08 21:46:36.970 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:46:36.970 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:46:36.970 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:total]
2025-06-08 21:46:36.970 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:46:36.970 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.total
2025-06-08 21:46:36.970 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:46:36.971 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:46:36.972 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:46:36.972 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Producto
2025-06-08 21:46:36.973 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Producto on table producto
2025-06-08 21:46:36.973 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:46:36.975 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_producto')
2025-06-08 21:46:36.976 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:46:36.976 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:46:36.976 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idProducto with lazy=false
2025-06-08 21:46:36.976 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:idProducto]
2025-06-08 21:46:36.976 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idProducto
2025-06-08 21:46:36.976 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.id_producto
2025-06-08 21:46:36.976 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idProducto
2025-06-08 21:46:36.976 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_producto)]), idProducto, identity, , ...)
2025-06-08 21:46:36.977 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_categoria',referencedColumn='id_categoria')
2025-06-08 21:46:36.978 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:46:36.978 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property categoria
2025-06-08 21:46:36.979 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='descripcion')
2025-06-08 21:46:36.979 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property descripcion with lazy=false
2025-06-08 21:46:36.979 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:descripcion]
2025-06-08 21:46:36.980 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for descripcion
2025-06-08 21:46:36.980 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.descripcion
2025-06-08 21:46:36.980 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property descripcion
2025-06-08 21:46:36.980 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:46:36.981 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:46:36.981 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:estado]
2025-06-08 21:46:36.981 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:46:36.981 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.estado
2025-06-08 21:46:36.981 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:46:36.982 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:46:36.982 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:46:36.982 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:nombre]
2025-06-08 21:46:36.982 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:46:36.982 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.nombre
2025-06-08 21:46:36.983 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:46:36.983 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio')
2025-06-08 21:46:36.983 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precio with lazy=false
2025-06-08 21:46:36.983 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:precio]
2025-06-08 21:46:36.983 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precio
2025-06-08 21:46:36.984 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.precio
2025-06-08 21:46:36.984 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property precio
2025-06-08 21:46:36.984 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_seccion',referencedColumn='id_seccion')
2025-06-08 21:46:36.985 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:46:36.985 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property seccion
2025-06-08 21:46:36.985 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='stock')
2025-06-08 21:46:36.985 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property stock with lazy=false
2025-06-08 21:46:36.986 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:stock]
2025-06-08 21:46:36.986 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for stock
2025-06-08 21:46:36.986 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.stock
2025-06-08 21:46:36.986 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property stock
2025-06-08 21:46:36.987 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:46:36.988 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:46:36.988 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Seccion
2025-06-08 21:46:36.988 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Seccion on table seccion
2025-06-08 21:46:36.989 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:46:36.991 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_seccion')
2025-06-08 21:46:36.992 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:46:36.992 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:46:36.992 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idSeccion with lazy=false
2025-06-08 21:46:36.992 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:idSeccion]
2025-06-08 21:46:36.992 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idSeccion
2025-06-08 21:46:36.992 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.id_seccion
2025-06-08 21:46:36.992 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idSeccion
2025-06-08 21:46:36.992 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_seccion)]), idSeccion, identity, , ...)
2025-06-08 21:46:36.993 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='detalle')
2025-06-08 21:46:36.994 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property detalle with lazy=false
2025-06-08 21:46:36.995 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:detalle]
2025-06-08 21:46:36.996 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for detalle
2025-06-08 21:46:36.996 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.detalle
2025-06-08 21:46:36.996 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property detalle
2025-06-08 21:46:36.997 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:46:36.997 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:46:36.997 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:estado]
2025-06-08 21:46:36.997 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:46:36.997 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.estado
2025-06-08 21:46:36.998 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:46:36.998 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:46:37.001 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idCategoria
2025-06-08 21:46:37.003 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:46:37.003 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:46:37.003 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idCliente
2025-06-08 21:46:37.003 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apellido
2025-06-08 21:46:37.003 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantVisitas
2025-06-08 21:46:37.003 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for dni
2025-06-08 21:46:37.003 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-06-08 21:46:37.003 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:46:37.003 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:46:37.004 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for telefono
2025-06-08 21:46:37.004 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idDetallePedido
2025-06-08 21:46:37.004 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantidad
2025-06-08 21:46:37.004 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:46:37.004 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for igv
2025-06-08 21:46:37.004 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precioUnitario
2025-06-08 21:46:37.004 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for subtotal
2025-06-08 21:46:37.004 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:46:37.004 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-06-08 21:46:37.004 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apellido
2025-06-08 21:46:37.004 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for dni
2025-06-08 21:46:37.004 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:46:37.004 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:46:37.004 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-06-08 21:46:37.004 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for rol
2025-06-08 21:46:37.004 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for telefono
2025-06-08 21:46:37.004 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for usuario
2025-06-08 21:46:37.004 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idFactura
2025-06-08 21:46:37.004 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codigo
2025-06-08 21:46:37.004 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:46:37.004 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaEmision
2025-06-08 21:46:37.004 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for igv
2025-06-08 21:46:37.004 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for subtotal
2025-06-08 21:46:37.005 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:46:37.005 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idMenu
2025-06-08 21:46:37.005 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codPedido
2025-06-08 21:46:37.005 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idMesa
2025-06-08 21:46:37.005 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for capacidad
2025-06-08 21:46:37.005 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for detalle
2025-06-08 21:46:37.005 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:46:37.005 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for numero
2025-06-08 21:46:37.005 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idPedido
2025-06-08 21:46:37.005 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantPedidos
2025-06-08 21:46:37.005 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:46:37.005 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaHora
2025-06-08 21:46:37.005 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:46:37.005 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idProducto
2025-06-08 21:46:37.005 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for descripcion
2025-06-08 21:46:37.005 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:46:37.005 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:46:37.005 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precio
2025-06-08 21:46:37.005 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for stock
2025-06-08 21:46:37.006 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idSeccion
2025-06-08 21:46:37.006 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for detalle
2025-06-08 21:46:37.006 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:46:37.019 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_categoria] to be non-null as it is part of the primary key for table [categoria]
2025-06-08 21:46:37.020 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_cliente] to be non-null as it is part of the primary key for table [cliente]
2025-06-08 21:46:37.020 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_detalle_pedido] to be non-null as it is part of the primary key for table [detalle_pedido]
2025-06-08 21:46:37.020 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_empleado] to be non-null as it is part of the primary key for table [empleado]
2025-06-08 21:46:37.020 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_factura] to be non-null as it is part of the primary key for table [factura]
2025-06-08 21:46:37.020 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_menu] to be non-null as it is part of the primary key for table [menu]
2025-06-08 21:46:37.020 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_mesa] to be non-null as it is part of the primary key for table [mesa]
2025-06-08 21:46:37.020 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_pedido] to be non-null as it is part of the primary key for table [pedido]
2025-06-08 21:46:37.021 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_producto] to be non-null as it is part of the primary key for table [producto]
2025-06-08 21:46:37.021 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_seccion] to be non-null as it is part of the primary key for table [seccion]
2025-06-08 21:46:37.336 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2025-06-08 21:46:37.383 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:46:37.384 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=23, javafx.runtime.version=21.0.1+6, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@66c36adb, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.community.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant\target\classes;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.0\jackson-annotations-2.17.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.19.0\jackson-core-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.19.0\jackson-databind-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-xml\2.19.0\jackson-dataformat-xml-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\woodstox\woodstox-core\7.1.0\woodstox-core-7.1.0.jar;C:\Users\USUARIO\.m2\repository\com\github\virtuald\curvesapi\1.07\curvesapi-1.07.jar;C:\Users\USUARIO\.m2\repository\com\lowagie\itext\2.1.7.js10\itext-2.1.7.js10.jar;C:\Users\USUARIO\.m2\repository\com\miglayout\miglayout\3.7.4\miglayout-3.7.4.jar;C:\Users\USUARIO\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\SparseBitSet\1.2\SparseBitSet-1.2.jar;C:\Users\USUARIO\.m2\repository\commons-beanutils\commons-beanutils\1.9.4\commons-beanutils-1.9.4.jar;C:\Users\USUARIO\.m2\repository\commons-codec\commons-codec\1.18.0\commons-codec-1.18.0.jar;C:\Users\USUARIO\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\USUARIO\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\USUARIO\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\USUARIO\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\USUARIO\.m2\repository\io\github\mkpaz\atlantafx-base\2.0.0\atlantafx-base-2.0.0.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-commons\1.15.0\micrometer-commons-1.15.0.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-observation\1.15.0\micrometer-observation-1.15.0.jar;C:\Users\USUARIO\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\USUARIO\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\USUARIO\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\USUARIO\.m2\repository\jakarta\el\jakarta.el-api\4.0.0\jakarta.el-api-4.0.0.jar;C:\Users\USUARIO\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\USUARIO\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\USUARIO\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\USUARIO\.m2\repository\net\bytebuddy\byte-buddy\1.17.5\byte-buddy-1.17.5.jar;C:\Users\USUARIO\.m2\repository\net\sf\jasperreports\jasperreports\6.20.0\jasperreports-6.20.0.jar;C:\Users\USUARIO\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-collections4\4.2\commons-collections4-4.2.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-compress\1.21\commons-compress-1.21.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-math3\3.6.1\commons-math3-3.6.1.jar;C:\Users\USUARIO\.m2\repository\org\apache\groovy\groovy\4.0.6\groovy-4.0.6.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi\5.2.3\poi-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml\5.2.3\poi-ooxml-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml-lite\5.2.3\poi-ooxml-lite-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\xmlbeans\xmlbeans\5.1.1\xmlbeans-5.1.1.jar;C:\Users\USUARIO\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcprov-jdk15on\1.70\bcprov-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcutil-jdk15on\1.70\bcutil-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\codehaus\woodstox\stax2-api\4.2.2\stax2-api-4.2.2.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\jdt\ecj\3.21.0\ecj-3.21.0.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jakarta.el\4.0.2\jakarta.el-4.0.2.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-community-dialects\6.4.4.Final\hibernate-community-dialects-6.4.4.Final.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-core\6.6.15.Final\hibernate-core-6.6.15.Final.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.2.Final\hibernate-validator-7.0.2.Final.jar;C:\Users\USUARIO\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jcommon\1.0.23\jcommon-1.0.23.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jfreechart\1.0.19\jfreechart-1.0.19.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\bootstrapfx\bootstrapfx-core\0.2.4\bootstrapfx-core-0.2.4.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-core\12.3.1\ikonli-core-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-fontawesome5-pack\12.3.1\ikonli-fontawesome5-pack-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-javafx\12.3.1\ikonli-javafx-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aop\6.2.7\spring-aop-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aspects\6.2.7\spring-aspects-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-beans\6.2.7\spring-beans-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-context\6.2.7\spring-context-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-core\6.2.7\spring-core-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-expression\6.2.7\spring-expression-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jcl\6.2.7\spring-jcl-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jdbc\6.2.7\spring-jdbc-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-orm\6.2.7\spring-orm-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-tx\6.2.7\spring-tx-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot\3.5.0\spring-boot-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.5.0\spring-boot-autoconfigure-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter\3.5.0\spring-boot-starter-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.5.0\spring-boot-starter-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.5.0\spring-boot-starter-jdbc-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.5.0\spring-boot-starter-logging-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-commons\3.5.0\spring-data-commons-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-jpa\3.5.0\spring-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\xerial\sqlite-jdbc\3.46.0.0\sqlite-jdbc-3.46.0.0.jar;C:\Users\USUARIO\.m2\repository\org\yaml\snakeyaml\2.4\snakeyaml-2.4.jar;C:\Users\USUARIO\.m2\repository\win\zqxu\jrviewer-fx\0.1.1\jrviewer-fx-0.1.1.jar, LOGBACK_ROLLINGPOLICY_MAX_FILE_SIZE=10485760, java.vm.vendor=Oracle Corporation, LOG_PATH=logs/, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Bogota, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, javafx.version=21.0.1, os.name=Windows 11, java.vm.specification.version=23, APPLICATION_NAME=ProyectoRestaurant, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=MX, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk-23\bin, sun.java.command=pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.use_sql_comments=true, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@5465404b, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\USUARIO, user.language=es, java.specification.vendor=Oracle Corporation, jdk.module.path=C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-fxml\21.0.1\javafx-fxml-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-fxml\21.0.1\javafx-fxml-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-swing\21.0.1\javafx-swing-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-swing\21.0.1\javafx-swing-21.0.1.jar, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-23, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7-58, user.name=USUARIO, stdout.encoding=Cp1252, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, FILE_LOG_PATTERN=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, LOG_FILE=logs/restaurant.log, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\USUARIO\AppData\Local\Temp\, java.version=23.0.2, LOGBACK_ROLLINGPOLICY_CLEAN_HISTORY_ON_START=false, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=4412, sun.os.patch.level=, CONSOLE_LOG_CHARSET=windows-1252, LOGBACK_ROLLINGPOLICY_MAX_HISTORY=30, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@34baa9eb, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-23\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;c:\Users\USUARIO\AppData\Local\Programs\cursor\resources\app\bin;C:\Users\USUARIO\AppData\Local\Programs\Python\Python313\Scripts\;C:\Users\USUARIO\AppData\Local\Programs\Python\Launcher\;C:\Users\USUARIO\AppData\Local\Microsoft\WindowsApps;C:\Users\USUARIO\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\USUARIO\AppData\Roaming\npm;C:\flutter\bin;C:\Users\USUARIO\AppData\Local\Programs\Python\Python313\;C:\ffpmg\bin;C:\Users\USUARIO\Downloads\apache-maven-3.9.9\bin;C:\Users\USUARIO\AppData\Local\GitHubDesktop\bin;C:\Users\USUARIO\AppData\Local\Microsoft\WinGet\Packages\Schniz.fnm_Microsoft.Winget.Source_8wekyb3d8bbwe;C:\Users\USUARIO\AppData\Local\Programs\cursor\resources\app\bin;., stderr.encoding=Cp1252, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=23.0.2+7-58, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), CONSOLE_LOG_PATTERN=%d{HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{36}) - %msg%n, java.class.version=67.0, LOGGED_APPLICATION_NAME=[ProyectoRestaurant] , LOGBACK_ROLLINGPOLICY_TOTAL_SIZE_CAP=104857600}
2025-06-08 21:46:37.389 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-06-08 21:46:37.396 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:46:37.396 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:46:37.397 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:46:37.397 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:46:37.397 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:46:37.397 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:46:37.398 [JavaFX-Launcher] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:46:37.400 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:46:37.400 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:46:37.400 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:46:37.400 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:46:37.400 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:46:37.401 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:46:37.402 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:46:37.402 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:46:37.447 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:46:37.451 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:46:37.455 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:46:37.455 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:46:37.459 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:46:37.459 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:46:37.467 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:46:37.468 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:46:37.470 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:46:37.470 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:46:37.475 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:46:37.475 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:46:37.481 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:46:37.481 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:46:37.483 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:46:37.484 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:46:37.486 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:46:37.486 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:46:37.489 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:46:37.549 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-06-08 21:46:37.549 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-06-08 21:46:37.550 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-06-08 21:46:37.551 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-06-08 21:46:37.553 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5139d71f] under count; prior registration was null
2025-06-08 21:46:37.555 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5641ea12] under every; prior registration was null
2025-06-08 21:46:37.555 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@d050a00] under any; prior registration was null
2025-06-08 21:46:37.556 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-06-08 21:46:37.557 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-06-08 21:46:37.557 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-06-08 21:46:37.557 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-06-08 21:46:37.557 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-06-08 21:46:37.557 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-06-08 21:46:37.557 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-06-08 21:46:37.557 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-06-08 21:46:37.557 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-06-08 21:46:37.557 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-06-08 21:46:37.558 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-06-08 21:46:37.558 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-06-08 21:46:37.558 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-06-08 21:46:37.558 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-06-08 21:46:37.558 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-06-08 21:46:37.558 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-06-08 21:46:37.558 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-06-08 21:46:37.560 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3052e173] under sinh; prior registration was null
2025-06-08 21:46:37.560 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f49c655] under cosh; prior registration was null
2025-06-08 21:46:37.560 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1dca59b1] under tanh; prior registration was null
2025-06-08 21:46:37.560 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d0f6593] under pi; prior registration was null
2025-06-08 21:46:37.560 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7a714e38] under log; prior registration was null
2025-06-08 21:46:37.561 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-06-08 21:46:37.562 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-06-08 21:46:37.562 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-06-08 21:46:37.562 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-06-08 21:46:37.562 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-06-08 21:46:37.563 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-06-08 21:46:37.563 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-06-08 21:46:37.563 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-06-08 21:46:37.563 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-06-08 21:46:37.563 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-06-08 21:46:37.563 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-06-08 21:46:37.563 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-06-08 21:46:37.564 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3f9df825] under position; prior registration was null
2025-06-08 21:46:37.566 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@14189994] under overlay; prior registration was null
2025-06-08 21:46:37.567 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@456bed4a] under trim; prior registration was null
2025-06-08 21:46:37.569 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@21449f57] under cast; prior registration was null
2025-06-08 21:46:37.569 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@bd488e5] under collate; prior registration was null
2025-06-08 21:46:37.571 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@34a8582a] under extract; prior registration was null
2025-06-08 21:46:37.571 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-06-08 21:46:37.571 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-06-08 21:46:37.572 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@2485838e] under ifnull; prior registration was null
2025-06-08 21:46:37.572 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-06-08 21:46:37.572 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-06-08 21:46:37.572 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1061cdf8] under pad; prior registration was null
2025-06-08 21:46:37.573 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@4d5716b4] under str; prior registration was null
2025-06-08 21:46:37.577 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@488c6ee0] under format; prior registration was null
2025-06-08 21:46:37.578 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@2e4634c6] under timestampadd; prior registration was null
2025-06-08 21:46:37.580 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@37c37a3a] under timestampdiff; prior registration was null
2025-06-08 21:46:37.580 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-06-08 21:46:37.580 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-06-08 21:46:37.581 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1a9cddfb] under current_date; prior registration was null
2025-06-08 21:46:37.581 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1f2eb061] under current_time; prior registration was null
2025-06-08 21:46:37.581 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@21ac0011] under current_timestamp; prior registration was null
2025-06-08 21:46:37.581 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-06-08 21:46:37.581 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-06-08 21:46:37.581 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-06-08 21:46:37.581 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@436b010] under local_date; prior registration was null
2025-06-08 21:46:37.581 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7839d668] under local_time; prior registration was null
2025-06-08 21:46:37.581 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@127edcb6] under local_datetime; prior registration was null
2025-06-08 21:46:37.581 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5393fa60] under offset_datetime; prior registration was null
2025-06-08 21:46:37.581 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-06-08 21:46:37.581 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-06-08 21:46:37.581 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-06-08 21:46:37.581 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-06-08 21:46:37.581 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@62147632] under instant; prior registration was null
2025-06-08 21:46:37.581 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-06-08 21:46:37.582 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@3d3f7b1e] under sql; prior registration was null
2025-06-08 21:46:37.582 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ab4e621] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-06-08 21:46:37.582 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26b16925] under left; prior registration was NamedSqmFunctionTemplate(left)
2025-06-08 21:46:37.582 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f5a38d] under right; prior registration was NamedSqmFunctionTemplate(right)
2025-06-08 21:46:37.582 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4554cf66] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-06-08 21:46:37.582 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(length)] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-06-08 21:46:37.582 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-06-08 21:46:37.582 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under least; prior registration was NamedSqmFunctionTemplate(least)
2025-06-08 21:46:37.582 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under greatest; prior registration was NamedSqmFunctionTemplate(greatest)
2025-06-08 21:46:37.582 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-06-08 21:46:37.583 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-06-08 21:46:37.585 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@301b726b] under trunc; prior registration was null
2025-06-08 21:46:37.585 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-06-08 21:46:37.585 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7a714e38
2025-06-08 21:46:37.585 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-06-08 21:46:37.585 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-06-08 21:46:37.585 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-06-08 21:46:37.585 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-06-08 21:46:37.585 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2025-06-08 21:46:37.585 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : chr -> char
2025-06-08 21:46:37.586 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@57790b20] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-06-08 21:46:37.586 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@285ad81a] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2025-06-08 21:46:37.586 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@43354959] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2025-06-08 21:46:37.586 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(strftime)] under format; prior registration was org.hibernate.dialect.function.FormatFunction@488c6ee0
2025-06-08 21:46:37.586 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-06-08 21:46:37.587 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-06-08 21:46:37.587 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-06-08 21:46:37.587 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-06-08 21:46:37.587 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-06-08 21:46:37.587 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-06-08 21:46:37.588 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@7c73be] under listagg; prior registration was null
2025-06-08 21:46:37.590 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg)
2025-06-08 21:46:37.590 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-06-08 21:46:37.590 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2025-06-08 21:46:37.590 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-06-08 21:46:37.591 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-06-08 21:46:37.591 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-06-08 21:46:37.591 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg)
2025-06-08 21:46:37.591 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type)
2025-06-08 21:46:37.591 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-06-08 21:46:37.591 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg)
2025-06-08 21:46:37.591 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-06-08 21:46:37.591 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-06-08 21:46:37.591 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-06-08 21:46:37.591 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-06-08 21:46:37.591 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2025-06-08 21:46:37.591 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-06-08 21:46:37.591 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-06-08 21:46:37.591 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-06-08 21:46:37.591 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date
2025-06-08 21:46:37.592 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time
2025-06-08 21:46:37.592 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp
2025-06-08 21:46:37.592 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date
2025-06-08 21:46:37.592 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant
2025-06-08 21:46:37.592 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time
2025-06-08 21:46:37.592 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp
2025-06-08 21:46:37.592 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-06-08 21:46:37.592 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-06-08 21:46:37.592 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-06-08 21:46:37.592 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2025-06-08 21:46:37.592 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-06-08 21:46:37.592 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-06-08 21:46:37.592 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value
2025-06-08 21:46:37.592 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg)
2025-06-08 21:46:37.592 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(pattern, string[, start])
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string)
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding])
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg)
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg)
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1)
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2025-06-08 21:46:37.593 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-06-08 21:46:37.594 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi
2025-06-08 21:46:37.594 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-06-08 21:46:37.594 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-06-08 21:46:37.594 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-06-08 21:46:37.594 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-06-08 21:46:37.594 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-06-08 21:46:37.594 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-06-08 21:46:37.594 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number()
2025-06-08 21:46:37.594 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding])
2025-06-08 21:46:37.594 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-06-08 21:46:37.594 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-06-08 21:46:37.594 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-06-08 21:46:37.594 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-06-08 21:46:37.594 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql
2025-06-08 21:46:37.594 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-06-08 21:46:37.594 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg)
2025-06-08 21:46:37.594 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-06-08 21:46:37.594 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-06-08 21:46:37.594 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg)
2025-06-08 21:46:37.594 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-06-08 21:46:37.595 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-06-08 21:46:37.595 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-06-08 21:46:37.595 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-06-08 21:46:37.595 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-06-08 21:46:37.595 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... )
2025-06-08 21:46:37.595 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... )
2025-06-08 21:46:37.595 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string)
2025-06-08 21:46:37.600 [JavaFX-Launcher] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048)
2025-06-08 21:46:37.685 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:46:37.687 [JavaFX-Launcher] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-06-08 21:46:37.770 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:37.775 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:37.781 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:37.781 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:37.781 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:46:37.781 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:46:38.000 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Factura]: private accessor [cliente]
2025-06-08 21:46:38.006 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.007 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.036 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:46:38.036 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:46:38.067 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Empleado]: private accessor [apellido]
2025-06-08 21:46:38.068 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:46:38.068 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:46:38.089 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Seccion]: private accessor [detalle]
2025-06-08 21:46:38.090 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:46:38.090 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:46:38.114 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Cliente]: private accessor [apellido]
2025-06-08 21:46:38.115 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.116 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.116 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.116 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.116 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:46:38.116 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:46:38.130 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Menu]: private accessor [codPedido]
2025-06-08 21:46:38.130 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.130 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.131 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.131 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.131 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.131 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.132 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.132 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.132 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:46:38.132 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:46:38.151 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido]: private accessor [cantidad]
2025-06-08 21:46:38.152 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.152 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.152 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.153 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.153 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.153 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.153 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.154 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:46:38.154 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:46:38.168 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Producto]: private accessor [categoria]
2025-06-08 21:46:38.168 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.168 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.169 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:46:38.169 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:46:38.181 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Categoria]: private accessor [estado]
2025-06-08 21:46:38.182 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:46:38.182 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:46:38.197 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Mesa]: private accessor [capacidad]
2025-06-08 21:46:38.199 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.199 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.199 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.199 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.199 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.199 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.199 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:46:38.199 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:46:38.214 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Pedido]: private accessor [cantPedidos]
2025-06-08 21:46:38.214 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.215 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.215 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:46:38.247 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks
2025-06-08 21:46:38.247 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente]
2025-06-08 21:46:38.251 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido]
2025-06-08 21:46:38.252 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Factura) `staticFetchableList` generator
2025-06-08 21:46:38.252 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Empleado) `staticFetchableList` generator
2025-06-08 21:46:38.252 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Seccion) `staticFetchableList` generator
2025-06-08 21:46:38.252 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Cliente) `staticFetchableList` generator
2025-06-08 21:46:38.252 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido]
2025-06-08 21:46:38.252 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto]
2025-06-08 21:46:38.253 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Menu) `staticFetchableList` generator
2025-06-08 21:46:38.253 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura]
2025-06-08 21:46:38.253 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido]
2025-06-08 21:46:38.253 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto]
2025-06-08 21:46:38.254 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.DetPedido) `staticFetchableList` generator
2025-06-08 21:46:38.254 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria]
2025-06-08 21:46:38.254 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion]
2025-06-08 21:46:38.254 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Producto) `staticFetchableList` generator
2025-06-08 21:46:38.254 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Categoria) `staticFetchableList` generator
2025-06-08 21:46:38.254 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Mesa) `staticFetchableList` generator
2025-06-08 21:46:38.254 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente]
2025-06-08 21:46:38.254 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado]
2025-06-08 21:46:38.255 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa]
2025-06-08 21:46:38.255 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Pedido) `staticFetchableList` generator
2025-06-08 21:46:38.352 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2025-06-08 21:46:38.354 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Factura)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura] 
2025-06-08 21:46:38.367 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@46d8156c] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente] 
2025-06-08 21:46:38.368 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:46:38.372 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@29f407f2] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido] 
2025-06-08 21:46:38.372 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:46:38.373 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6cd6eeff] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente] 
2025-06-08 21:46:38.373 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:46:38.373 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@20fd3533] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado] 
2025-06-08 21:46:38.373 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:46:38.373 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5698cf75] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa] 
2025-06-08 21:46:38.373 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:46:38.382 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.cantVisitas]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.email]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.nombre]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.telefono]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.codigo]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.fechaEmision]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.igv]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.rol]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.telefono]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.subtotal]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.total]

2025-06-08 21:46:38.386 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (f1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura) {
          primaryTableReference : factura as f1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente) {
              primaryTableReference : cliente as c1_0
            }
            left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido) {
              primaryTableReference : pedido as p1_0
              TableGroupJoins {
                left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente) {
                  primaryTableReference : cliente as c2_0
                }
                left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado) {
                  primaryTableReference : empleado as e1_0
                }
                left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa) {
                  primaryTableReference : mesa as m1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:46:38.405 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:46:38.405 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Factura */ select id_factura from factura where id_factura=?
2025-06-08 21:46:38.405 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Factura */insert into factura (id_cliente,codigo,estado,fecha_emision,igv,id_pedido,subtotal,total) values (?,?,?,?,?,?,?,?)
2025-06-08 21:46:38.405 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Factura */update factura set id_cliente=?,codigo=?,estado=?,fecha_emision=?,igv=?,id_pedido=?,subtotal=?,total=? where id_factura=?
2025-06-08 21:46:38.405 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Factura */delete from factura where id_factura=?
2025-06-08 21:46:38.405 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:46:38.405 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:46:38.406 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.rol]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.telefono]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.usuario]

2025-06-08 21:46:38.407 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:46:38.407 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:46:38.407 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Empleado */ select id_empleado from empleado where id_empleado=?
2025-06-08 21:46:38.407 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */insert into empleado (apellido,dni,estado,nombre,password,rol,telefono,usuario) values (?,?,?,?,?,?,?,?)
2025-06-08 21:46:38.407 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */update empleado set apellido=?,dni=?,estado=?,nombre=?,password=?,rol=?,telefono=?,usuario=? where id_empleado=?
2025-06-08 21:46:38.407 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */delete from empleado where id_empleado=?
2025-06-08 21:46:38.407 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:46:38.407 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Seccion)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] 
2025-06-08 21:46:38.408 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Seccion]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion.detalle]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion.estado]

2025-06-08 21:46:38.408 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Seccion) {
          primaryTableReference : seccion as s1_0
        }
      }
    }

2025-06-08 21:46:38.408 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:46:38.408 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Seccion */ select id_seccion from seccion where id_seccion=?
2025-06-08 21:46:38.408 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */insert into seccion (detalle,estado) values (?,?)
2025-06-08 21:46:38.408 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */update seccion set detalle=?,estado=? where id_seccion=?
2025-06-08 21:46:38.408 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */delete from seccion where id_seccion=?
2025-06-08 21:46:38.408 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:46:38.408 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Cliente)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] 
2025-06-08 21:46:38.409 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Cliente]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.cantVisitas]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.email]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.nombre]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.telefono]

2025-06-08 21:46:38.409 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Cliente) {
          primaryTableReference : cliente as c1_0
        }
      }
    }

2025-06-08 21:46:38.409 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:46:38.409 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Cliente */ select id_cliente from cliente where id_cliente=?
2025-06-08 21:46:38.410 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */insert into cliente (apellido,cant_visitas,dni,email,estado,nombre,telefono) values (?,?,?,?,?,?,?)
2025-06-08 21:46:38.410 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */update cliente set apellido=?,cant_visitas=?,dni=?,email=?,estado=?,nombre=?,telefono=? where id_cliente=?
2025-06-08 21:46:38.410 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */delete from cliente where id_cliente=?
2025-06-08 21:46:38.410 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:46:38.410 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Menu)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu] 
2025-06-08 21:46:38.411 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@65b11bc4] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido] 
2025-06-08 21:46:38.411 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:46:38.411 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@77ceb8b8] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente] 
2025-06-08 21:46:38.412 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:46:38.412 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3f176739] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado] 
2025-06-08 21:46:38.413 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:46:38.413 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@430b54e] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa] 
2025-06-08 21:46:38.413 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m2_0
2025-06-08 21:46:38.414 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6932e137] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto] 
2025-06-08 21:46:38.414 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p2_0
2025-06-08 21:46:38.414 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6b3b9fd1] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria] 
2025-06-08 21:46:38.414 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:46:38.414 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6f111320] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion] 
2025-06-08 21:46:38.415 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:46:38.415 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.codPedido]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.rol]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.telefono]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.total]
 |  \-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.descripcion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.precio]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion.detalle]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.stock]

2025-06-08 21:46:38.415 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu) {
          primaryTableReference : menu as m1_0
          TableGroupJoins {
            left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido) {
              primaryTableReference : pedido as p1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente) {
                  primaryTableReference : cliente as c1_0
                }
                left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado) {
                  primaryTableReference : empleado as e1_0
                }
                left  join LazyTableGroup (m2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa) {
                  primaryTableReference : mesa as m2_0
                }
              }
            }
            left  join LazyTableGroup (p2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto) {
              primaryTableReference : producto as p2_0
              TableGroupJoins {
                left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria) {
                  primaryTableReference : categoria as c2_0
                }
                left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion) {
                  primaryTableReference : seccion as s1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:46:38.416 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:46:38.416 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Menu */ select id_menu from menu where id_menu=?
2025-06-08 21:46:38.416 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Menu */insert into menu (cod_pedido,id_pedido,id_producto) values (?,?,?)
2025-06-08 21:46:38.416 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Menu */update menu set cod_pedido=?,id_pedido=?,id_producto=? where id_menu=?
2025-06-08 21:46:38.416 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Menu */delete from menu where id_menu=?
2025-06-08 21:46:38.416 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : dp1_0
2025-06-08 21:46:38.417 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.DetPedido)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] 
2025-06-08 21:46:38.417 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@10cf3ee6] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura] 
2025-06-08 21:46:38.417 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2025-06-08 21:46:38.417 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@27bdee39] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente] 
2025-06-08 21:46:38.417 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:46:38.418 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@40d261fd] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido] 
2025-06-08 21:46:38.418 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:46:38.418 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7c6e60a7] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente] 
2025-06-08 21:46:38.418 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:46:38.418 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@153f49c2] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado] 
2025-06-08 21:46:38.419 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:46:38.419 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5dbbb17a] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa] 
2025-06-08 21:46:38.419 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:46:38.420 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@eb5feb9] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido] 
2025-06-08 21:46:38.422 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p2_0
2025-06-08 21:46:38.423 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@51dbb955] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente] 
2025-06-08 21:46:38.423 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c3_0
2025-06-08 21:46:38.423 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@42703bbd] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado] 
2025-06-08 21:46:38.423 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e2_0
2025-06-08 21:46:38.424 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7bca6b0b] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa] 
2025-06-08 21:46:38.424 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m2_0
2025-06-08 21:46:38.424 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1e179fad] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto] 
2025-06-08 21:46:38.424 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p3_0
2025-06-08 21:46:38.424 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@120a9c2b] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria] 
2025-06-08 21:46:38.424 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c4_0
2025-06-08 21:46:38.424 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@51e4e004] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion] 
2025-06-08 21:46:38.425 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:46:38.425 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.cantidad]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.estado]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.telefono]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.codigo]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.fechaEmision]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.igv]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cantPedidos]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.apellido]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.cantVisitas]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.dni]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.email]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.estado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.nombre]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.telefono]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.apellido]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.dni]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.estado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.nombre]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.password]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.rol]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.telefono]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.usuario]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.fechaHora]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.capacidad]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.detalle]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.estado]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.numero]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.total]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.subtotal]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.igv]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.rol]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.telefono]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.precioUnitario]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.descripcion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.precio]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion.detalle]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.stock]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.subtotal]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.total]

2025-06-08 21:46:38.425 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (dp1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido) {
          primaryTableReference : detalle_pedido as dp1_0
          TableGroupJoins {
            left  join LazyTableGroup (f1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura) {
              primaryTableReference : factura as f1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente) {
                  primaryTableReference : cliente as c1_0
                }
                left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido) {
                  primaryTableReference : pedido as p1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente) {
                      primaryTableReference : cliente as c2_0
                    }
                    left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado) {
                      primaryTableReference : empleado as e1_0
                    }
                    left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa) {
                      primaryTableReference : mesa as m1_0
                    }
                  }
                }
              }
            }
             join LazyTableGroup (p2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido) {
              primaryTableReference : pedido as p2_0
              TableGroupJoins {
                left  join LazyTableGroup (c3 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente) {
                  primaryTableReference : cliente as c3_0
                }
                left  join LazyTableGroup (e2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado) {
                  primaryTableReference : empleado as e2_0
                }
                left  join LazyTableGroup (m2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa) {
                  primaryTableReference : mesa as m2_0
                }
              }
            }
             join LazyTableGroup (p3 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto) {
              primaryTableReference : producto as p3_0
              TableGroupJoins {
                left  join LazyTableGroup (c4 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria) {
                  primaryTableReference : categoria as c4_0
                }
                left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion) {
                  primaryTableReference : seccion as s1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:46:38.426 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:46:38.427 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */ select id_detalle_pedido from detalle_pedido where id_detalle_pedido=?
2025-06-08 21:46:38.427 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */insert into detalle_pedido (cantidad,estado,id_factura,igv,id_pedido,precio_unitario,id_producto,subtotal,total) values (?,?,?,?,?,?,?,?,?)
2025-06-08 21:46:38.428 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */update detalle_pedido set cantidad=?,estado=?,id_factura=?,igv=?,id_pedido=?,precio_unitario=?,id_producto=?,subtotal=?,total=? where id_detalle_pedido=?
2025-06-08 21:46:38.428 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */delete from detalle_pedido where id_detalle_pedido=?
2025-06-08 21:46:38.428 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:46:38.429 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Producto)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto] 
2025-06-08 21:46:38.429 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5b165971] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria] 
2025-06-08 21:46:38.429 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:46:38.430 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1dbb6dfc] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion] 
2025-06-08 21:46:38.430 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:46:38.430 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.descripcion]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.precio]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion.detalle]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.stock]

2025-06-08 21:46:38.431 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto) {
          primaryTableReference : producto as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria) {
              primaryTableReference : categoria as c1_0
            }
            left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion) {
              primaryTableReference : seccion as s1_0
            }
          }
        }
      }
    }

2025-06-08 21:46:38.431 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:46:38.431 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Producto */ select id_producto from producto where id_producto=?
2025-06-08 21:46:38.431 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Producto */insert into producto (id_categoria,descripcion,estado,nombre,precio,id_seccion,stock) values (?,?,?,?,?,?,?)
2025-06-08 21:46:38.431 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Producto */update producto set id_categoria=?,descripcion=?,estado=?,nombre=?,precio=?,id_seccion=?,stock=? where id_producto=?
2025-06-08 21:46:38.431 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Producto */delete from producto where id_producto=?
2025-06-08 21:46:38.431 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:46:38.432 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Categoria)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] 
2025-06-08 21:46:38.432 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Categoria]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Categoria.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Categoria.nombre]

2025-06-08 21:46:38.432 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Categoria) {
          primaryTableReference : categoria as c1_0
        }
      }
    }

2025-06-08 21:46:38.433 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:46:38.433 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Categoria */ select id_categoria from categoria where id_categoria=?
2025-06-08 21:46:38.433 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */insert into categoria (estado,nombre) values (?,?)
2025-06-08 21:46:38.433 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */update categoria set estado=?,nombre=? where id_categoria=?
2025-06-08 21:46:38.433 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */delete from categoria where id_categoria=?
2025-06-08 21:46:38.433 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:46:38.433 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Mesa)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] 
2025-06-08 21:46:38.434 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Mesa]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.capacidad]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.detalle]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.numero]

2025-06-08 21:46:38.434 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Mesa) {
          primaryTableReference : mesa as m1_0
        }
      }
    }

2025-06-08 21:46:38.434 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:46:38.434 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Mesa */ select id_mesa from mesa where id_mesa=?
2025-06-08 21:46:38.434 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */insert into mesa (capacidad,detalle,estado,numero) values (?,?,?,?)
2025-06-08 21:46:38.434 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */update mesa set capacidad=?,detalle=?,estado=?,numero=? where id_mesa=?
2025-06-08 21:46:38.434 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */delete from mesa where id_mesa=?
2025-06-08 21:46:38.434 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:46:38.434 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Pedido)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] 
2025-06-08 21:46:38.435 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4f825246] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente] 
2025-06-08 21:46:38.435 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:46:38.435 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6ede841b] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado] 
2025-06-08 21:46:38.435 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:46:38.436 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2e6f6a63] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa] 
2025-06-08 21:46:38.436 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:46:38.437 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cantPedidos]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.cantVisitas]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.email]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.nombre]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.telefono]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.password]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.rol]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.telefono]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.usuario]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.fechaHora]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.capacidad]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.detalle]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.numero]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.total]

2025-06-08 21:46:38.437 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido) {
          primaryTableReference : pedido as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente) {
              primaryTableReference : cliente as c1_0
            }
            left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado) {
              primaryTableReference : empleado as e1_0
            }
            left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa) {
              primaryTableReference : mesa as m1_0
            }
          }
        }
      }
    }

2025-06-08 21:46:38.438 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:46:38.438 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Pedido */ select id_pedido from pedido where id_pedido=?
2025-06-08 21:46:38.438 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */insert into pedido (cant_pedidos,id_cliente,id_empleado,estado,fecha_hora,id_mesa,total) values (?,?,?,?,?,?,?)
2025-06-08 21:46:38.438 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */update pedido set cant_pedidos=?,id_cliente=?,id_empleado=?,estado=?,fecha_hora=?,id_mesa=?,total=? where id_pedido=?
2025-06-08 21:46:38.438 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */delete from pedido where id_pedido=?
2025-06-08 21:46:38.471 [JavaFX-Launcher] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-08 21:46:38.472 [JavaFX-Launcher] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7ac75bdd] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2153de46]
2025-06-08 21:46:38.473 [JavaFX-Launcher] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries
2025-06-08 21:46:38.473 [JavaFX-Launcher] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries
2025-06-08 21:46:38.492 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists categoria
2025-06-08 21:46:38.499 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists cliente
2025-06-08 21:46:38.500 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists detalle_pedido
2025-06-08 21:46:38.501 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists empleado
2025-06-08 21:46:38.501 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists factura
2025-06-08 21:46:38.502 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists menu
2025-06-08 21:46:38.503 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists mesa
2025-06-08 21:46:38.503 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists pedido
2025-06-08 21:46:38.504 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists producto
2025-06-08 21:46:38.504 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists seccion
2025-06-08 21:46:38.511 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table categoria (
        id_categoria integer,
        estado varchar(20),
        nombre varchar(100) not null,
        primary key (id_categoria)
    )
2025-06-08 21:46:38.539 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table cliente (
        cant_visitas integer,
        dni varchar(8) unique,
        id_cliente integer,
        telefono varchar(15),
        estado varchar(20),
        apellido varchar(50) not null,
        nombre varchar(50) not null,
        email varchar(100),
        primary key (id_cliente)
    )
2025-06-08 21:46:38.544 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table detalle_pedido (
        cantidad integer not null,
        igv float,
        precio_unitario float not null,
        subtotal float not null,
        total float,
        id_detalle_pedido integer,
        id_factura bigint,
        id_pedido bigint not null,
        id_producto bigint not null,
        estado varchar(20),
        primary key (id_detalle_pedido)
    )
2025-06-08 21:46:38.550 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table empleado (
        dni varchar(8) not null unique,
        id_empleado integer,
        telefono varchar(9),
        estado varchar(20),
        rol varchar(20) not null,
        usuario varchar(50) not null unique,
        apellido varchar(100) not null,
        nombre varchar(100) not null,
        password varchar(100) not null,
        primary key (id_empleado)
    )
2025-06-08 21:46:38.555 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table factura (
        igv float,
        subtotal float,
        total float,
        fecha_emision timestamp,
        id_cliente bigint,
        id_factura integer,
        id_pedido bigint unique,
        codigo varchar(20) unique,
        estado varchar(20),
        primary key (id_factura)
    )
2025-06-08 21:46:38.560 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table menu (
        id_menu integer,
        id_pedido bigint,
        id_producto bigint,
        cod_pedido varchar(50),
        primary key (id_menu)
    )
2025-06-08 21:46:38.565 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table mesa (
        capacidad integer not null,
        numero integer not null unique,
        id_mesa integer,
        estado varchar(20),
        detalle varchar(200),
        primary key (id_mesa)
    )
2025-06-08 21:46:38.570 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table pedido (
        cant_pedidos integer,
        total float,
        fecha_hora timestamp,
        id_cliente bigint,
        id_empleado bigint,
        id_mesa bigint,
        id_pedido integer,
        estado varchar(20),
        primary key (id_pedido)
    )
2025-06-08 21:46:38.575 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table producto (
        precio float not null,
        stock integer,
        id_categoria bigint,
        id_producto integer,
        id_seccion bigint,
        estado varchar(20),
        nombre varchar(100) not null,
        descripcion varchar(200),
        primary key (id_producto)
    )
2025-06-08 21:46:38.581 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table seccion (
        id_seccion integer,
        estado varchar(20),
        detalle varchar(200),
        primary key (id_seccion)
    )
2025-06-08 21:46:38.591 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7691b72d
2025-06-08 21:46:38.591 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 6233e1f6-65f7-46e9-933e-16994ceb0d0b (<unnamed>)
2025-06-08 21:46:38.591 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-06-08 21:46:38.591 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory
2025-06-08 21:46:38.591 [JavaFX-Launcher] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-08 21:46:38.875 [JavaFX-Launcher] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2025-06-08 21:46:39.269 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy106.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:147)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:38)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:46:39.377 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy106.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:38)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:46:39.401 [JavaFX-Launcher] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-08 21:46:39.404 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy106.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:38)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:46:39.681 [JavaFX-Launcher] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:46:39.684 [JavaFX-Launcher] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-06-08 21:46:39.685 [JavaFX-Launcher] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-06-08 21:46:39.688 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:46:39.688 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-06-08 21:46:39.688 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:46:39.689 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:46:39.689 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:46:39.689 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:46:39.689 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:46:39.691 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:46:39.692 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:46:39.692 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:46:39.692 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:46:39.692 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:46:39.692 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:46:39.989 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - Started application in 7.882 seconds (process running for 9.885)
2025-06-08 21:46:40.018 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-08 21:46:40.018 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - begin
2025-06-08 21:46:40.122 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:46:40.122 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3))] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:46:40.140 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3)]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).rol]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).telefono]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).usuario]

2025-06-08 21:46:40.140 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3)) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:46:40.162 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:46:40.169 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id_empleado,
        e1_0.apellido,
        e1_0.dni,
        e1_0.estado,
        e1_0.nombre,
        e1_0.password,
        e1_0.rol,
        e1_0.telefono,
        e1_0.usuario 
    from
        empleado e1_0
2025-06-08 21:46:40.218 [JavaFX-Launcher] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3) -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3))@1074038819 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:46:40.230 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - committing
2025-06-08 21:46:40.233 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-08 21:46:40.233 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - begin
2025-06-08 21:46:40.233 [JavaFX-Launcher] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-08 21:46:40.251 [JavaFX-Launcher] DEBUG o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-08 21:46:40.265 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    /* insert for
        pe.edu.upeu.proyecto_restaurant.modulo.Empleado */insert 
    into
        empleado (apellido, dni, estado, nombre, password, rol, telefono, usuario) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-06-08 21:46:40.272 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    select
        last_insert_rowid()
2025-06-08 21:46:40.283 [JavaFX-Launcher] DEBUG org.hibernate.orm.results - Initializer list is empty
2025-06-08 21:46:40.286 [JavaFX-Launcher] DEBUG o.h.id.IdentifierGeneratorHelper - Extracted generated values [pe.edu.upeu.proyecto_restaurant.modulo.Empleado]: [Ljava.lang.Object;@40997ffb
2025-06-08 21:46:40.290 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - committing
2025-06-08 21:46:40.291 [JavaFX-Launcher] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-08 21:46:40.293 [JavaFX-Launcher] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-08 21:46:40.298 [JavaFX-Launcher] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-06-08 21:46:40.299 [JavaFX-Launcher] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-06-08 21:46:40.300 [JavaFX-Launcher] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
2025-06-08 21:46:40.300 [JavaFX-Launcher] DEBUG o.h.internal.util.EntityPrinter - pe.edu.upeu.proyecto_restaurant.modulo.Empleado{estado=activo, password=admin, apellido=Sistema, usuario=admin, id=1, telefono=000000000, nombre=Administrador, dni=00000000, rol=admin}
2025-06-08 21:46:40.304 [JavaFX-Launcher] INFO  p.e.u.p.ProyectoRestaurantApplication - Usuario administrador creado con éxito
2025-06-08 21:46:48.363 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Intentando autenticar usuario: hermes
2025-06-08 21:46:48.441 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:46:48.441 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2))] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:46:48.449 [JavaFX Application Thread] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@38dedb67
2025-06-08 21:46:48.450 [JavaFX Application Thread] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).usuario) 
2025-06-08 21:46:48.461 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2)]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).rol]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).telefono]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).usuario]

2025-06-08 21:46:48.461 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2)) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:46:48.463 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:46:48.464 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id_empleado,
        e1_0.apellido,
        e1_0.dni,
        e1_0.estado,
        e1_0.nombre,
        e1_0.password,
        e1_0.rol,
        e1_0.telefono,
        e1_0.usuario 
    from
        empleado e1_0 
    where
        e1_0.usuario=?
2025-06-08 21:46:48.465 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2) -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2))@557117985 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:46:48.468 [JavaFX Application Thread] WARN  p.e.u.p.control.ControlLogin - Error de autenticación: Credenciales inválidas para usuario: hermes
2025-06-08 21:46:51.572 [JavaFX Application Thread] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-08 21:46:51.573 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing
2025-06-08 21:46:51.573 [JavaFX Application Thread] DEBUG o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2025-06-08 21:46:51.575 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists categoria
2025-06-08 21:46:51.610 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists cliente
2025-06-08 21:46:51.617 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists detalle_pedido
2025-06-08 21:46:51.623 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists empleado
2025-06-08 21:46:51.628 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists factura
2025-06-08 21:46:51.633 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists menu
2025-06-08 21:46:51.640 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists mesa
2025-06-08 21:46:51.645 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists pedido
2025-06-08 21:46:51.649 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists producto
2025-06-08 21:46:51.654 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists seccion
2025-06-08 21:46:51.660 [JavaFX Application Thread] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7c4ea878] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2153de46]
2025-06-08 21:46:51.660 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2025-06-08 21:46:51.662 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2025-06-08 21:46:51.662 [JavaFX Application Thread] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-08 21:46:51.666 [JavaFX Application Thread] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-08 21:48:13.042 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:48:13.046 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:48:13.047 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:48:13.048 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:48:13.059 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:48:13.061 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:48:13.104 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:48:13.368 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:48:13.382 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:48:13.383 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:48:13.383 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:48:13.383 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:48:13.384 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:48:13.483 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - Starting application using Java 23.0.2 with PID 13260 (started by USUARIO in C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant)
2025-06-08 21:48:13.487 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-08 21:48:14.756 [JavaFX-Launcher] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-08 21:48:14.930 [JavaFX-Launcher] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 156 ms. Found 10 JPA repository interfaces.
2025-06-08 21:48:15.715 [JavaFX-Launcher] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@506e1b77
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/USUARIO/Documents/ProyectoRestaurantJava/ProyectoRestaurant/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		pe.edu.upeu.proyecto_restaurant.modulo.Categoria
		pe.edu.upeu.proyecto_restaurant.modulo.Cliente
		pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
		pe.edu.upeu.proyecto_restaurant.modulo.Empleado
		pe.edu.upeu.proyecto_restaurant.modulo.Factura
		pe.edu.upeu.proyecto_restaurant.modulo.Menu
		pe.edu.upeu.proyecto_restaurant.modulo.Mesa
		pe.edu.upeu.proyecto_restaurant.modulo.Pedido
		pe.edu.upeu.proyecto_restaurant.modulo.Producto
		pe.edu.upeu.proyecto_restaurant.modulo.Seccion]
	Mapping files names []
	Properties []
2025-06-08 21:48:15.737 [JavaFX-Launcher] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-06-08 21:48:15.743 [JavaFX-Launcher] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-06-08 21:48:15.862 [JavaFX-Launcher] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-08 21:48:15.864 [JavaFX-Launcher] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found
2025-06-08 21:48:15.914 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-06-08 21:48:15.915 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-06-08 21:48:15.916 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:48:15.916 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:48:15.917 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-06-08 21:48:15.920 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-06-08 21:48:15.921 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-06-08 21:48:15.923 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:48:15.924 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-06-08 21:48:15.926 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-06-08 21:48:15.926 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:48:15.927 [JavaFX-Launcher] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-06-08 21:48:15.935 [JavaFX-Launcher] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-06-08 21:48:15.938 [JavaFX-Launcher] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-08 21:48:16.059 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@c36f402
2025-06-08 21:48:16.059 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@c36f402
2025-06-08 21:48:16.060 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@c36f402
2025-06-08 21:48:16.060 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5079a33d
2025-06-08 21:48:16.060 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5079a33d
2025-06-08 21:48:16.060 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4838095a
2025-06-08 21:48:16.060 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4838095a
2025-06-08 21:48:16.060 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5d4f101e
2025-06-08 21:48:16.060 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5d4f101e
2025-06-08 21:48:16.060 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@66626951
2025-06-08 21:48:16.060 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@66626951
2025-06-08 21:48:16.061 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@66626951
2025-06-08 21:48:16.061 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@7b1f5eeb
2025-06-08 21:48:16.061 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7b1f5eeb
2025-06-08 21:48:16.061 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@7b1f5eeb
2025-06-08 21:48:16.061 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@73e5ea0b
2025-06-08 21:48:16.061 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@73e5ea0b
2025-06-08 21:48:16.061 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@560fcb89
2025-06-08 21:48:16.062 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@23d208f8
2025-06-08 21:48:16.062 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@23d208f8
2025-06-08 21:48:16.062 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@223bf26f
2025-06-08 21:48:16.062 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7ed2e191
2025-06-08 21:48:16.062 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@56a92e41
2025-06-08 21:48:16.062 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@56a92e41
2025-06-08 21:48:16.062 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@56a92e41
2025-06-08 21:48:16.062 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@650f69a4
2025-06-08 21:48:16.063 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@650f69a4
2025-06-08 21:48:16.063 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@650f69a4
2025-06-08 21:48:16.063 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@18da57e0
2025-06-08 21:48:16.063 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@18da57e0
2025-06-08 21:48:16.064 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@18da57e0
2025-06-08 21:48:16.064 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@716df303
2025-06-08 21:48:16.064 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@716df303
2025-06-08 21:48:16.064 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@716df303
2025-06-08 21:48:16.064 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6e291049
2025-06-08 21:48:16.064 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6e291049
2025-06-08 21:48:16.064 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6e291049
2025-06-08 21:48:16.064 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@70f51661
2025-06-08 21:48:16.064 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@70f51661
2025-06-08 21:48:16.065 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3ada3ac8
2025-06-08 21:48:16.065 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3ada3ac8
2025-06-08 21:48:16.065 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@24b1337b
2025-06-08 21:48:16.065 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@24b1337b
2025-06-08 21:48:16.065 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@24b1337b
2025-06-08 21:48:16.065 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@23cc4fc
2025-06-08 21:48:16.066 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5a229cc4
2025-06-08 21:48:16.066 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5a229cc4
2025-06-08 21:48:16.066 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3145e132
2025-06-08 21:48:16.067 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@1cc2268a
2025-06-08 21:48:16.067 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1cc2268a
2025-06-08 21:48:16.068 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@1cc2268a
2025-06-08 21:48:16.069 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@783d0aca
2025-06-08 21:48:16.069 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@36b77db5
2025-06-08 21:48:16.070 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@28e54620
2025-06-08 21:48:16.070 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@259ec3c0
2025-06-08 21:48:16.071 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@259ec3c0
2025-06-08 21:48:16.071 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3565e6e3
2025-06-08 21:48:16.071 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3565e6e3
2025-06-08 21:48:16.071 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@38b26f2f
2025-06-08 21:48:16.071 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3a64ea5f
2025-06-08 21:48:16.072 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@69b7be10
2025-06-08 21:48:16.072 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@73ff0f3b
2025-06-08 21:48:16.072 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@581fcd7c
2025-06-08 21:48:16.073 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@45b4f232
2025-06-08 21:48:16.073 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@11a783aa
2025-06-08 21:48:16.073 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@11a783aa
2025-06-08 21:48:16.073 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1a2ad072
2025-06-08 21:48:16.074 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1a2ad072
2025-06-08 21:48:16.074 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3c788a66
2025-06-08 21:48:16.074 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3c788a66
2025-06-08 21:48:16.074 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5ebfcab9
2025-06-08 21:48:16.074 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5ebfcab9
2025-06-08 21:48:16.074 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7328b817
2025-06-08 21:48:16.075 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7328b817
2025-06-08 21:48:16.075 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3fcd4f40
2025-06-08 21:48:16.075 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@471ec965
2025-06-08 21:48:16.075 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@67d4293d
2025-06-08 21:48:16.075 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@67d4293d
2025-06-08 21:48:16.075 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@518acdd0
2025-06-08 21:48:16.075 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4e82fee
2025-06-08 21:48:16.076 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@350c9bf7
2025-06-08 21:48:16.076 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7357d1aa
2025-06-08 21:48:16.076 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7357d1aa
2025-06-08 21:48:16.076 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7434765d
2025-06-08 21:48:16.076 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@31e6a06a
2025-06-08 21:48:16.077 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@60e44682
2025-06-08 21:48:16.077 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@60e44682
2025-06-08 21:48:16.077 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@2df311b5
2025-06-08 21:48:16.077 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2df311b5
2025-06-08 21:48:16.078 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7a221cc8
2025-06-08 21:48:16.078 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7a221cc8
2025-06-08 21:48:16.078 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7a221cc8
2025-06-08 21:48:16.078 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7e431616
2025-06-08 21:48:16.078 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7e431616
2025-06-08 21:48:16.078 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7e431616
2025-06-08 21:48:16.079 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3cd19f0a
2025-06-08 21:48:16.080 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@63b4c63b
2025-06-08 21:48:16.080 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5218ffd
2025-06-08 21:48:16.080 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5218ffd
2025-06-08 21:48:16.080 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@35b8799c
2025-06-08 21:48:16.080 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@35b8799c
2025-06-08 21:48:16.080 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@35b8799c
2025-06-08 21:48:16.080 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6e05a608
2025-06-08 21:48:16.080 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2bc520ed
2025-06-08 21:48:16.080 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@22120c0f
2025-06-08 21:48:16.080 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@22120c0f
2025-06-08 21:48:16.081 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5490e548
2025-06-08 21:48:16.081 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5490e548
2025-06-08 21:48:16.081 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5490e548
2025-06-08 21:48:16.081 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@17662c34
2025-06-08 21:48:16.081 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@17662c34
2025-06-08 21:48:16.081 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1526a47d
2025-06-08 21:48:16.081 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1526a47d
2025-06-08 21:48:16.081 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@27e6b0a2
2025-06-08 21:48:16.082 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@27e6b0a2
2025-06-08 21:48:16.082 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@740fabb3
2025-06-08 21:48:16.082 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@740fabb3
2025-06-08 21:48:16.082 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@522e2e8a
2025-06-08 21:48:16.083 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@522e2e8a
2025-06-08 21:48:16.083 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@728b6dfe
2025-06-08 21:48:16.083 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@60fab0ad
2025-06-08 21:48:16.083 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@69a1cd32
2025-06-08 21:48:16.084 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@4ad8f4f2
2025-06-08 21:48:16.084 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@639594ca
2025-06-08 21:48:16.090 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@165e736d
2025-06-08 21:48:16.091 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@165e736d
2025-06-08 21:48:16.092 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2b70fd56
2025-06-08 21:48:16.093 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1f5a0529
2025-06-08 21:48:16.093 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@109fa250
2025-06-08 21:48:16.093 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@59f4117f
2025-06-08 21:48:16.093 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@75c2dd5a
2025-06-08 21:48:16.093 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3afeed86
2025-06-08 21:48:16.093 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@579e45ab
2025-06-08 21:48:16.094 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2e98c9ce
2025-06-08 21:48:16.094 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4dd3f94a
2025-06-08 21:48:16.099 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@32e3fb3a] into BootstrapContext; was [null]
2025-06-08 21:48:16.099 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@32e3fb3a) [was null]
2025-06-08 21:48:16.100 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@78fde9a8] into BootstrapContext; was [null]
2025-06-08 21:48:16.101 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@42b65e8d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@48671355]
2025-06-08 21:48:16.125 [JavaFX-Launcher] DEBUG o.h.j.b.i.PersistenceUnitInfoDescriptor - Pushing class transformers for PU named 'default' on loading classloader jdk.internal.loader.ClassLoaders$AppClassLoader@506e1b77
2025-06-08 21:48:16.410 [JavaFX-Launcher] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-08 21:48:16.410 [JavaFX-Launcher] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@32e3fb3a]
2025-06-08 21:48:16.410 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@32e3fb3a]
2025-06-08 21:48:16.461 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-08 21:48:16.627 [JavaFX-Launcher] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@377b02c4
2025-06-08 21:48:16.630 [JavaFX-Launcher] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-08 21:48:16.648 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : SQLite
	version : 3.46.0
	  major : 3
	  minor : 46
2025-06-08 21:48:16.648 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : SQLite JDBC
	version : 3.46.0.0
	  major : 3
	  minor : 46
2025-06-08 21:48:16.648 [JavaFX-Launcher] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2
2025-06-08 21:48:16.667 [JavaFX-Launcher] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.community.dialect.SQLiteDialect, version: 3.46
2025-06-08 21:48:16.673 [JavaFX-Launcher] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-06-08 21:48:16.673 [JavaFX-Launcher] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2025-06-08 21:48:16.706 [JavaFX-Launcher] DEBUG org.hibernate.orm.jdbc.lob - HHH10010005: Disabling contextual LOB creation as createClob() method threw error : java.sql.SQLFeatureNotSupportedException
2025-06-08 21:48:16.714 [JavaFX-Launcher] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 3.46
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-08 21:48:16.730 [JavaFX-Launcher] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(PRIMITIVE_ARRAY_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-06-08 21:48:16.730 [JavaFX-Launcher] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STRING_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-08 21:48:16.738 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-06-08 21:48:16.738 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:48:16.738 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:48:16.743 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:48:16.743 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:48:16.743 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:48:16.744 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:48:16.744 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:48:16.744 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:48:16.745 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:48:16.745 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:48:16.745 [JavaFX-Launcher] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:48:16.747 [JavaFX-Launcher] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@352cab76] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1e8c654c]
2025-06-08 21:48:16.802 [JavaFX-Launcher] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-06-08 21:48:16.837 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:48:16.847 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Categoria
2025-06-08 21:48:16.860 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Categoria on table categoria
2025-06-08 21:48:16.878 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:48:16.908 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_categoria')
2025-06-08 21:48:16.910 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:48:16.910 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:48:16.916 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCategoria with lazy=false
2025-06-08 21:48:16.924 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:idCategoria]
2025-06-08 21:48:16.931 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCategoria
2025-06-08 21:48:16.937 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.id_categoria
2025-06-08 21:48:16.938 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCategoria
2025-06-08 21:48:16.944 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_categoria)]), idCategoria, identity, , ...)
2025-06-08 21:48:16.946 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:48:16.947 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:48:16.947 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:estado]
2025-06-08 21:48:16.947 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:48:16.947 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.estado
2025-06-08 21:48:16.948 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:48:16.948 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:48:16.949 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:48:16.949 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:nombre]
2025-06-08 21:48:16.949 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:48:16.949 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.nombre
2025-06-08 21:48:16.950 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:48:16.952 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:48:16.981 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:48:16.982 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Cliente
2025-06-08 21:48:16.982 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Cliente on table cliente
2025-06-08 21:48:16.983 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:48:16.987 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_cliente')
2025-06-08 21:48:16.987 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:48:16.987 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:48:16.987 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCliente with lazy=false
2025-06-08 21:48:16.988 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:idCliente]
2025-06-08 21:48:16.988 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCliente
2025-06-08 21:48:16.989 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.id_cliente
2025-06-08 21:48:16.989 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCliente
2025-06-08 21:48:16.989 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_cliente)]), idCliente, identity, , ...)
2025-06-08 21:48:16.990 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='apellido')
2025-06-08 21:48:16.990 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property apellido with lazy=false
2025-06-08 21:48:16.990 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:apellido]
2025-06-08 21:48:16.990 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for apellido
2025-06-08 21:48:16.990 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.apellido
2025-06-08 21:48:16.990 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property apellido
2025-06-08 21:48:16.991 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cant_visitas')
2025-06-08 21:48:16.991 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantVisitas with lazy=false
2025-06-08 21:48:16.992 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:cantVisitas]
2025-06-08 21:48:16.992 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantVisitas
2025-06-08 21:48:16.992 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.cant_visitas
2025-06-08 21:48:16.992 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantVisitas
2025-06-08 21:48:16.995 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='dni')
2025-06-08 21:48:16.996 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property dni with lazy=false
2025-06-08 21:48:16.996 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:dni]
2025-06-08 21:48:16.996 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for dni
2025-06-08 21:48:16.996 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.dni
2025-06-08 21:48:16.997 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property dni
2025-06-08 21:48:16.998 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
2025-06-08 21:48:16.998 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-06-08 21:48:16.998 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:email]
2025-06-08 21:48:16.999 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email
2025-06-08 21:48:16.999 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.email
2025-06-08 21:48:16.999 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property email
2025-06-08 21:48:17.000 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:48:17.000 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:48:17.001 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:estado]
2025-06-08 21:48:17.002 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:48:17.003 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.estado
2025-06-08 21:48:17.004 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:48:17.004 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:48:17.005 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:48:17.005 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:nombre]
2025-06-08 21:48:17.005 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:48:17.005 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.nombre
2025-06-08 21:48:17.006 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:48:17.006 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='telefono')
2025-06-08 21:48:17.006 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property telefono with lazy=false
2025-06-08 21:48:17.007 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:telefono]
2025-06-08 21:48:17.007 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for telefono
2025-06-08 21:48:17.007 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.telefono
2025-06-08 21:48:17.008 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property telefono
2025-06-08 21:48:17.009 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:48:17.010 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:48:17.010 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name DetPedido
2025-06-08 21:48:17.010 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.DetPedido on table detalle_pedido
2025-06-08 21:48:17.011 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:48:17.021 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_detalle_pedido')
2025-06-08 21:48:17.021 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:48:17.021 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:48:17.021 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idDetallePedido with lazy=false
2025-06-08 21:48:17.021 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:idDetallePedido]
2025-06-08 21:48:17.022 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idDetallePedido
2025-06-08 21:48:17.022 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.id_detalle_pedido
2025-06-08 21:48:17.022 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idDetallePedido
2025-06-08 21:48:17.023 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_detalle_pedido)]), idDetallePedido, identity, , ...)
2025-06-08 21:48:17.023 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cantidad')
2025-06-08 21:48:17.024 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantidad with lazy=false
2025-06-08 21:48:17.024 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:cantidad]
2025-06-08 21:48:17.024 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantidad
2025-06-08 21:48:17.024 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.cantidad
2025-06-08 21:48:17.024 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantidad
2025-06-08 21:48:17.025 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:48:17.025 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:48:17.025 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:estado]
2025-06-08 21:48:17.025 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:48:17.026 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.estado
2025-06-08 21:48:17.026 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:48:17.028 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_factura',referencedColumn='id_factura')
2025-06-08 21:48:17.031 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:48:17.039 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property factura
2025-06-08 21:48:17.039 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='igv')
2025-06-08 21:48:17.040 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property igv with lazy=false
2025-06-08 21:48:17.040 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:igv]
2025-06-08 21:48:17.041 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for igv
2025-06-08 21:48:17.041 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.igv
2025-06-08 21:48:17.041 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property igv
2025-06-08 21:48:17.042 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:48:17.042 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:48:17.043 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:48:17.043 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio_unitario')
2025-06-08 21:48:17.044 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precioUnitario with lazy=false
2025-06-08 21:48:17.044 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:precioUnitario]
2025-06-08 21:48:17.044 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precioUnitario
2025-06-08 21:48:17.045 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.precio_unitario
2025-06-08 21:48:17.045 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property precioUnitario
2025-06-08 21:48:17.046 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_producto',referencedColumn='id_producto')
2025-06-08 21:48:17.046 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:48:17.047 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property producto
2025-06-08 21:48:17.048 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='subtotal')
2025-06-08 21:48:17.048 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property subtotal with lazy=false
2025-06-08 21:48:17.049 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:subtotal]
2025-06-08 21:48:17.049 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for subtotal
2025-06-08 21:48:17.050 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.subtotal
2025-06-08 21:48:17.050 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property subtotal
2025-06-08 21:48:17.052 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:48:17.052 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:48:17.052 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:total]
2025-06-08 21:48:17.053 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:48:17.053 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.total
2025-06-08 21:48:17.053 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:48:17.054 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:48:17.055 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:48:17.056 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Empleado
2025-06-08 21:48:17.056 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Empleado on table empleado
2025-06-08 21:48:17.057 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:48:17.060 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_empleado')
2025-06-08 21:48:17.060 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:48:17.060 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:48:17.060 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-06-08 21:48:17.060 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:id]
2025-06-08 21:48:17.061 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id
2025-06-08 21:48:17.061 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.id_empleado
2025-06-08 21:48:17.062 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property id
2025-06-08 21:48:17.062 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_empleado)]), id, identity, , ...)
2025-06-08 21:48:17.062 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='apellido')
2025-06-08 21:48:17.063 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property apellido with lazy=false
2025-06-08 21:48:17.063 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:apellido]
2025-06-08 21:48:17.063 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for apellido
2025-06-08 21:48:17.064 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.apellido
2025-06-08 21:48:17.064 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property apellido
2025-06-08 21:48:17.064 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='dni')
2025-06-08 21:48:17.065 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property dni with lazy=false
2025-06-08 21:48:17.065 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:dni]
2025-06-08 21:48:17.065 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for dni
2025-06-08 21:48:17.065 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.dni
2025-06-08 21:48:17.065 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property dni
2025-06-08 21:48:17.066 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:48:17.066 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:48:17.066 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:estado]
2025-06-08 21:48:17.066 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:48:17.066 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.estado
2025-06-08 21:48:17.067 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:48:17.068 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:48:17.068 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:48:17.069 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:nombre]
2025-06-08 21:48:17.069 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:48:17.070 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.nombre
2025-06-08 21:48:17.070 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:48:17.071 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password')
2025-06-08 21:48:17.071 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-06-08 21:48:17.071 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:password]
2025-06-08 21:48:17.071 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password
2025-06-08 21:48:17.071 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.password
2025-06-08 21:48:17.071 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property password
2025-06-08 21:48:17.072 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='rol')
2025-06-08 21:48:17.072 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property rol with lazy=false
2025-06-08 21:48:17.073 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:rol]
2025-06-08 21:48:17.073 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for rol
2025-06-08 21:48:17.073 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.rol
2025-06-08 21:48:17.073 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property rol
2025-06-08 21:48:17.074 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='telefono')
2025-06-08 21:48:17.074 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property telefono with lazy=false
2025-06-08 21:48:17.074 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:telefono]
2025-06-08 21:48:17.074 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for telefono
2025-06-08 21:48:17.075 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.telefono
2025-06-08 21:48:17.075 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property telefono
2025-06-08 21:48:17.076 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='usuario')
2025-06-08 21:48:17.076 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property usuario with lazy=false
2025-06-08 21:48:17.076 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:usuario]
2025-06-08 21:48:17.076 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for usuario
2025-06-08 21:48:17.077 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.usuario
2025-06-08 21:48:17.077 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property usuario
2025-06-08 21:48:17.078 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:48:17.079 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:48:17.080 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Factura
2025-06-08 21:48:17.080 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Factura on table factura
2025-06-08 21:48:17.080 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:48:17.084 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_factura')
2025-06-08 21:48:17.084 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:48:17.085 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:48:17.085 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idFactura with lazy=false
2025-06-08 21:48:17.085 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:idFactura]
2025-06-08 21:48:17.086 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idFactura
2025-06-08 21:48:17.086 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.id_factura
2025-06-08 21:48:17.086 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idFactura
2025-06-08 21:48:17.086 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_factura)]), idFactura, identity, , ...)
2025-06-08 21:48:17.087 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_cliente',referencedColumn='id_cliente')
2025-06-08 21:48:17.087 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:48:17.087 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cliente
2025-06-08 21:48:17.088 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='codigo')
2025-06-08 21:48:17.088 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codigo with lazy=false
2025-06-08 21:48:17.088 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:codigo]
2025-06-08 21:48:17.088 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codigo
2025-06-08 21:48:17.089 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.codigo
2025-06-08 21:48:17.089 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property codigo
2025-06-08 21:48:17.089 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:48:17.090 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:48:17.090 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:estado]
2025-06-08 21:48:17.090 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:48:17.090 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.estado
2025-06-08 21:48:17.090 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:48:17.091 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fecha_emision')
2025-06-08 21:48:17.091 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaEmision with lazy=false
2025-06-08 21:48:17.091 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:fechaEmision]
2025-06-08 21:48:17.091 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaEmision
2025-06-08 21:48:17.091 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.fecha_emision
2025-06-08 21:48:17.092 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaEmision
2025-06-08 21:48:17.092 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='igv')
2025-06-08 21:48:17.092 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property igv with lazy=false
2025-06-08 21:48:17.092 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:igv]
2025-06-08 21:48:17.092 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for igv
2025-06-08 21:48:17.093 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.igv
2025-06-08 21:48:17.093 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property igv
2025-06-08 21:48:17.094 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:48:17.094 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:48:17.095 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:48:17.095 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='subtotal')
2025-06-08 21:48:17.095 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property subtotal with lazy=false
2025-06-08 21:48:17.096 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:subtotal]
2025-06-08 21:48:17.096 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for subtotal
2025-06-08 21:48:17.096 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.subtotal
2025-06-08 21:48:17.096 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property subtotal
2025-06-08 21:48:17.097 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:48:17.097 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:48:17.097 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:total]
2025-06-08 21:48:17.097 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:48:17.097 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.total
2025-06-08 21:48:17.097 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:48:17.098 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:48:17.099 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:48:17.099 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Menu
2025-06-08 21:48:17.099 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Menu on table menu
2025-06-08 21:48:17.100 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:48:17.102 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_menu')
2025-06-08 21:48:17.103 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:48:17.103 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:48:17.103 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idMenu with lazy=false
2025-06-08 21:48:17.103 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Menu:idMenu]
2025-06-08 21:48:17.103 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idMenu
2025-06-08 21:48:17.103 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: menu.id_menu
2025-06-08 21:48:17.103 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idMenu
2025-06-08 21:48:17.103 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_menu)]), idMenu, identity, , ...)
2025-06-08 21:48:17.104 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cod_pedido')
2025-06-08 21:48:17.104 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codPedido with lazy=false
2025-06-08 21:48:17.104 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Menu:codPedido]
2025-06-08 21:48:17.104 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codPedido
2025-06-08 21:48:17.104 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: menu.cod_pedido
2025-06-08 21:48:17.105 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property codPedido
2025-06-08 21:48:17.105 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:48:17.106 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:48:17.106 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:48:17.107 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_producto',referencedColumn='id_producto')
2025-06-08 21:48:17.107 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:48:17.107 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property producto
2025-06-08 21:48:17.108 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:48:17.109 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:48:17.109 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Mesa
2025-06-08 21:48:17.110 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Mesa on table mesa
2025-06-08 21:48:17.110 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:48:17.113 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_mesa')
2025-06-08 21:48:17.113 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:48:17.113 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:48:17.113 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idMesa with lazy=false
2025-06-08 21:48:17.113 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:idMesa]
2025-06-08 21:48:17.114 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idMesa
2025-06-08 21:48:17.114 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.id_mesa
2025-06-08 21:48:17.115 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idMesa
2025-06-08 21:48:17.115 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_mesa)]), idMesa, identity, , ...)
2025-06-08 21:48:17.116 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='capacidad')
2025-06-08 21:48:17.116 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property capacidad with lazy=false
2025-06-08 21:48:17.117 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:capacidad]
2025-06-08 21:48:17.117 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for capacidad
2025-06-08 21:48:17.117 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.capacidad
2025-06-08 21:48:17.118 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property capacidad
2025-06-08 21:48:17.118 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='detalle')
2025-06-08 21:48:17.119 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property detalle with lazy=false
2025-06-08 21:48:17.120 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:detalle]
2025-06-08 21:48:17.120 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for detalle
2025-06-08 21:48:17.121 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.detalle
2025-06-08 21:48:17.121 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property detalle
2025-06-08 21:48:17.121 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:48:17.122 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:48:17.122 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:estado]
2025-06-08 21:48:17.122 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:48:17.122 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.estado
2025-06-08 21:48:17.122 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:48:17.123 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='numero')
2025-06-08 21:48:17.124 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property numero with lazy=false
2025-06-08 21:48:17.124 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:numero]
2025-06-08 21:48:17.124 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for numero
2025-06-08 21:48:17.124 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.numero
2025-06-08 21:48:17.125 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property numero
2025-06-08 21:48:17.127 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:48:17.128 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:48:17.128 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Pedido
2025-06-08 21:48:17.128 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Pedido on table pedido
2025-06-08 21:48:17.129 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:48:17.132 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_pedido')
2025-06-08 21:48:17.132 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:48:17.132 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:48:17.132 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idPedido with lazy=false
2025-06-08 21:48:17.132 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:idPedido]
2025-06-08 21:48:17.132 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idPedido
2025-06-08 21:48:17.132 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.id_pedido
2025-06-08 21:48:17.132 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idPedido
2025-06-08 21:48:17.132 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_pedido)]), idPedido, identity, , ...)
2025-06-08 21:48:17.133 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cant_pedidos')
2025-06-08 21:48:17.134 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantPedidos with lazy=false
2025-06-08 21:48:17.134 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:cantPedidos]
2025-06-08 21:48:17.134 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantPedidos
2025-06-08 21:48:17.134 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.cant_pedidos
2025-06-08 21:48:17.135 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantPedidos
2025-06-08 21:48:17.135 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_cliente',referencedColumn='id_cliente')
2025-06-08 21:48:17.136 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:48:17.136 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property cliente
2025-06-08 21:48:17.137 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_empleado',referencedColumn='id_empleado')
2025-06-08 21:48:17.137 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:48:17.137 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property empleado
2025-06-08 21:48:17.137 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:48:17.138 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:48:17.138 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:estado]
2025-06-08 21:48:17.138 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:48:17.138 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.estado
2025-06-08 21:48:17.138 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:48:17.139 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fecha_hora')
2025-06-08 21:48:17.139 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaHora with lazy=false
2025-06-08 21:48:17.139 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:fechaHora]
2025-06-08 21:48:17.139 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaHora
2025-06-08 21:48:17.139 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.fecha_hora
2025-06-08 21:48:17.139 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaHora
2025-06-08 21:48:17.140 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_mesa',referencedColumn='id_mesa')
2025-06-08 21:48:17.140 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:48:17.140 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property mesa
2025-06-08 21:48:17.141 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:48:17.141 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:48:17.141 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:total]
2025-06-08 21:48:17.141 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:48:17.141 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.total
2025-06-08 21:48:17.142 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:48:17.142 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:48:17.143 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:48:17.144 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Producto
2025-06-08 21:48:17.144 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Producto on table producto
2025-06-08 21:48:17.144 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:48:17.146 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_producto')
2025-06-08 21:48:17.146 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:48:17.146 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:48:17.147 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idProducto with lazy=false
2025-06-08 21:48:17.147 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:idProducto]
2025-06-08 21:48:17.147 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idProducto
2025-06-08 21:48:17.147 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.id_producto
2025-06-08 21:48:17.147 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idProducto
2025-06-08 21:48:17.147 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_producto)]), idProducto, identity, , ...)
2025-06-08 21:48:17.147 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_categoria',referencedColumn='id_categoria')
2025-06-08 21:48:17.147 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:48:17.148 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property categoria
2025-06-08 21:48:17.148 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='descripcion')
2025-06-08 21:48:17.148 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property descripcion with lazy=false
2025-06-08 21:48:17.148 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:descripcion]
2025-06-08 21:48:17.148 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for descripcion
2025-06-08 21:48:17.148 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.descripcion
2025-06-08 21:48:17.148 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property descripcion
2025-06-08 21:48:17.149 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:48:17.149 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:48:17.149 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:estado]
2025-06-08 21:48:17.149 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:48:17.149 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.estado
2025-06-08 21:48:17.149 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:48:17.150 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:48:17.150 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:48:17.151 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:nombre]
2025-06-08 21:48:17.151 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:48:17.151 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.nombre
2025-06-08 21:48:17.152 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:48:17.152 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio')
2025-06-08 21:48:17.153 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precio with lazy=false
2025-06-08 21:48:17.153 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:precio]
2025-06-08 21:48:17.153 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precio
2025-06-08 21:48:17.153 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.precio
2025-06-08 21:48:17.153 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property precio
2025-06-08 21:48:17.153 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_seccion',referencedColumn='id_seccion')
2025-06-08 21:48:17.154 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:48:17.154 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property seccion
2025-06-08 21:48:17.155 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='stock')
2025-06-08 21:48:17.155 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property stock with lazy=false
2025-06-08 21:48:17.155 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:stock]
2025-06-08 21:48:17.155 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for stock
2025-06-08 21:48:17.155 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.stock
2025-06-08 21:48:17.155 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property stock
2025-06-08 21:48:17.156 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:48:17.156 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:48:17.157 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Seccion
2025-06-08 21:48:17.157 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Seccion on table seccion
2025-06-08 21:48:17.157 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:48:17.159 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_seccion')
2025-06-08 21:48:17.160 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:48:17.160 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:48:17.160 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idSeccion with lazy=false
2025-06-08 21:48:17.160 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:idSeccion]
2025-06-08 21:48:17.160 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idSeccion
2025-06-08 21:48:17.160 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.id_seccion
2025-06-08 21:48:17.160 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property idSeccion
2025-06-08 21:48:17.160 [JavaFX-Launcher] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_seccion)]), idSeccion, identity, , ...)
2025-06-08 21:48:17.161 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='detalle')
2025-06-08 21:48:17.161 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property detalle with lazy=false
2025-06-08 21:48:17.161 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:detalle]
2025-06-08 21:48:17.161 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for detalle
2025-06-08 21:48:17.162 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.detalle
2025-06-08 21:48:17.162 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property detalle
2025-06-08 21:48:17.162 [JavaFX-Launcher] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:48:17.163 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:48:17.163 [JavaFX-Launcher] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:estado]
2025-06-08 21:48:17.163 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:48:17.163 [JavaFX-Launcher] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.estado
2025-06-08 21:48:17.163 [JavaFX-Launcher] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:48:17.164 [JavaFX-Launcher] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:48:17.166 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idCategoria
2025-06-08 21:48:17.169 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:48:17.169 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:48:17.169 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idCliente
2025-06-08 21:48:17.169 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apellido
2025-06-08 21:48:17.170 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantVisitas
2025-06-08 21:48:17.170 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for dni
2025-06-08 21:48:17.170 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-06-08 21:48:17.170 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:48:17.170 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:48:17.170 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for telefono
2025-06-08 21:48:17.170 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idDetallePedido
2025-06-08 21:48:17.170 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantidad
2025-06-08 21:48:17.170 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:48:17.171 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for igv
2025-06-08 21:48:17.171 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precioUnitario
2025-06-08 21:48:17.171 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for subtotal
2025-06-08 21:48:17.171 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:48:17.171 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-06-08 21:48:17.171 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apellido
2025-06-08 21:48:17.171 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for dni
2025-06-08 21:48:17.171 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:48:17.171 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:48:17.171 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-06-08 21:48:17.171 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for rol
2025-06-08 21:48:17.171 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for telefono
2025-06-08 21:48:17.171 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for usuario
2025-06-08 21:48:17.171 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idFactura
2025-06-08 21:48:17.172 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codigo
2025-06-08 21:48:17.172 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:48:17.172 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaEmision
2025-06-08 21:48:17.172 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for igv
2025-06-08 21:48:17.172 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for subtotal
2025-06-08 21:48:17.172 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:48:17.172 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idMenu
2025-06-08 21:48:17.172 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codPedido
2025-06-08 21:48:17.172 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idMesa
2025-06-08 21:48:17.172 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for capacidad
2025-06-08 21:48:17.172 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for detalle
2025-06-08 21:48:17.172 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:48:17.172 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for numero
2025-06-08 21:48:17.172 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idPedido
2025-06-08 21:48:17.172 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantPedidos
2025-06-08 21:48:17.172 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:48:17.172 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaHora
2025-06-08 21:48:17.172 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:48:17.172 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idProducto
2025-06-08 21:48:17.172 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for descripcion
2025-06-08 21:48:17.172 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:48:17.172 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:48:17.173 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precio
2025-06-08 21:48:17.173 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for stock
2025-06-08 21:48:17.173 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idSeccion
2025-06-08 21:48:17.173 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for detalle
2025-06-08 21:48:17.173 [JavaFX-Launcher] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:48:17.180 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_categoria] to be non-null as it is part of the primary key for table [categoria]
2025-06-08 21:48:17.181 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_cliente] to be non-null as it is part of the primary key for table [cliente]
2025-06-08 21:48:17.181 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_detalle_pedido] to be non-null as it is part of the primary key for table [detalle_pedido]
2025-06-08 21:48:17.181 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_empleado] to be non-null as it is part of the primary key for table [empleado]
2025-06-08 21:48:17.181 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_factura] to be non-null as it is part of the primary key for table [factura]
2025-06-08 21:48:17.181 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_menu] to be non-null as it is part of the primary key for table [menu]
2025-06-08 21:48:17.181 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_mesa] to be non-null as it is part of the primary key for table [mesa]
2025-06-08 21:48:17.181 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_pedido] to be non-null as it is part of the primary key for table [pedido]
2025-06-08 21:48:17.181 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_producto] to be non-null as it is part of the primary key for table [producto]
2025-06-08 21:48:17.181 [JavaFX-Launcher] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_seccion] to be non-null as it is part of the primary key for table [seccion]
2025-06-08 21:48:17.487 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2025-06-08 21:48:17.531 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:48:17.531 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=23, javafx.runtime.version=21.0.1+6, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@66739a3c, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.community.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant\target\classes;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.0\jackson-annotations-2.17.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.19.0\jackson-core-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.19.0\jackson-databind-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-xml\2.19.0\jackson-dataformat-xml-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\woodstox\woodstox-core\7.1.0\woodstox-core-7.1.0.jar;C:\Users\USUARIO\.m2\repository\com\github\virtuald\curvesapi\1.07\curvesapi-1.07.jar;C:\Users\USUARIO\.m2\repository\com\lowagie\itext\2.1.7.js10\itext-2.1.7.js10.jar;C:\Users\USUARIO\.m2\repository\com\miglayout\miglayout\3.7.4\miglayout-3.7.4.jar;C:\Users\USUARIO\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\SparseBitSet\1.2\SparseBitSet-1.2.jar;C:\Users\USUARIO\.m2\repository\commons-beanutils\commons-beanutils\1.9.4\commons-beanutils-1.9.4.jar;C:\Users\USUARIO\.m2\repository\commons-codec\commons-codec\1.18.0\commons-codec-1.18.0.jar;C:\Users\USUARIO\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\USUARIO\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\USUARIO\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\USUARIO\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\USUARIO\.m2\repository\io\github\mkpaz\atlantafx-base\2.0.0\atlantafx-base-2.0.0.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-commons\1.15.0\micrometer-commons-1.15.0.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-observation\1.15.0\micrometer-observation-1.15.0.jar;C:\Users\USUARIO\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\USUARIO\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\USUARIO\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\USUARIO\.m2\repository\jakarta\el\jakarta.el-api\4.0.0\jakarta.el-api-4.0.0.jar;C:\Users\USUARIO\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\USUARIO\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\USUARIO\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\USUARIO\.m2\repository\net\bytebuddy\byte-buddy\1.17.5\byte-buddy-1.17.5.jar;C:\Users\USUARIO\.m2\repository\net\sf\jasperreports\jasperreports\6.20.0\jasperreports-6.20.0.jar;C:\Users\USUARIO\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-collections4\4.2\commons-collections4-4.2.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-compress\1.21\commons-compress-1.21.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-math3\3.6.1\commons-math3-3.6.1.jar;C:\Users\USUARIO\.m2\repository\org\apache\groovy\groovy\4.0.6\groovy-4.0.6.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi\5.2.3\poi-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml\5.2.3\poi-ooxml-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml-lite\5.2.3\poi-ooxml-lite-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\xmlbeans\xmlbeans\5.1.1\xmlbeans-5.1.1.jar;C:\Users\USUARIO\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcprov-jdk15on\1.70\bcprov-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcutil-jdk15on\1.70\bcutil-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\codehaus\woodstox\stax2-api\4.2.2\stax2-api-4.2.2.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\jdt\ecj\3.21.0\ecj-3.21.0.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jakarta.el\4.0.2\jakarta.el-4.0.2.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-community-dialects\6.4.4.Final\hibernate-community-dialects-6.4.4.Final.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-core\6.6.15.Final\hibernate-core-6.6.15.Final.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.2.Final\hibernate-validator-7.0.2.Final.jar;C:\Users\USUARIO\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jcommon\1.0.23\jcommon-1.0.23.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jfreechart\1.0.19\jfreechart-1.0.19.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\bootstrapfx\bootstrapfx-core\0.2.4\bootstrapfx-core-0.2.4.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-core\12.3.1\ikonli-core-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-fontawesome5-pack\12.3.1\ikonli-fontawesome5-pack-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-javafx\12.3.1\ikonli-javafx-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aop\6.2.7\spring-aop-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aspects\6.2.7\spring-aspects-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-beans\6.2.7\spring-beans-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-context\6.2.7\spring-context-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-core\6.2.7\spring-core-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-expression\6.2.7\spring-expression-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jcl\6.2.7\spring-jcl-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jdbc\6.2.7\spring-jdbc-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-orm\6.2.7\spring-orm-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-tx\6.2.7\spring-tx-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot\3.5.0\spring-boot-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.5.0\spring-boot-autoconfigure-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter\3.5.0\spring-boot-starter-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.5.0\spring-boot-starter-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.5.0\spring-boot-starter-jdbc-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.5.0\spring-boot-starter-logging-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-commons\3.5.0\spring-data-commons-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-jpa\3.5.0\spring-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\xerial\sqlite-jdbc\3.46.0.0\sqlite-jdbc-3.46.0.0.jar;C:\Users\USUARIO\.m2\repository\org\yaml\snakeyaml\2.4\snakeyaml-2.4.jar;C:\Users\USUARIO\.m2\repository\win\zqxu\jrviewer-fx\0.1.1\jrviewer-fx-0.1.1.jar, LOGBACK_ROLLINGPOLICY_MAX_FILE_SIZE=10485760, java.vm.vendor=Oracle Corporation, LOG_PATH=logs/, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Bogota, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, javafx.version=21.0.1, os.name=Windows 11, java.vm.specification.version=23, APPLICATION_NAME=ProyectoRestaurant, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=MX, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk-23\bin, sun.java.command=pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.use_sql_comments=true, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@19968a9b, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\USUARIO, user.language=es, java.specification.vendor=Oracle Corporation, jdk.module.path=C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-fxml\21.0.1\javafx-fxml-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-fxml\21.0.1\javafx-fxml-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-swing\21.0.1\javafx-swing-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-swing\21.0.1\javafx-swing-21.0.1.jar, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-23, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7-58, user.name=USUARIO, stdout.encoding=Cp1252, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, FILE_LOG_PATTERN=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, LOG_FILE=logs/restaurant.log, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\USUARIO\AppData\Local\Temp\, java.version=23.0.2, LOGBACK_ROLLINGPOLICY_CLEAN_HISTORY_ON_START=false, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=13260, sun.os.patch.level=, CONSOLE_LOG_CHARSET=windows-1252, LOGBACK_ROLLINGPOLICY_MAX_HISTORY=30, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@7260a6b7, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-23\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;c:\Users\USUARIO\AppData\Local\Programs\cursor\resources\app\bin;C:\Users\USUARIO\AppData\Local\Programs\Python\Python313\Scripts\;C:\Users\USUARIO\AppData\Local\Programs\Python\Launcher\;C:\Users\USUARIO\AppData\Local\Microsoft\WindowsApps;C:\Users\USUARIO\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\USUARIO\AppData\Roaming\npm;C:\flutter\bin;C:\Users\USUARIO\AppData\Local\Programs\Python\Python313\;C:\ffpmg\bin;C:\Users\USUARIO\Downloads\apache-maven-3.9.9\bin;C:\Users\USUARIO\AppData\Local\GitHubDesktop\bin;C:\Users\USUARIO\AppData\Local\Microsoft\WinGet\Packages\Schniz.fnm_Microsoft.Winget.Source_8wekyb3d8bbwe;C:\Users\USUARIO\AppData\Local\Programs\cursor\resources\app\bin;., stderr.encoding=Cp1252, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=23.0.2+7-58, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), CONSOLE_LOG_PATTERN=%d{HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{36}) - %msg%n, java.class.version=67.0, LOGGED_APPLICATION_NAME=[ProyectoRestaurant] , LOGBACK_ROLLINGPOLICY_TOTAL_SIZE_CAP=104857600}
2025-06-08 21:48:17.538 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-06-08 21:48:17.543 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:48:17.544 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:48:17.544 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:48:17.544 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:48:17.544 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:48:17.544 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:48:17.545 [JavaFX-Launcher] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:48:17.546 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:48:17.547 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:48:17.547 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:48:17.547 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:48:17.547 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:48:17.547 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:48:17.548 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:48:17.548 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:48:17.592 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:48:17.592 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:48:17.596 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:48:17.596 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:48:17.598 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:48:17.599 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:48:17.604 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:48:17.604 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:48:17.608 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:48:17.608 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:48:17.612 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:48:17.612 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:48:17.616 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:48:17.616 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:48:17.620 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:48:17.620 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:48:17.623 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:48:17.623 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:48:17.626 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:48:17.671 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-06-08 21:48:17.671 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-06-08 21:48:17.672 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-06-08 21:48:17.673 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-06-08 21:48:17.675 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@240f8d41] under count; prior registration was null
2025-06-08 21:48:17.676 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@332ab299] under every; prior registration was null
2025-06-08 21:48:17.676 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3cdef2ad] under any; prior registration was null
2025-06-08 21:48:17.677 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-06-08 21:48:17.677 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-06-08 21:48:17.677 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-06-08 21:48:17.677 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-06-08 21:48:17.677 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-06-08 21:48:17.677 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-06-08 21:48:17.677 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-06-08 21:48:17.677 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-06-08 21:48:17.677 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-06-08 21:48:17.678 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-06-08 21:48:17.678 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-06-08 21:48:17.678 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-06-08 21:48:17.678 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-06-08 21:48:17.678 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-06-08 21:48:17.678 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-06-08 21:48:17.678 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-06-08 21:48:17.678 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-06-08 21:48:17.680 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2cedbcaa] under sinh; prior registration was null
2025-06-08 21:48:17.680 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@31047727] under cosh; prior registration was null
2025-06-08 21:48:17.681 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@689dc231] under tanh; prior registration was null
2025-06-08 21:48:17.681 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@c86341d] under pi; prior registration was null
2025-06-08 21:48:17.681 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4d4fc1cb] under log; prior registration was null
2025-06-08 21:48:17.681 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-06-08 21:48:17.681 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-06-08 21:48:17.681 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-06-08 21:48:17.681 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-06-08 21:48:17.681 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-06-08 21:48:17.682 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-06-08 21:48:17.682 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-06-08 21:48:17.682 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-06-08 21:48:17.682 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-06-08 21:48:17.682 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-06-08 21:48:17.682 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-06-08 21:48:17.682 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-06-08 21:48:17.683 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6a1502c3] under position; prior registration was null
2025-06-08 21:48:17.686 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@1289fd9b] under overlay; prior registration was null
2025-06-08 21:48:17.687 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@1dc339de] under trim; prior registration was null
2025-06-08 21:48:17.688 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@754b939] under cast; prior registration was null
2025-06-08 21:48:17.688 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58f4aa55] under collate; prior registration was null
2025-06-08 21:48:17.690 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@34a6b9a4] under extract; prior registration was null
2025-06-08 21:48:17.690 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-06-08 21:48:17.690 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-06-08 21:48:17.690 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7fc583dd] under ifnull; prior registration was null
2025-06-08 21:48:17.690 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-06-08 21:48:17.690 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-06-08 21:48:17.691 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@5e10be08] under pad; prior registration was null
2025-06-08 21:48:17.692 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@22c26ca5] under str; prior registration was null
2025-06-08 21:48:17.694 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2f2a1a0d] under format; prior registration was null
2025-06-08 21:48:17.699 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@75c71303] under timestampadd; prior registration was null
2025-06-08 21:48:17.700 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@649eab1f] under timestampdiff; prior registration was null
2025-06-08 21:48:17.700 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-06-08 21:48:17.700 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-06-08 21:48:17.701 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@65e09c94] under current_date; prior registration was null
2025-06-08 21:48:17.701 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4c974aec] under current_time; prior registration was null
2025-06-08 21:48:17.701 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@11591d64] under current_timestamp; prior registration was null
2025-06-08 21:48:17.701 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-06-08 21:48:17.701 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-06-08 21:48:17.701 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-06-08 21:48:17.701 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5d98e5e6] under local_date; prior registration was null
2025-06-08 21:48:17.701 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3cfdc6fd] under local_time; prior registration was null
2025-06-08 21:48:17.701 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4a4b3ba4] under local_datetime; prior registration was null
2025-06-08 21:48:17.701 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1320adb4] under offset_datetime; prior registration was null
2025-06-08 21:48:17.701 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-06-08 21:48:17.701 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-06-08 21:48:17.701 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-06-08 21:48:17.701 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-06-08 21:48:17.701 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@98dcde3] under instant; prior registration was null
2025-06-08 21:48:17.701 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-06-08 21:48:17.702 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@39cedb98] under sql; prior registration was null
2025-06-08 21:48:17.703 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b69b980] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-06-08 21:48:17.703 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@642987f] under left; prior registration was NamedSqmFunctionTemplate(left)
2025-06-08 21:48:17.703 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@733a71f] under right; prior registration was NamedSqmFunctionTemplate(right)
2025-06-08 21:48:17.703 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@48eebe7a] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-06-08 21:48:17.703 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(length)] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-06-08 21:48:17.703 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-06-08 21:48:17.703 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under least; prior registration was NamedSqmFunctionTemplate(least)
2025-06-08 21:48:17.703 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under greatest; prior registration was NamedSqmFunctionTemplate(greatest)
2025-06-08 21:48:17.703 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-06-08 21:48:17.703 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-06-08 21:48:17.705 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@1a26f567] under trunc; prior registration was null
2025-06-08 21:48:17.706 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-06-08 21:48:17.706 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4d4fc1cb
2025-06-08 21:48:17.706 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-06-08 21:48:17.706 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-06-08 21:48:17.706 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-06-08 21:48:17.706 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-06-08 21:48:17.706 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2025-06-08 21:48:17.706 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : chr -> char
2025-06-08 21:48:17.707 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6f890546] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-06-08 21:48:17.707 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1b4c2cc2] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2025-06-08 21:48:17.708 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1597c2e1] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2025-06-08 21:48:17.708 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(strftime)] under format; prior registration was org.hibernate.dialect.function.FormatFunction@2f2a1a0d
2025-06-08 21:48:17.708 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-06-08 21:48:17.708 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-06-08 21:48:17.709 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-06-08 21:48:17.709 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-06-08 21:48:17.709 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-06-08 21:48:17.709 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-06-08 21:48:17.710 [JavaFX-Launcher] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@2ab573da] under listagg; prior registration was null
2025-06-08 21:48:17.711 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg)
2025-06-08 21:48:17.712 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-06-08 21:48:17.712 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2025-06-08 21:48:17.712 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-06-08 21:48:17.712 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-06-08 21:48:17.712 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-06-08 21:48:17.712 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg)
2025-06-08 21:48:17.712 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type)
2025-06-08 21:48:17.712 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-06-08 21:48:17.712 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg)
2025-06-08 21:48:17.712 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-06-08 21:48:17.712 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-06-08 21:48:17.712 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-06-08 21:48:17.712 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-06-08 21:48:17.712 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2025-06-08 21:48:17.712 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-06-08 21:48:17.712 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-06-08 21:48:17.712 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-06-08 21:48:17.712 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date
2025-06-08 21:48:17.712 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time
2025-06-08 21:48:17.712 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp
2025-06-08 21:48:17.712 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date
2025-06-08 21:48:17.712 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant
2025-06-08 21:48:17.712 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time
2025-06-08 21:48:17.712 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp
2025-06-08 21:48:17.712 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-06-08 21:48:17.713 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-06-08 21:48:17.713 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-06-08 21:48:17.713 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2025-06-08 21:48:17.713 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-06-08 21:48:17.713 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-06-08 21:48:17.713 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value
2025-06-08 21:48:17.713 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg)
2025-06-08 21:48:17.713 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-06-08 21:48:17.713 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-06-08 21:48:17.713 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-06-08 21:48:17.713 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(pattern, string[, start])
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string)
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding])
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg)
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg)
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1)
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-06-08 21:48:17.714 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-06-08 21:48:17.715 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-06-08 21:48:17.715 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-06-08 21:48:17.715 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-06-08 21:48:17.715 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-06-08 21:48:17.715 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number()
2025-06-08 21:48:17.715 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding])
2025-06-08 21:48:17.715 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-06-08 21:48:17.715 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-06-08 21:48:17.715 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-06-08 21:48:17.715 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-06-08 21:48:17.715 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql
2025-06-08 21:48:17.715 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-06-08 21:48:17.715 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg)
2025-06-08 21:48:17.715 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-06-08 21:48:17.715 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-06-08 21:48:17.715 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg)
2025-06-08 21:48:17.715 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-06-08 21:48:17.715 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-06-08 21:48:17.715 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-06-08 21:48:17.715 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-06-08 21:48:17.715 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-06-08 21:48:17.715 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... )
2025-06-08 21:48:17.715 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... )
2025-06-08 21:48:17.715 [JavaFX-Launcher] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string)
2025-06-08 21:48:17.720 [JavaFX-Launcher] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048)
2025-06-08 21:48:17.791 [JavaFX-Launcher] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:48:17.793 [JavaFX-Launcher] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-06-08 21:48:17.867 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:17.873 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:17.876 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:17.876 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:17.876 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:48:17.876 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:48:18.076 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Factura]: private accessor [cliente]
2025-06-08 21:48:18.082 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.083 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.115 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:48:18.115 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:48:18.146 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Empleado]: private accessor [apellido]
2025-06-08 21:48:18.148 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:48:18.148 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:48:18.168 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Seccion]: private accessor [detalle]
2025-06-08 21:48:18.169 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:48:18.169 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:48:18.192 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Cliente]: private accessor [apellido]
2025-06-08 21:48:18.193 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.193 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.193 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.193 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.193 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:48:18.193 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:48:18.207 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Menu]: private accessor [codPedido]
2025-06-08 21:48:18.208 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.208 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.209 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.209 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.210 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.210 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.210 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.210 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.210 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:48:18.210 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:48:18.228 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido]: private accessor [cantidad]
2025-06-08 21:48:18.228 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.228 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.229 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.230 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.230 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.230 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.230 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.230 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:48:18.230 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:48:18.247 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Producto]: private accessor [categoria]
2025-06-08 21:48:18.247 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.248 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.248 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:48:18.249 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:48:18.260 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Categoria]: private accessor [estado]
2025-06-08 21:48:18.261 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:48:18.261 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:48:18.278 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Mesa]: private accessor [capacidad]
2025-06-08 21:48:18.279 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.279 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.279 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.279 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.279 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.279 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.279 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:48:18.279 [JavaFX-Launcher] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:48:18.293 [JavaFX-Launcher] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Pedido]: private accessor [cantPedidos]
2025-06-08 21:48:18.293 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.294 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.294 [JavaFX-Launcher] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:48:18.334 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks
2025-06-08 21:48:18.334 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente]
2025-06-08 21:48:18.339 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido]
2025-06-08 21:48:18.339 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Factura) `staticFetchableList` generator
2025-06-08 21:48:18.340 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Empleado) `staticFetchableList` generator
2025-06-08 21:48:18.340 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Seccion) `staticFetchableList` generator
2025-06-08 21:48:18.340 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Cliente) `staticFetchableList` generator
2025-06-08 21:48:18.340 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido]
2025-06-08 21:48:18.341 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto]
2025-06-08 21:48:18.341 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Menu) `staticFetchableList` generator
2025-06-08 21:48:18.341 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura]
2025-06-08 21:48:18.341 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido]
2025-06-08 21:48:18.341 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto]
2025-06-08 21:48:18.341 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.DetPedido) `staticFetchableList` generator
2025-06-08 21:48:18.341 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria]
2025-06-08 21:48:18.341 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion]
2025-06-08 21:48:18.341 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Producto) `staticFetchableList` generator
2025-06-08 21:48:18.341 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Categoria) `staticFetchableList` generator
2025-06-08 21:48:18.342 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Mesa) `staticFetchableList` generator
2025-06-08 21:48:18.342 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente]
2025-06-08 21:48:18.342 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado]
2025-06-08 21:48:18.342 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa]
2025-06-08 21:48:18.342 [JavaFX-Launcher] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Pedido) `staticFetchableList` generator
2025-06-08 21:48:18.430 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2025-06-08 21:48:18.433 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Factura)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura] 
2025-06-08 21:48:18.449 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@48bdf6fa] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente] 
2025-06-08 21:48:18.452 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:48:18.457 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@e94625e] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido] 
2025-06-08 21:48:18.457 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:48:18.457 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1454aa8b] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente] 
2025-06-08 21:48:18.457 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:48:18.457 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7554b2df] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado] 
2025-06-08 21:48:18.457 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:48:18.458 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@78ef280c] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa] 
2025-06-08 21:48:18.458 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:48:18.467 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.cantVisitas]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.email]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.nombre]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.telefono]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.codigo]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.fechaEmision]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.igv]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.rol]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.telefono]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.subtotal]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.total]

2025-06-08 21:48:18.471 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (f1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura) {
          primaryTableReference : factura as f1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente) {
              primaryTableReference : cliente as c1_0
            }
            left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido) {
              primaryTableReference : pedido as p1_0
              TableGroupJoins {
                left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente) {
                  primaryTableReference : cliente as c2_0
                }
                left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado) {
                  primaryTableReference : empleado as e1_0
                }
                left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa) {
                  primaryTableReference : mesa as m1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:48:18.484 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:48:18.484 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Factura */ select id_factura from factura where id_factura=?
2025-06-08 21:48:18.484 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Factura */insert into factura (id_cliente,codigo,estado,fecha_emision,igv,id_pedido,subtotal,total) values (?,?,?,?,?,?,?,?)
2025-06-08 21:48:18.484 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Factura */update factura set id_cliente=?,codigo=?,estado=?,fecha_emision=?,igv=?,id_pedido=?,subtotal=?,total=? where id_factura=?
2025-06-08 21:48:18.484 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Factura */delete from factura where id_factura=?
2025-06-08 21:48:18.485 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:48:18.485 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:48:18.486 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.rol]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.telefono]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.usuario]

2025-06-08 21:48:18.486 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:48:18.487 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:48:18.487 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Empleado */ select id_empleado from empleado where id_empleado=?
2025-06-08 21:48:18.487 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */insert into empleado (apellido,dni,estado,nombre,password,rol,telefono,usuario) values (?,?,?,?,?,?,?,?)
2025-06-08 21:48:18.487 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */update empleado set apellido=?,dni=?,estado=?,nombre=?,password=?,rol=?,telefono=?,usuario=? where id_empleado=?
2025-06-08 21:48:18.487 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */delete from empleado where id_empleado=?
2025-06-08 21:48:18.488 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:48:18.488 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Seccion)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] 
2025-06-08 21:48:18.488 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Seccion]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion.detalle]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion.estado]

2025-06-08 21:48:18.489 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Seccion) {
          primaryTableReference : seccion as s1_0
        }
      }
    }

2025-06-08 21:48:18.489 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:48:18.489 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Seccion */ select id_seccion from seccion where id_seccion=?
2025-06-08 21:48:18.489 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */insert into seccion (detalle,estado) values (?,?)
2025-06-08 21:48:18.489 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */update seccion set detalle=?,estado=? where id_seccion=?
2025-06-08 21:48:18.489 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */delete from seccion where id_seccion=?
2025-06-08 21:48:18.489 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:48:18.490 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Cliente)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] 
2025-06-08 21:48:18.490 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Cliente]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.cantVisitas]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.email]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.nombre]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.telefono]

2025-06-08 21:48:18.490 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Cliente) {
          primaryTableReference : cliente as c1_0
        }
      }
    }

2025-06-08 21:48:18.491 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:48:18.491 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Cliente */ select id_cliente from cliente where id_cliente=?
2025-06-08 21:48:18.491 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */insert into cliente (apellido,cant_visitas,dni,email,estado,nombre,telefono) values (?,?,?,?,?,?,?)
2025-06-08 21:48:18.491 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */update cliente set apellido=?,cant_visitas=?,dni=?,email=?,estado=?,nombre=?,telefono=? where id_cliente=?
2025-06-08 21:48:18.491 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */delete from cliente where id_cliente=?
2025-06-08 21:48:18.491 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:48:18.491 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Menu)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu] 
2025-06-08 21:48:18.492 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@55e39cd5] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido] 
2025-06-08 21:48:18.492 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:48:18.492 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@50929f1b] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente] 
2025-06-08 21:48:18.492 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:48:18.493 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@241fd994] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado] 
2025-06-08 21:48:18.493 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:48:18.494 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4dee70e7] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa] 
2025-06-08 21:48:18.494 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m2_0
2025-06-08 21:48:18.494 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4a258bb] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto] 
2025-06-08 21:48:18.495 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p2_0
2025-06-08 21:48:18.495 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@400c6573] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria] 
2025-06-08 21:48:18.495 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:48:18.496 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1a85c79f] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion] 
2025-06-08 21:48:18.496 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:48:18.497 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.codPedido]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.rol]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.telefono]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.total]
 |  \-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.descripcion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.precio]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion.detalle]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.stock]

2025-06-08 21:48:18.497 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu) {
          primaryTableReference : menu as m1_0
          TableGroupJoins {
            left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido) {
              primaryTableReference : pedido as p1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente) {
                  primaryTableReference : cliente as c1_0
                }
                left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado) {
                  primaryTableReference : empleado as e1_0
                }
                left  join LazyTableGroup (m2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa) {
                  primaryTableReference : mesa as m2_0
                }
              }
            }
            left  join LazyTableGroup (p2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto) {
              primaryTableReference : producto as p2_0
              TableGroupJoins {
                left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria) {
                  primaryTableReference : categoria as c2_0
                }
                left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion) {
                  primaryTableReference : seccion as s1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:48:18.498 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:48:18.498 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Menu */ select id_menu from menu where id_menu=?
2025-06-08 21:48:18.498 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Menu */insert into menu (cod_pedido,id_pedido,id_producto) values (?,?,?)
2025-06-08 21:48:18.498 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Menu */update menu set cod_pedido=?,id_pedido=?,id_producto=? where id_menu=?
2025-06-08 21:48:18.498 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Menu */delete from menu where id_menu=?
2025-06-08 21:48:18.498 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : dp1_0
2025-06-08 21:48:18.498 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.DetPedido)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] 
2025-06-08 21:48:18.498 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@32a316d1] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura] 
2025-06-08 21:48:18.499 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2025-06-08 21:48:18.499 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@11a7ca0b] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente] 
2025-06-08 21:48:18.500 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:48:18.501 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@252a4e9f] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido] 
2025-06-08 21:48:18.502 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:48:18.502 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1660d6bf] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente] 
2025-06-08 21:48:18.502 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:48:18.503 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3c5f5f3c] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado] 
2025-06-08 21:48:18.503 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:48:18.504 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@13873d2e] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa] 
2025-06-08 21:48:18.504 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:48:18.505 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@64aed777] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido] 
2025-06-08 21:48:18.506 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p2_0
2025-06-08 21:48:18.507 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4c56d18f] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente] 
2025-06-08 21:48:18.507 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c3_0
2025-06-08 21:48:18.507 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2ceb7fa0] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado] 
2025-06-08 21:48:18.508 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e2_0
2025-06-08 21:48:18.508 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@65306368] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa] 
2025-06-08 21:48:18.508 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m2_0
2025-06-08 21:48:18.509 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2fa1fec8] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto] 
2025-06-08 21:48:18.509 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p3_0
2025-06-08 21:48:18.509 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5581981a] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria] 
2025-06-08 21:48:18.509 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c4_0
2025-06-08 21:48:18.509 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2260fb75] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion] 
2025-06-08 21:48:18.509 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:48:18.510 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.cantidad]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.estado]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.telefono]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.codigo]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.fechaEmision]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.igv]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cantPedidos]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.apellido]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.cantVisitas]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.dni]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.email]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.estado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.nombre]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.telefono]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.apellido]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.dni]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.estado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.nombre]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.password]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.rol]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.telefono]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.usuario]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.fechaHora]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.capacidad]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.detalle]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.estado]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.numero]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.total]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.subtotal]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.igv]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.rol]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.telefono]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.precioUnitario]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.descripcion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.precio]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion.detalle]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.stock]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.subtotal]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.total]

2025-06-08 21:48:18.511 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (dp1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido) {
          primaryTableReference : detalle_pedido as dp1_0
          TableGroupJoins {
            left  join LazyTableGroup (f1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura) {
              primaryTableReference : factura as f1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente) {
                  primaryTableReference : cliente as c1_0
                }
                left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido) {
                  primaryTableReference : pedido as p1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente) {
                      primaryTableReference : cliente as c2_0
                    }
                    left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado) {
                      primaryTableReference : empleado as e1_0
                    }
                    left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa) {
                      primaryTableReference : mesa as m1_0
                    }
                  }
                }
              }
            }
             join LazyTableGroup (p2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido) {
              primaryTableReference : pedido as p2_0
              TableGroupJoins {
                left  join LazyTableGroup (c3 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente) {
                  primaryTableReference : cliente as c3_0
                }
                left  join LazyTableGroup (e2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado) {
                  primaryTableReference : empleado as e2_0
                }
                left  join LazyTableGroup (m2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa) {
                  primaryTableReference : mesa as m2_0
                }
              }
            }
             join LazyTableGroup (p3 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto) {
              primaryTableReference : producto as p3_0
              TableGroupJoins {
                left  join LazyTableGroup (c4 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria) {
                  primaryTableReference : categoria as c4_0
                }
                left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion) {
                  primaryTableReference : seccion as s1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:48:18.512 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:48:18.512 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */ select id_detalle_pedido from detalle_pedido where id_detalle_pedido=?
2025-06-08 21:48:18.512 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */insert into detalle_pedido (cantidad,estado,id_factura,igv,id_pedido,precio_unitario,id_producto,subtotal,total) values (?,?,?,?,?,?,?,?,?)
2025-06-08 21:48:18.512 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */update detalle_pedido set cantidad=?,estado=?,id_factura=?,igv=?,id_pedido=?,precio_unitario=?,id_producto=?,subtotal=?,total=? where id_detalle_pedido=?
2025-06-08 21:48:18.512 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */delete from detalle_pedido where id_detalle_pedido=?
2025-06-08 21:48:18.512 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:48:18.513 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Producto)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto] 
2025-06-08 21:48:18.513 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@645a0691] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria] 
2025-06-08 21:48:18.513 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:48:18.513 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3d421348] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion] 
2025-06-08 21:48:18.513 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:48:18.515 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.descripcion]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.precio]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion.detalle]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.stock]

2025-06-08 21:48:18.515 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto) {
          primaryTableReference : producto as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria) {
              primaryTableReference : categoria as c1_0
            }
            left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion) {
              primaryTableReference : seccion as s1_0
            }
          }
        }
      }
    }

2025-06-08 21:48:18.515 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:48:18.515 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Producto */ select id_producto from producto where id_producto=?
2025-06-08 21:48:18.515 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Producto */insert into producto (id_categoria,descripcion,estado,nombre,precio,id_seccion,stock) values (?,?,?,?,?,?,?)
2025-06-08 21:48:18.515 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Producto */update producto set id_categoria=?,descripcion=?,estado=?,nombre=?,precio=?,id_seccion=?,stock=? where id_producto=?
2025-06-08 21:48:18.515 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Producto */delete from producto where id_producto=?
2025-06-08 21:48:18.517 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:48:18.517 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Categoria)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] 
2025-06-08 21:48:18.517 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Categoria]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Categoria.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Categoria.nombre]

2025-06-08 21:48:18.517 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Categoria) {
          primaryTableReference : categoria as c1_0
        }
      }
    }

2025-06-08 21:48:18.517 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:48:18.517 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Categoria */ select id_categoria from categoria where id_categoria=?
2025-06-08 21:48:18.518 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */insert into categoria (estado,nombre) values (?,?)
2025-06-08 21:48:18.518 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */update categoria set estado=?,nombre=? where id_categoria=?
2025-06-08 21:48:18.518 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */delete from categoria where id_categoria=?
2025-06-08 21:48:18.518 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:48:18.518 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Mesa)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] 
2025-06-08 21:48:18.520 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Mesa]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.capacidad]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.detalle]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.numero]

2025-06-08 21:48:18.520 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Mesa) {
          primaryTableReference : mesa as m1_0
        }
      }
    }

2025-06-08 21:48:18.520 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:48:18.520 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Mesa */ select id_mesa from mesa where id_mesa=?
2025-06-08 21:48:18.520 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */insert into mesa (capacidad,detalle,estado,numero) values (?,?,?,?)
2025-06-08 21:48:18.520 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */update mesa set capacidad=?,detalle=?,estado=?,numero=? where id_mesa=?
2025-06-08 21:48:18.520 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */delete from mesa where id_mesa=?
2025-06-08 21:48:18.520 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:48:18.520 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Pedido)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] 
2025-06-08 21:48:18.521 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2ace6347] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente] 
2025-06-08 21:48:18.521 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:48:18.521 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@550b9004] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado] 
2025-06-08 21:48:18.521 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:48:18.521 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6ea74323] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa] 
2025-06-08 21:48:18.523 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:48:18.523 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cantPedidos]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.cantVisitas]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.email]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.nombre]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.telefono]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.password]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.rol]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.telefono]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.usuario]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.fechaHora]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.capacidad]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.detalle]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.numero]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.total]

2025-06-08 21:48:18.523 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido) {
          primaryTableReference : pedido as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente) {
              primaryTableReference : cliente as c1_0
            }
            left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado) {
              primaryTableReference : empleado as e1_0
            }
            left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa) {
              primaryTableReference : mesa as m1_0
            }
          }
        }
      }
    }

2025-06-08 21:48:18.524 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:48:18.524 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Pedido */ select id_pedido from pedido where id_pedido=?
2025-06-08 21:48:18.524 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */insert into pedido (cant_pedidos,id_cliente,id_empleado,estado,fecha_hora,id_mesa,total) values (?,?,?,?,?,?,?)
2025-06-08 21:48:18.524 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */update pedido set cant_pedidos=?,id_cliente=?,id_empleado=?,estado=?,fecha_hora=?,id_mesa=?,total=? where id_pedido=?
2025-06-08 21:48:18.524 [JavaFX-Launcher] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */delete from pedido where id_pedido=?
2025-06-08 21:48:18.558 [JavaFX-Launcher] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-08 21:48:18.558 [JavaFX-Launcher] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@352cab76] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2ed8dde6]
2025-06-08 21:48:18.560 [JavaFX-Launcher] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries
2025-06-08 21:48:18.560 [JavaFX-Launcher] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries
2025-06-08 21:48:18.579 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists categoria
2025-06-08 21:48:18.585 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists cliente
2025-06-08 21:48:18.585 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists detalle_pedido
2025-06-08 21:48:18.586 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists empleado
2025-06-08 21:48:18.587 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists factura
2025-06-08 21:48:18.588 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists menu
2025-06-08 21:48:18.588 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists mesa
2025-06-08 21:48:18.589 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists pedido
2025-06-08 21:48:18.590 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists producto
2025-06-08 21:48:18.590 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    drop table if exists seccion
2025-06-08 21:48:18.596 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table categoria (
        id_categoria integer,
        estado varchar(20),
        nombre varchar(100) not null,
        primary key (id_categoria)
    )
2025-06-08 21:48:18.603 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table cliente (
        cant_visitas integer,
        dni varchar(8) unique,
        id_cliente integer,
        telefono varchar(15),
        estado varchar(20),
        apellido varchar(50) not null,
        nombre varchar(50) not null,
        email varchar(100),
        primary key (id_cliente)
    )
2025-06-08 21:48:18.609 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table detalle_pedido (
        cantidad integer not null,
        igv float,
        precio_unitario float not null,
        subtotal float not null,
        total float,
        id_detalle_pedido integer,
        id_factura bigint,
        id_pedido bigint not null,
        id_producto bigint not null,
        estado varchar(20),
        primary key (id_detalle_pedido)
    )
2025-06-08 21:48:18.614 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table empleado (
        dni varchar(8) not null unique,
        id_empleado integer,
        telefono varchar(9),
        estado varchar(20),
        rol varchar(20) not null,
        usuario varchar(50) not null unique,
        apellido varchar(100) not null,
        nombre varchar(100) not null,
        password varchar(100) not null,
        primary key (id_empleado)
    )
2025-06-08 21:48:18.620 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table factura (
        igv float,
        subtotal float,
        total float,
        fecha_emision timestamp,
        id_cliente bigint,
        id_factura integer,
        id_pedido bigint unique,
        codigo varchar(20) unique,
        estado varchar(20),
        primary key (id_factura)
    )
2025-06-08 21:48:18.626 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table menu (
        id_menu integer,
        id_pedido bigint,
        id_producto bigint,
        cod_pedido varchar(50),
        primary key (id_menu)
    )
2025-06-08 21:48:18.631 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table mesa (
        capacidad integer not null,
        numero integer not null unique,
        id_mesa integer,
        estado varchar(20),
        detalle varchar(200),
        primary key (id_mesa)
    )
2025-06-08 21:48:18.637 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table pedido (
        cant_pedidos integer,
        total float,
        fecha_hora timestamp,
        id_cliente bigint,
        id_empleado bigint,
        id_mesa bigint,
        id_pedido integer,
        estado varchar(20),
        primary key (id_pedido)
    )
2025-06-08 21:48:18.642 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table producto (
        precio float not null,
        stock integer,
        id_categoria bigint,
        id_producto integer,
        id_seccion bigint,
        estado varchar(20),
        nombre varchar(100) not null,
        descripcion varchar(200),
        primary key (id_producto)
    )
2025-06-08 21:48:18.646 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    create table seccion (
        id_seccion integer,
        estado varchar(20),
        detalle varchar(200),
        primary key (id_seccion)
    )
2025-06-08 21:48:18.657 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@330cba7a
2025-06-08 21:48:18.657 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 2e6bffd4-9f44-4bbf-b599-e44c3342b014 (<unnamed>)
2025-06-08 21:48:18.657 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-06-08 21:48:18.657 [JavaFX-Launcher] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory
2025-06-08 21:48:18.658 [JavaFX-Launcher] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-08 21:48:19.033 [JavaFX-Launcher] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2025-06-08 21:48:19.447 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy106.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:147)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:38)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:48:19.558 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy106.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:38)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:48:19.599 [JavaFX-Launcher] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-08 21:48:19.604 [JavaFX-Launcher] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy106.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at pe.edu.upeu.proyecto_restaurant.ProyectoRestaurantApplication.init(ProyectoRestaurantApplication.java:38)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:817)
	at javafx.graphics@21.0.1/com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-08 21:48:19.880 [JavaFX-Launcher] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:48:19.885 [JavaFX-Launcher] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-06-08 21:48:19.886 [JavaFX-Launcher] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-06-08 21:48:19.889 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:48:19.889 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-06-08 21:48:19.889 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:48:19.889 [JavaFX-Launcher] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:48:19.890 [JavaFX-Launcher] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:48:19.890 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:48:19.890 [JavaFX-Launcher] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:48:19.892 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:48:19.893 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:48:19.894 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:48:19.894 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:48:19.894 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:48:19.894 [JavaFX-Launcher] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:48:20.240 [JavaFX-Launcher] INFO  o.s.boot.SpringApplication - Started application in 7.927 seconds (process running for 9.159)
2025-06-08 21:48:20.278 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-08 21:48:20.278 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - begin
2025-06-08 21:48:20.442 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:48:20.444 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3))] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:48:20.466 [JavaFX-Launcher] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3)]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).rol]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).telefono]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3).usuario]

2025-06-08 21:48:20.466 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3)) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:48:20.479 [JavaFX-Launcher] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:48:20.485 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id_empleado,
        e1_0.apellido,
        e1_0.dni,
        e1_0.estado,
        e1_0.nombre,
        e1_0.password,
        e1_0.rol,
        e1_0.telefono,
        e1_0.usuario 
    from
        empleado e1_0
2025-06-08 21:48:20.517 [JavaFX-Launcher] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3) -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(3))@1061093082 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:48:20.526 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - committing
2025-06-08 21:48:20.529 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-08 21:48:20.529 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - begin
2025-06-08 21:48:20.530 [JavaFX-Launcher] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-08 21:48:20.551 [JavaFX-Launcher] DEBUG o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-08 21:48:20.564 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    /* insert for
        pe.edu.upeu.proyecto_restaurant.modulo.Empleado */insert 
    into
        empleado (apellido, dni, estado, nombre, password, rol, telefono, usuario) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-06-08 21:48:20.595 [JavaFX-Launcher] DEBUG org.hibernate.SQL - 
    select
        last_insert_rowid()
2025-06-08 21:48:20.608 [JavaFX-Launcher] DEBUG org.hibernate.orm.results - Initializer list is empty
2025-06-08 21:48:20.612 [JavaFX-Launcher] DEBUG o.h.id.IdentifierGeneratorHelper - Extracted generated values [pe.edu.upeu.proyecto_restaurant.modulo.Empleado]: [Ljava.lang.Object;@5d2cda56
2025-06-08 21:48:20.618 [JavaFX-Launcher] DEBUG o.h.e.t.internal.TransactionImpl - committing
2025-06-08 21:48:20.619 [JavaFX-Launcher] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-08 21:48:20.620 [JavaFX-Launcher] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-08 21:48:20.625 [JavaFX-Launcher] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-06-08 21:48:20.625 [JavaFX-Launcher] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-06-08 21:48:20.626 [JavaFX-Launcher] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
2025-06-08 21:48:20.627 [JavaFX-Launcher] DEBUG o.h.internal.util.EntityPrinter - pe.edu.upeu.proyecto_restaurant.modulo.Empleado{estado=activo, password=admin, apellido=Sistema, usuario=admin, id=1, telefono=000000000, nombre=Administrador, dni=00000000, rol=admin}
2025-06-08 21:48:20.631 [JavaFX-Launcher] INFO  p.e.u.p.ProyectoRestaurantApplication - Usuario administrador creado con éxito
2025-06-08 21:48:28.989 [JavaFX Application Thread] DEBUG p.e.u.p.control.ControlLogin - Intentando autenticar usuario: hermes
2025-06-08 21:48:29.066 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:48:29.066 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2))] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:48:29.072 [JavaFX Application Thread] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7cf8f4f3
2025-06-08 21:48:29.073 [JavaFX Application Thread] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).usuario) 
2025-06-08 21:48:29.082 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2)]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).rol]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).telefono]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2).usuario]

2025-06-08 21:48:29.082 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2)) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:48:29.085 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-08 21:48:29.085 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id_empleado,
        e1_0.apellido,
        e1_0.dni,
        e1_0.estado,
        e1_0.nombre,
        e1_0.password,
        e1_0.rol,
        e1_0.telefono,
        e1_0.usuario 
    from
        empleado e1_0 
    where
        e1_0.usuario=?
2025-06-08 21:48:29.086 [JavaFX Application Thread] DEBUG org.hibernate.orm.results - Initializer list:
	  pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2) -> EntityJoinedFetchInitializer(pe.edu.upeu.proyecto_restaurant.modulo.Empleado(2))@784008950 (SingleTableEntityPersister(pe.edu.upeu.proyecto_restaurant.modulo.Empleado))

2025-06-08 21:48:29.088 [JavaFX Application Thread] WARN  p.e.u.p.control.ControlLogin - Error de autenticación: Credenciales inválidas para usuario: hermes
2025-06-08 21:48:32.060 [JavaFX Application Thread] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-08 21:48:32.061 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing
2025-06-08 21:48:32.061 [JavaFX Application Thread] DEBUG o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2025-06-08 21:48:32.062 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists categoria
2025-06-08 21:48:32.068 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists cliente
2025-06-08 21:48:32.075 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists detalle_pedido
2025-06-08 21:48:32.081 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists empleado
2025-06-08 21:48:32.088 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists factura
2025-06-08 21:48:32.096 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists menu
2025-06-08 21:48:32.104 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists mesa
2025-06-08 21:48:32.112 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists pedido
2025-06-08 21:48:32.119 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists producto
2025-06-08 21:48:32.132 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    drop table if exists seccion
2025-06-08 21:48:32.141 [JavaFX Application Thread] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3169641d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2ed8dde6]
2025-06-08 21:48:32.142 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2025-06-08 21:48:32.144 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2025-06-08 21:48:32.145 [JavaFX Application Thread] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-08 21:48:32.152 [JavaFX Application Thread] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-08 21:51:31.527 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:51:31.533 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:51:31.533 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:51:31.533 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:51:31.541 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:51:31.541 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:51:31.583 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:51:31.585 [main] INFO  p.e.u.p.ProyectoRestaurantApplicationTests - Starting ProyectoRestaurantApplicationTests using Java 23.0.2 with PID 7772 (started by USUARIO in C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant)
2025-06-08 21:51:31.591 [main] DEBUG p.e.u.p.ProyectoRestaurantApplicationTests - Running with Spring Boot v3.5.0, Spring v6.2.7
2025-06-08 21:51:31.591 [main] INFO  p.e.u.p.ProyectoRestaurantApplicationTests - No active profile set, falling back to 1 default profile: "default"
2025-06-08 21:51:31.812 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:51:31.831 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:51:31.835 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:51:31.835 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:51:31.837 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:51:31.837 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:51:33.494 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-08 21:51:33.688 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 162 ms. Found 10 JPA repository interfaces.
2025-06-08 21:51:34.603 [main] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@70dea4e
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/USUARIO/Documents/ProyectoRestaurantJava/ProyectoRestaurant/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		pe.edu.upeu.proyecto_restaurant.modulo.Categoria
		pe.edu.upeu.proyecto_restaurant.modulo.Cliente
		pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
		pe.edu.upeu.proyecto_restaurant.modulo.Empleado
		pe.edu.upeu.proyecto_restaurant.modulo.Factura
		pe.edu.upeu.proyecto_restaurant.modulo.Menu
		pe.edu.upeu.proyecto_restaurant.modulo.Mesa
		pe.edu.upeu.proyecto_restaurant.modulo.Pedido
		pe.edu.upeu.proyecto_restaurant.modulo.Producto
		pe.edu.upeu.proyecto_restaurant.modulo.Seccion]
	Mapping files names []
	Properties []
2025-06-08 21:51:34.630 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-06-08 21:51:34.646 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-06-08 21:51:34.762 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-08 21:51:34.767 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found
2025-06-08 21:51:34.798 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-06-08 21:51:34.803 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-06-08 21:51:34.803 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:51:34.803 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-06-08 21:51:34.803 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-06-08 21:51:34.803 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-06-08 21:51:34.803 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-06-08 21:51:34.803 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:51:34.803 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-06-08 21:51:34.803 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-06-08 21:51:34.803 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-06-08 21:51:34.811 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-06-08 21:51:34.820 [main] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-06-08 21:51:34.828 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-08 21:51:34.985 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@49580ca8
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@49580ca8
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@49580ca8
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@525647f3
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@525647f3
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@42fc4ac4
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@42fc4ac4
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@20a24edf
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@20a24edf
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@29962b2f
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@29962b2f
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@29962b2f
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@491f8831
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@491f8831
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@491f8831
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@691541bc
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@691541bc
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@5b733ef7
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@43a4a9e5
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@43a4a9e5
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@764fffa0
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@35145874
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@77524ca7
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@77524ca7
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@77524ca7
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@11df2829
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@11df2829
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@11df2829
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@18e4674d
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@18e4674d
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@18e4674d
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@f245bdd
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@f245bdd
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@f245bdd
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6af609ea
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6af609ea
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6af609ea
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@280fafd
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@280fafd
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@39e53bef
2025-06-08 21:51:34.994 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@39e53bef
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@14b275bd
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@14b275bd
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@14b275bd
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4ed18798
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4b03cbad
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4b03cbad
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5b29ab61
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5c313224
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5c313224
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5c313224
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1e1e837d
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4b957db0
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5d71b500
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@8840c98
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@8840c98
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@626b639e
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@626b639e
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@273fa9e
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@527a8665
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7ab2a07e
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@437c4b25
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5ec6fede
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@580902cd
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3757e8e2
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3757e8e2
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1653b84e
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1653b84e
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7f8a9454
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7f8a9454
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6f85ee02
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6f85ee02
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@679d0be8
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@679d0be8
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6c075e9d
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@47044f7d
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7b14c61
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7b14c61
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@8fcc534
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5e599100
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3b435211
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@361cd35c
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@361cd35c
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@58a765ce
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4a642e4b
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@6b162ecc
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6b162ecc
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@3b4086c1
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3b4086c1
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@58aa1d72
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@58aa1d72
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@58aa1d72
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@33d7765a
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@33d7765a
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@33d7765a
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@69ed5ea2
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5eed6dfb
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5600a5da
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5600a5da
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@551be9f6
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@551be9f6
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@551be9f6
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@269222ae
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@13250132
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@40d848f9
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@40d848f9
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@4a864d4d
2025-06-08 21:51:35.002 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4a864d4d
2025-06-08 21:51:35.010 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4a864d4d
2025-06-08 21:51:35.010 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7d3691e1
2025-06-08 21:51:35.010 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7d3691e1
2025-06-08 21:51:35.010 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@46a123e4
2025-06-08 21:51:35.010 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@46a123e4
2025-06-08 21:51:35.010 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@44bc2449
2025-06-08 21:51:35.010 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@44bc2449
2025-06-08 21:51:35.010 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3c28e5b6
2025-06-08 21:51:35.010 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3c28e5b6
2025-06-08 21:51:35.010 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7558c24b
2025-06-08 21:51:35.010 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7558c24b
2025-06-08 21:51:35.010 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3a296107
2025-06-08 21:51:35.010 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@1f129467
2025-06-08 21:51:35.010 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@646cd766
2025-06-08 21:51:35.010 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@57151b3a
2025-06-08 21:51:35.010 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@26457986
2025-06-08 21:51:35.018 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@1d289d3f
2025-06-08 21:51:35.018 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1d289d3f
2025-06-08 21:51:35.018 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6a1568d6
2025-06-08 21:51:35.018 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@11c88cca
2025-06-08 21:51:35.018 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1b37fbec
2025-06-08 21:51:35.018 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4a216eb4
2025-06-08 21:51:35.018 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@bb3ecfe
2025-06-08 21:51:35.018 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5ec88f9e
2025-06-08 21:51:35.018 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7a04f730
2025-06-08 21:51:35.018 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3b11620a
2025-06-08 21:51:35.018 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2fd1ad8a
2025-06-08 21:51:35.042 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@21f7e537] into BootstrapContext; was [null]
2025-06-08 21:51:35.042 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@21f7e537) [was null]
2025-06-08 21:51:35.042 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@240f350a] into BootstrapContext; was [null]
2025-06-08 21:51:35.042 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@706f6d26] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3af2f846]
2025-06-08 21:51:35.090 [main] DEBUG o.h.j.b.i.PersistenceUnitInfoDescriptor - Pushing class transformers for PU named 'default' on loading classloader jdk.internal.loader.ClassLoaders$AppClassLoader@70dea4e
2025-06-08 21:51:35.464 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-08 21:51:35.464 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@21f7e537]
2025-06-08 21:51:35.464 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@21f7e537]
2025-06-08 21:51:35.588 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-08 21:51:35.796 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@c732e1c
2025-06-08 21:51:35.799 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-08 21:51:35.807 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : SQLite
	version : 3.46.0
	  major : 3
	  minor : 46
2025-06-08 21:51:35.807 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : SQLite JDBC
	version : 3.46.0.0
	  major : 3
	  minor : 46
2025-06-08 21:51:35.807 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2
2025-06-08 21:51:35.835 [main] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.community.dialect.SQLiteDialect, version: 3.46
2025-06-08 21:51:35.840 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-06-08 21:51:35.840 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2025-06-08 21:51:35.866 [main] DEBUG org.hibernate.orm.jdbc.lob - HHH10010005: Disabling contextual LOB creation as createClob() method threw error : java.sql.SQLFeatureNotSupportedException
2025-06-08 21:51:35.873 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 3.46
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-08 21:51:35.891 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(PRIMITIVE_ARRAY_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-06-08 21:51:35.891 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STRING_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-08 21:51:35.897 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-06-08 21:51:35.897 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:51:35.897 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-06-08 21:51:35.905 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:51:35.905 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:51:35.905 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-08 21:51:35.905 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:51:35.905 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:51:35.905 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-08 21:51:35.908 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:51:35.908 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:51:35.908 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-08 21:51:35.910 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@52b32b70] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@18c820d2]
2025-06-08 21:51:35.992 [main] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-06-08 21:51:36.062 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:51:36.084 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Categoria
2025-06-08 21:51:36.100 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Categoria on table categoria
2025-06-08 21:51:36.120 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:51:36.173 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_categoria')
2025-06-08 21:51:36.181 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:51:36.182 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:51:36.195 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCategoria with lazy=false
2025-06-08 21:51:36.209 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:idCategoria]
2025-06-08 21:51:36.223 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCategoria
2025-06-08 21:51:36.229 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.id_categoria
2025-06-08 21:51:36.229 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCategoria
2025-06-08 21:51:36.237 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_categoria)]), idCategoria, identity, , ...)
2025-06-08 21:51:36.237 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:51:36.237 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:51:36.243 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:estado]
2025-06-08 21:51:36.243 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:51:36.243 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.estado
2025-06-08 21:51:36.243 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:51:36.245 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:51:36.245 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:51:36.245 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Categoria:nombre]
2025-06-08 21:51:36.247 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:51:36.247 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: categoria.nombre
2025-06-08 21:51:36.249 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:51:36.253 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:51:36.265 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:51:36.267 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Cliente
2025-06-08 21:51:36.267 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Cliente on table cliente
2025-06-08 21:51:36.267 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:51:36.272 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_cliente')
2025-06-08 21:51:36.272 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:51:36.272 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:51:36.272 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idCliente with lazy=false
2025-06-08 21:51:36.272 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:idCliente]
2025-06-08 21:51:36.272 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idCliente
2025-06-08 21:51:36.272 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.id_cliente
2025-06-08 21:51:36.274 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property idCliente
2025-06-08 21:51:36.274 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_cliente)]), idCliente, identity, , ...)
2025-06-08 21:51:36.274 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='apellido')
2025-06-08 21:51:36.274 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property apellido with lazy=false
2025-06-08 21:51:36.274 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:apellido]
2025-06-08 21:51:36.274 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for apellido
2025-06-08 21:51:36.276 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.apellido
2025-06-08 21:51:36.276 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property apellido
2025-06-08 21:51:36.276 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cant_visitas')
2025-06-08 21:51:36.276 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantVisitas with lazy=false
2025-06-08 21:51:36.276 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:cantVisitas]
2025-06-08 21:51:36.278 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantVisitas
2025-06-08 21:51:36.278 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.cant_visitas
2025-06-08 21:51:36.278 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantVisitas
2025-06-08 21:51:36.280 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='dni')
2025-06-08 21:51:36.280 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property dni with lazy=false
2025-06-08 21:51:36.280 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:dni]
2025-06-08 21:51:36.286 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for dni
2025-06-08 21:51:36.286 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.dni
2025-06-08 21:51:36.286 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property dni
2025-06-08 21:51:36.286 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
2025-06-08 21:51:36.286 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-06-08 21:51:36.286 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:email]
2025-06-08 21:51:36.286 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email
2025-06-08 21:51:36.286 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.email
2025-06-08 21:51:36.286 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property email
2025-06-08 21:51:36.288 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:51:36.288 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:51:36.288 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:estado]
2025-06-08 21:51:36.288 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:51:36.288 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.estado
2025-06-08 21:51:36.288 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:51:36.288 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:51:36.288 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:51:36.288 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:nombre]
2025-06-08 21:51:36.288 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:51:36.288 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.nombre
2025-06-08 21:51:36.288 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:51:36.288 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='telefono')
2025-06-08 21:51:36.288 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property telefono with lazy=false
2025-06-08 21:51:36.288 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Cliente:telefono]
2025-06-08 21:51:36.288 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for telefono
2025-06-08 21:51:36.288 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: cliente.telefono
2025-06-08 21:51:36.288 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property telefono
2025-06-08 21:51:36.288 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:51:36.288 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:51:36.293 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name DetPedido
2025-06-08 21:51:36.293 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.DetPedido on table detalle_pedido
2025-06-08 21:51:36.293 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:51:36.305 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_detalle_pedido')
2025-06-08 21:51:36.305 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:51:36.305 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:51:36.305 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idDetallePedido with lazy=false
2025-06-08 21:51:36.305 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:idDetallePedido]
2025-06-08 21:51:36.305 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idDetallePedido
2025-06-08 21:51:36.305 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.id_detalle_pedido
2025-06-08 21:51:36.305 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property idDetallePedido
2025-06-08 21:51:36.305 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_detalle_pedido)]), idDetallePedido, identity, , ...)
2025-06-08 21:51:36.305 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cantidad')
2025-06-08 21:51:36.305 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantidad with lazy=false
2025-06-08 21:51:36.305 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:cantidad]
2025-06-08 21:51:36.305 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantidad
2025-06-08 21:51:36.305 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.cantidad
2025-06-08 21:51:36.305 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantidad
2025-06-08 21:51:36.305 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:51:36.305 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:51:36.305 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:estado]
2025-06-08 21:51:36.305 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:51:36.305 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.estado
2025-06-08 21:51:36.305 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:51:36.309 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_factura',referencedColumn='id_factura')
2025-06-08 21:51:36.309 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:51:36.317 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property factura
2025-06-08 21:51:36.326 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='igv')
2025-06-08 21:51:36.326 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property igv with lazy=false
2025-06-08 21:51:36.326 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:igv]
2025-06-08 21:51:36.326 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for igv
2025-06-08 21:51:36.326 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.igv
2025-06-08 21:51:36.326 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property igv
2025-06-08 21:51:36.326 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:51:36.326 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:51:36.326 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:51:36.326 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio_unitario')
2025-06-08 21:51:36.329 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precioUnitario with lazy=false
2025-06-08 21:51:36.329 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:precioUnitario]
2025-06-08 21:51:36.329 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precioUnitario
2025-06-08 21:51:36.329 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.precio_unitario
2025-06-08 21:51:36.329 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property precioUnitario
2025-06-08 21:51:36.329 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_producto',referencedColumn='id_producto')
2025-06-08 21:51:36.329 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:51:36.329 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property producto
2025-06-08 21:51:36.329 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='subtotal')
2025-06-08 21:51:36.331 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property subtotal with lazy=false
2025-06-08 21:51:36.331 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:subtotal]
2025-06-08 21:51:36.331 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for subtotal
2025-06-08 21:51:36.331 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.subtotal
2025-06-08 21:51:36.331 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property subtotal
2025-06-08 21:51:36.333 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:51:36.333 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:51:36.333 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido:total]
2025-06-08 21:51:36.334 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:51:36.334 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: detalle_pedido.total
2025-06-08 21:51:36.334 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:51:36.334 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:51:36.334 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:51:36.334 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Empleado
2025-06-08 21:51:36.334 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Empleado on table empleado
2025-06-08 21:51:36.334 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:51:36.334 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_empleado')
2025-06-08 21:51:36.334 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:51:36.334 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:51:36.342 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-06-08 21:51:36.342 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:id]
2025-06-08 21:51:36.342 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id
2025-06-08 21:51:36.342 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.id_empleado
2025-06-08 21:51:36.342 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property id
2025-06-08 21:51:36.342 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_empleado)]), id, identity, , ...)
2025-06-08 21:51:36.343 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='apellido')
2025-06-08 21:51:36.343 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property apellido with lazy=false
2025-06-08 21:51:36.343 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:apellido]
2025-06-08 21:51:36.343 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for apellido
2025-06-08 21:51:36.343 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.apellido
2025-06-08 21:51:36.343 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property apellido
2025-06-08 21:51:36.343 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='dni')
2025-06-08 21:51:36.345 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property dni with lazy=false
2025-06-08 21:51:36.345 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:dni]
2025-06-08 21:51:36.345 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for dni
2025-06-08 21:51:36.345 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.dni
2025-06-08 21:51:36.345 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property dni
2025-06-08 21:51:36.345 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:51:36.345 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:51:36.345 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:estado]
2025-06-08 21:51:36.345 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:51:36.345 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.estado
2025-06-08 21:51:36.345 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:51:36.347 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:51:36.347 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:51:36.347 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:nombre]
2025-06-08 21:51:36.347 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:51:36.347 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.nombre
2025-06-08 21:51:36.347 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:51:36.347 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password')
2025-06-08 21:51:36.351 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-06-08 21:51:36.351 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:password]
2025-06-08 21:51:36.351 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password
2025-06-08 21:51:36.351 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.password
2025-06-08 21:51:36.351 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property password
2025-06-08 21:51:36.351 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='rol')
2025-06-08 21:51:36.351 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property rol with lazy=false
2025-06-08 21:51:36.351 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:rol]
2025-06-08 21:51:36.351 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for rol
2025-06-08 21:51:36.351 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.rol
2025-06-08 21:51:36.351 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property rol
2025-06-08 21:51:36.351 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='telefono')
2025-06-08 21:51:36.351 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property telefono with lazy=false
2025-06-08 21:51:36.351 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:telefono]
2025-06-08 21:51:36.351 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for telefono
2025-06-08 21:51:36.351 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.telefono
2025-06-08 21:51:36.351 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property telefono
2025-06-08 21:51:36.351 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='usuario')
2025-06-08 21:51:36.351 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property usuario with lazy=false
2025-06-08 21:51:36.351 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Empleado:usuario]
2025-06-08 21:51:36.351 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for usuario
2025-06-08 21:51:36.351 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: empleado.usuario
2025-06-08 21:51:36.351 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property usuario
2025-06-08 21:51:36.351 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:51:36.351 [main] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:51:36.351 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:51:36.351 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Factura
2025-06-08 21:51:36.351 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Factura on table factura
2025-06-08 21:51:36.359 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:51:36.359 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_factura')
2025-06-08 21:51:36.359 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:51:36.359 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:51:36.359 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idFactura with lazy=false
2025-06-08 21:51:36.359 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:idFactura]
2025-06-08 21:51:36.359 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idFactura
2025-06-08 21:51:36.359 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.id_factura
2025-06-08 21:51:36.359 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property idFactura
2025-06-08 21:51:36.359 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_factura)]), idFactura, identity, , ...)
2025-06-08 21:51:36.359 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_cliente',referencedColumn='id_cliente')
2025-06-08 21:51:36.359 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:51:36.366 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property cliente
2025-06-08 21:51:36.367 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='codigo')
2025-06-08 21:51:36.367 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codigo with lazy=false
2025-06-08 21:51:36.367 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:codigo]
2025-06-08 21:51:36.367 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codigo
2025-06-08 21:51:36.367 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.codigo
2025-06-08 21:51:36.367 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property codigo
2025-06-08 21:51:36.367 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:51:36.367 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:51:36.367 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:estado]
2025-06-08 21:51:36.367 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:51:36.367 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.estado
2025-06-08 21:51:36.367 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:51:36.369 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fecha_emision')
2025-06-08 21:51:36.369 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaEmision with lazy=false
2025-06-08 21:51:36.369 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:fechaEmision]
2025-06-08 21:51:36.369 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaEmision
2025-06-08 21:51:36.369 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.fecha_emision
2025-06-08 21:51:36.369 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaEmision
2025-06-08 21:51:36.369 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='igv')
2025-06-08 21:51:36.369 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property igv with lazy=false
2025-06-08 21:51:36.369 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:igv]
2025-06-08 21:51:36.369 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for igv
2025-06-08 21:51:36.369 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.igv
2025-06-08 21:51:36.369 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property igv
2025-06-08 21:51:36.371 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:51:36.371 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:51:36.371 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:51:36.371 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='subtotal')
2025-06-08 21:51:36.371 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property subtotal with lazy=false
2025-06-08 21:51:36.371 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:subtotal]
2025-06-08 21:51:36.371 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for subtotal
2025-06-08 21:51:36.373 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.subtotal
2025-06-08 21:51:36.373 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property subtotal
2025-06-08 21:51:36.373 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:51:36.373 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:51:36.373 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Factura:total]
2025-06-08 21:51:36.373 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:51:36.373 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: factura.total
2025-06-08 21:51:36.373 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:51:36.373 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:51:36.375 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:51:36.375 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Menu
2025-06-08 21:51:36.375 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Menu on table menu
2025-06-08 21:51:36.375 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:51:36.375 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_menu')
2025-06-08 21:51:36.375 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:51:36.375 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:51:36.375 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idMenu with lazy=false
2025-06-08 21:51:36.375 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Menu:idMenu]
2025-06-08 21:51:36.375 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idMenu
2025-06-08 21:51:36.375 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: menu.id_menu
2025-06-08 21:51:36.375 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property idMenu
2025-06-08 21:51:36.375 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_menu)]), idMenu, identity, , ...)
2025-06-08 21:51:36.375 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cod_pedido')
2025-06-08 21:51:36.375 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codPedido with lazy=false
2025-06-08 21:51:36.380 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Menu:codPedido]
2025-06-08 21:51:36.380 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codPedido
2025-06-08 21:51:36.380 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: menu.cod_pedido
2025-06-08 21:51:36.380 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property codPedido
2025-06-08 21:51:36.380 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_pedido',referencedColumn='id_pedido')
2025-06-08 21:51:36.380 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:51:36.380 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property pedido
2025-06-08 21:51:36.380 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_producto',referencedColumn='id_producto')
2025-06-08 21:51:36.383 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:51:36.383 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property producto
2025-06-08 21:51:36.383 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:51:36.383 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:51:36.383 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Mesa
2025-06-08 21:51:36.383 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Mesa on table mesa
2025-06-08 21:51:36.383 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:51:36.383 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_mesa')
2025-06-08 21:51:36.383 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:51:36.383 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:51:36.383 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idMesa with lazy=false
2025-06-08 21:51:36.383 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:idMesa]
2025-06-08 21:51:36.391 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idMesa
2025-06-08 21:51:36.391 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.id_mesa
2025-06-08 21:51:36.391 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property idMesa
2025-06-08 21:51:36.391 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_mesa)]), idMesa, identity, , ...)
2025-06-08 21:51:36.391 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='capacidad')
2025-06-08 21:51:36.391 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property capacidad with lazy=false
2025-06-08 21:51:36.391 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:capacidad]
2025-06-08 21:51:36.395 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for capacidad
2025-06-08 21:51:36.395 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.capacidad
2025-06-08 21:51:36.395 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property capacidad
2025-06-08 21:51:36.395 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='detalle')
2025-06-08 21:51:36.400 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property detalle with lazy=false
2025-06-08 21:51:36.400 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:detalle]
2025-06-08 21:51:36.400 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for detalle
2025-06-08 21:51:36.400 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.detalle
2025-06-08 21:51:36.400 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property detalle
2025-06-08 21:51:36.400 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:51:36.400 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:51:36.400 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:estado]
2025-06-08 21:51:36.400 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:51:36.400 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.estado
2025-06-08 21:51:36.400 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:51:36.405 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='numero')
2025-06-08 21:51:36.405 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property numero with lazy=false
2025-06-08 21:51:36.405 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Mesa:numero]
2025-06-08 21:51:36.405 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for numero
2025-06-08 21:51:36.407 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: mesa.numero
2025-06-08 21:51:36.407 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property numero
2025-06-08 21:51:36.408 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:51:36.410 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:51:36.410 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Pedido
2025-06-08 21:51:36.412 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Pedido on table pedido
2025-06-08 21:51:36.412 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:51:36.416 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_pedido')
2025-06-08 21:51:36.418 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:51:36.418 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:51:36.418 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idPedido with lazy=false
2025-06-08 21:51:36.420 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:idPedido]
2025-06-08 21:51:36.420 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idPedido
2025-06-08 21:51:36.420 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.id_pedido
2025-06-08 21:51:36.420 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property idPedido
2025-06-08 21:51:36.420 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_pedido)]), idPedido, identity, , ...)
2025-06-08 21:51:36.420 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='cant_pedidos')
2025-06-08 21:51:36.422 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property cantPedidos with lazy=false
2025-06-08 21:51:36.422 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:cantPedidos]
2025-06-08 21:51:36.422 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for cantPedidos
2025-06-08 21:51:36.422 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.cant_pedidos
2025-06-08 21:51:36.422 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property cantPedidos
2025-06-08 21:51:36.422 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_cliente',referencedColumn='id_cliente')
2025-06-08 21:51:36.424 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:51:36.424 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property cliente
2025-06-08 21:51:36.426 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_empleado',referencedColumn='id_empleado')
2025-06-08 21:51:36.426 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:51:36.426 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property empleado
2025-06-08 21:51:36.428 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:51:36.428 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:51:36.428 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:estado]
2025-06-08 21:51:36.428 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:51:36.428 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.estado
2025-06-08 21:51:36.428 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:51:36.430 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fecha_hora')
2025-06-08 21:51:36.430 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaHora with lazy=false
2025-06-08 21:51:36.430 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:fechaHora]
2025-06-08 21:51:36.430 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaHora
2025-06-08 21:51:36.430 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.fecha_hora
2025-06-08 21:51:36.432 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaHora
2025-06-08 21:51:36.432 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_mesa',referencedColumn='id_mesa')
2025-06-08 21:51:36.432 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:51:36.434 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property mesa
2025-06-08 21:51:36.434 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='total')
2025-06-08 21:51:36.434 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property total with lazy=false
2025-06-08 21:51:36.434 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Pedido:total]
2025-06-08 21:51:36.436 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for total
2025-06-08 21:51:36.436 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: pedido.total
2025-06-08 21:51:36.436 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property total
2025-06-08 21:51:36.438 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:51:36.438 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:51:36.440 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Producto
2025-06-08 21:51:36.440 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Producto on table producto
2025-06-08 21:51:36.440 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:51:36.446 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_producto')
2025-06-08 21:51:36.446 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:51:36.449 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:51:36.449 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idProducto with lazy=false
2025-06-08 21:51:36.449 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:idProducto]
2025-06-08 21:51:36.449 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idProducto
2025-06-08 21:51:36.449 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.id_producto
2025-06-08 21:51:36.449 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property idProducto
2025-06-08 21:51:36.449 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_producto)]), idProducto, identity, , ...)
2025-06-08 21:51:36.452 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_categoria',referencedColumn='id_categoria')
2025-06-08 21:51:36.452 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:51:36.452 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property categoria
2025-06-08 21:51:36.452 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='descripcion')
2025-06-08 21:51:36.452 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property descripcion with lazy=false
2025-06-08 21:51:36.455 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:descripcion]
2025-06-08 21:51:36.455 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for descripcion
2025-06-08 21:51:36.455 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.descripcion
2025-06-08 21:51:36.455 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property descripcion
2025-06-08 21:51:36.455 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:51:36.456 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:51:36.456 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:estado]
2025-06-08 21:51:36.456 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:51:36.456 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.estado
2025-06-08 21:51:36.456 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:51:36.456 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2025-06-08 21:51:36.456 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2025-06-08 21:51:36.458 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:nombre]
2025-06-08 21:51:36.458 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2025-06-08 21:51:36.458 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.nombre
2025-06-08 21:51:36.458 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2025-06-08 21:51:36.460 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio')
2025-06-08 21:51:36.460 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precio with lazy=false
2025-06-08 21:51:36.460 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:precio]
2025-06-08 21:51:36.460 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precio
2025-06-08 21:51:36.460 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.precio
2025-06-08 21:51:36.462 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property precio
2025-06-08 21:51:36.462 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id_seccion',referencedColumn='id_seccion')
2025-06-08 21:51:36.462 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-08 21:51:36.465 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property seccion
2025-06-08 21:51:36.467 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='stock')
2025-06-08 21:51:36.469 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property stock with lazy=false
2025-06-08 21:51:36.469 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Producto:stock]
2025-06-08 21:51:36.469 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for stock
2025-06-08 21:51:36.469 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: producto.stock
2025-06-08 21:51:36.469 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property stock
2025-06-08 21:51:36.471 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:51:36.473 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:51:36.473 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Seccion
2025-06-08 21:51:36.473 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity pe.edu.upeu.proyecto_restaurant.modulo.Seccion on table seccion
2025-06-08 21:51:36.473 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-08 21:51:36.475 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id_seccion')
2025-06-08 21:51:36.475 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:51:36.475 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:51:36.475 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idSeccion with lazy=false
2025-06-08 21:51:36.475 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:idSeccion]
2025-06-08 21:51:36.475 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idSeccion
2025-06-08 21:51:36.475 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.id_seccion
2025-06-08 21:51:36.475 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property idSeccion
2025-06-08 21:51:36.475 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id_seccion)]), idSeccion, identity, , ...)
2025-06-08 21:51:36.475 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='detalle')
2025-06-08 21:51:36.475 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property detalle with lazy=false
2025-06-08 21:51:36.475 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:detalle]
2025-06-08 21:51:36.475 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for detalle
2025-06-08 21:51:36.475 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.detalle
2025-06-08 21:51:36.475 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property detalle
2025-06-08 21:51:36.475 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='estado')
2025-06-08 21:51:36.475 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property estado with lazy=false
2025-06-08 21:51:36.475 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [pe.edu.upeu.proyecto_restaurant.modulo.Seccion:estado]
2025-06-08 21:51:36.475 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for estado
2025-06-08 21:51:36.475 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: seccion.estado
2025-06-08 21:51:36.475 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property estado
2025-06-08 21:51:36.475 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: pe.edu.upeu.proyecto_restaurant.modulo
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idCategoria
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idCliente
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apellido
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantVisitas
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for dni
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for telefono
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idDetallePedido
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantidad
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for igv
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precioUnitario
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for subtotal
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apellido
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for dni
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for rol
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for telefono
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for usuario
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idFactura
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codigo
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaEmision
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for igv
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for subtotal
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idMenu
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codPedido
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idMesa
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for capacidad
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for detalle
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for numero
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idPedido
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cantPedidos
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaHora
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for total
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idProducto
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for descripcion
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precio
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for stock
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idSeccion
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for detalle
2025-06-08 21:51:36.481 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for estado
2025-06-08 21:51:36.500 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_categoria] to be non-null as it is part of the primary key for table [categoria]
2025-06-08 21:51:36.500 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_cliente] to be non-null as it is part of the primary key for table [cliente]
2025-06-08 21:51:36.500 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_detalle_pedido] to be non-null as it is part of the primary key for table [detalle_pedido]
2025-06-08 21:51:36.500 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_empleado] to be non-null as it is part of the primary key for table [empleado]
2025-06-08 21:51:36.500 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_factura] to be non-null as it is part of the primary key for table [factura]
2025-06-08 21:51:36.500 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_menu] to be non-null as it is part of the primary key for table [menu]
2025-06-08 21:51:36.500 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_mesa] to be non-null as it is part of the primary key for table [mesa]
2025-06-08 21:51:36.500 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_pedido] to be non-null as it is part of the primary key for table [pedido]
2025-06-08 21:51:36.500 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_producto] to be non-null as it is part of the primary key for table [producto]
2025-06-08 21:51:36.500 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_seccion] to be non-null as it is part of the primary key for table [seccion]
2025-06-08 21:51:36.891 [main] DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2025-06-08 21:51:36.933 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:51:36.933 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=23, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@6a552721, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.community.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant\target\test-classes;C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant\target\classes;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter\3.5.0\spring-boot-starter-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot\3.5.0\spring-boot-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-context\6.2.7\spring-context-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-expression\6.2.7\spring-expression-6.2.7.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-observation\1.15.0\micrometer-observation-1.15.0.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-commons\1.15.0\micrometer-commons-1.15.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.5.0\spring-boot-autoconfigure-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.5.0\spring-boot-starter-logging-3.5.0.jar;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\USUARIO\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-core\6.2.7\spring-core-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jcl\6.2.7\spring-jcl-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\yaml\snakeyaml\2.4\snakeyaml-2.4.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.5.0\spring-boot-starter-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.5.0\spring-boot-starter-jdbc-3.5.0.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jdbc\6.2.7\spring-jdbc-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-core\6.6.15.Final\hibernate-core-6.6.15.Final.jar;C:\Users\USUARIO\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\USUARIO\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\USUARIO\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\USUARIO\.m2\repository\net\bytebuddy\byte-buddy\1.17.5\byte-buddy-1.17.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\USUARIO\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\USUARIO\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-jpa\3.5.0\spring-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-commons\3.5.0\spring-data-commons-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-orm\6.2.7\spring-orm-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aop\6.2.7\spring-aop-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-tx\6.2.7\spring-tx-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-beans\6.2.7\spring-beans-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aspects\6.2.7\spring-aspects-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.5.0\spring-boot-starter-test-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-test\3.5.0\spring-boot-test-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.5.0\spring-boot-test-autoconfigure-3.5.0.jar;C:\Users\USUARIO\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\USUARIO\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\USUARIO\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\USUARIO\.m2\repository\net\minidev\json-smart\2.5.2\json-smart-2.5.2.jar;C:\Users\USUARIO\.m2\repository\net\minidev\accessors-smart\2.5.2\accessors-smart-2.5.2.jar;C:\Users\USUARIO\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\USUARIO\.m2\repository\org\assertj\assertj-core\3.27.3\assertj-core-3.27.3.jar;C:\Users\USUARIO\.m2\repository\org\awaitility\awaitility\4.3.0\awaitility-4.3.0.jar;C:\Users\USUARIO\.m2\repository\org\hamcrest\hamcrest\3.0\hamcrest-3.0.jar;C:\Users\USUARIO\.m2\repository\org\junit\jupiter\junit-jupiter\5.12.2\junit-jupiter-5.12.2.jar;C:\Users\USUARIO\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.12.2\junit-jupiter-api-5.12.2.jar;C:\Users\USUARIO\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\USUARIO\.m2\repository\org\junit\platform\junit-platform-commons\1.12.2\junit-platform-commons-1.12.2.jar;C:\Users\USUARIO\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\USUARIO\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.12.2\junit-jupiter-params-5.12.2.jar;C:\Users\USUARIO\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.12.2\junit-jupiter-engine-5.12.2.jar;C:\Users\USUARIO\.m2\repository\org\junit\platform\junit-platform-engine\1.12.2\junit-platform-engine-1.12.2.jar;C:\Users\USUARIO\.m2\repository\org\mockito\mockito-core\5.17.0\mockito-core-5.17.0.jar;C:\Users\USUARIO\.m2\repository\net\bytebuddy\byte-buddy-agent\1.17.5\byte-buddy-agent-1.17.5.jar;C:\Users\USUARIO\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\USUARIO\.m2\repository\org\mockito\mockito-junit-jupiter\5.17.0\mockito-junit-jupiter-5.17.0.jar;C:\Users\USUARIO\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\USUARIO\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-test\6.2.7\spring-test-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\xmlunit\xmlunit-core\2.10.1\xmlunit-core-2.10.1.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-community-dialects\6.4.4.Final\hibernate-community-dialects-6.4.4.Final.jar;C:\Users\USUARIO\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\USUARIO\.m2\repository\org\xerial\sqlite-jdbc\3.46.0.0\sqlite-jdbc-3.46.0.0.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\USUARIO\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.0\jackson-annotations-2.17.0.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.2.Final\hibernate-validator-7.0.2.Final.jar;C:\Users\USUARIO\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-fxml\21.0.1\javafx-fxml-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-swing\21.0.1\javafx-swing-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-media\21.0.1\javafx-media-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\bootstrapfx\bootstrapfx-core\0.2.4\bootstrapfx-core-0.2.4.jar;C:\Users\USUARIO\.m2\repository\io\github\mkpaz\atlantafx-base\2.0.0\atlantafx-base-2.0.0.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-javafx\12.3.1\ikonli-javafx-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-core\12.3.1\ikonli-core-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-fontawesome5-pack\12.3.1\ikonli-fontawesome5-pack-12.3.1.jar;C:\Users\USUARIO\.m2\repository\net\sf\jasperreports\jasperreports\6.20.0\jasperreports-6.20.0.jar;C:\Users\USUARIO\.m2\repository\commons-beanutils\commons-beanutils\1.9.4\commons-beanutils-1.9.4.jar;C:\Users\USUARIO\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\USUARIO\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\USUARIO\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-collections4\4.2\commons-collections4-4.2.jar;C:\Users\USUARIO\.m2\repository\com\lowagie\itext\2.1.7.js10\itext-2.1.7.js10.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcprov-jdk15on\1.70\bcprov-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcutil-jdk15on\1.70\bcutil-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jcommon\1.0.23\jcommon-1.0.23.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jfreechart\1.0.19\jfreechart-1.0.19.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\jdt\ecj\3.21.0\ecj-3.21.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.19.0\jackson-core-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.19.0\jackson-databind-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-xml\2.19.0\jackson-dataformat-xml-2.19.0.jar;C:\Users\USUARIO\.m2\repository\org\codehaus\woodstox\stax2-api\4.2.2\stax2-api-4.2.2.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\woodstox\woodstox-core\7.1.0\woodstox-core-7.1.0.jar;C:\Users\USUARIO\.m2\repository\win\zqxu\jrviewer-fx\0.1.1\jrviewer-fx-0.1.1.jar;C:\Users\USUARIO\.m2\repository\jakarta\el\jakarta.el-api\4.0.0\jakarta.el-api-4.0.0.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jakarta.el\4.0.2\jakarta.el-4.0.2.jar;C:\Users\USUARIO\.m2\repository\com\miglayout\miglayout\3.7.4\miglayout-3.7.4.jar;C:\Users\USUARIO\.m2\repository\org\apache\groovy\groovy\4.0.6\groovy-4.0.6.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml\5.2.3\poi-ooxml-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi\5.2.3\poi-5.2.3.jar;C:\Users\USUARIO\.m2\repository\commons-codec\commons-codec\1.18.0\commons-codec-1.18.0.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-math3\3.6.1\commons-math3-3.6.1.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\SparseBitSet\1.2\SparseBitSet-1.2.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml-lite\5.2.3\poi-ooxml-lite-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\xmlbeans\xmlbeans\5.1.1\xmlbeans-5.1.1.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-compress\1.21\commons-compress-1.21.jar;C:\Users\USUARIO\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\USUARIO\.m2\repository\com\github\virtuald\curvesapi\1.07\curvesapi-1.07.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;, LOGBACK_ROLLINGPOLICY_MAX_FILE_SIZE=10485760, java.vm.vendor=Oracle Corporation, LOG_PATH=logs/, sun.arch.data.model=64, hibernate.order_inserts=true, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Bogota, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, os.name=Windows 11, java.vm.specification.version=23, hibernate.order_updates=true, hibernate.jdbc.batch_versioned_data=true, APPLICATION_NAME=ProyectoRestaurant, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.jdbc.batch_size=25, user.country=MX, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk-23\bin, sun.java.command=C:\Users\USUARIO\AppData\Local\Temp\surefire5675542472372103048\surefirebooter-20250608215128780_3.jar C:\Users\USUARIO\AppData\Local\Temp\surefire5675542472372103048 2025-06-08T21-51-28_567-jvmRun1 surefire-20250608215128780_1tmp surefire_0-20250608215128780_2tmp, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.use_sql_comments=true, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@3815a7d1, jdk.debug=release, surefire.test.class.path=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant\target\test-classes;C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant\target\classes;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter\3.5.0\spring-boot-starter-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot\3.5.0\spring-boot-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-context\6.2.7\spring-context-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-expression\6.2.7\spring-expression-6.2.7.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-observation\1.15.0\micrometer-observation-1.15.0.jar;C:\Users\USUARIO\.m2\repository\io\micrometer\micrometer-commons\1.15.0\micrometer-commons-1.15.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.5.0\spring-boot-autoconfigure-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.5.0\spring-boot-starter-logging-3.5.0.jar;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\USUARIO\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\USUARIO\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-core\6.2.7\spring-core-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jcl\6.2.7\spring-jcl-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\yaml\snakeyaml\2.4\snakeyaml-2.4.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.5.0\spring-boot-starter-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.5.0\spring-boot-starter-jdbc-3.5.0.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-jdbc\6.2.7\spring-jdbc-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-core\6.6.15.Final\hibernate-core-6.6.15.Final.jar;C:\Users\USUARIO\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\USUARIO\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\USUARIO\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\USUARIO\.m2\repository\net\bytebuddy\byte-buddy\1.17.5\byte-buddy-1.17.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\USUARIO\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\USUARIO\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\USUARIO\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-jpa\3.5.0\spring-data-jpa-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\data\spring-data-commons\3.5.0\spring-data-commons-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-orm\6.2.7\spring-orm-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aop\6.2.7\spring-aop-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-tx\6.2.7\spring-tx-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-beans\6.2.7\spring-beans-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-aspects\6.2.7\spring-aspects-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.5.0\spring-boot-starter-test-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-test\3.5.0\spring-boot-test-3.5.0.jar;C:\Users\USUARIO\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.5.0\spring-boot-test-autoconfigure-3.5.0.jar;C:\Users\USUARIO\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\USUARIO\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\USUARIO\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\USUARIO\.m2\repository\net\minidev\json-smart\2.5.2\json-smart-2.5.2.jar;C:\Users\USUARIO\.m2\repository\net\minidev\accessors-smart\2.5.2\accessors-smart-2.5.2.jar;C:\Users\USUARIO\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\USUARIO\.m2\repository\org\assertj\assertj-core\3.27.3\assertj-core-3.27.3.jar;C:\Users\USUARIO\.m2\repository\org\awaitility\awaitility\4.3.0\awaitility-4.3.0.jar;C:\Users\USUARIO\.m2\repository\org\hamcrest\hamcrest\3.0\hamcrest-3.0.jar;C:\Users\USUARIO\.m2\repository\org\junit\jupiter\junit-jupiter\5.12.2\junit-jupiter-5.12.2.jar;C:\Users\USUARIO\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.12.2\junit-jupiter-api-5.12.2.jar;C:\Users\USUARIO\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\USUARIO\.m2\repository\org\junit\platform\junit-platform-commons\1.12.2\junit-platform-commons-1.12.2.jar;C:\Users\USUARIO\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\USUARIO\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.12.2\junit-jupiter-params-5.12.2.jar;C:\Users\USUARIO\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.12.2\junit-jupiter-engine-5.12.2.jar;C:\Users\USUARIO\.m2\repository\org\junit\platform\junit-platform-engine\1.12.2\junit-platform-engine-1.12.2.jar;C:\Users\USUARIO\.m2\repository\org\mockito\mockito-core\5.17.0\mockito-core-5.17.0.jar;C:\Users\USUARIO\.m2\repository\net\bytebuddy\byte-buddy-agent\1.17.5\byte-buddy-agent-1.17.5.jar;C:\Users\USUARIO\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\USUARIO\.m2\repository\org\mockito\mockito-junit-jupiter\5.17.0\mockito-junit-jupiter-5.17.0.jar;C:\Users\USUARIO\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\USUARIO\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\USUARIO\.m2\repository\org\springframework\spring-test\6.2.7\spring-test-6.2.7.jar;C:\Users\USUARIO\.m2\repository\org\xmlunit\xmlunit-core\2.10.1\xmlunit-core-2.10.1.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\orm\hibernate-community-dialects\6.4.4.Final\hibernate-community-dialects-6.4.4.Final.jar;C:\Users\USUARIO\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\USUARIO\.m2\repository\org\xerial\sqlite-jdbc\3.46.0.0\sqlite-jdbc-3.46.0.0.jar;C:\Users\USUARIO\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\USUARIO\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.0\jackson-annotations-2.17.0.jar;C:\Users\USUARIO\.m2\repository\org\hibernate\validator\hibernate-validator\7.0.2.Final\hibernate-validator-7.0.2.Final.jar;C:\Users\USUARIO\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-fxml\21.0.1\javafx-fxml-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-swing\21.0.1\javafx-swing-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\openjfx\javafx-media\21.0.1\javafx-media-21.0.1-win.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\bootstrapfx\bootstrapfx-core\0.2.4\bootstrapfx-core-0.2.4.jar;C:\Users\USUARIO\.m2\repository\io\github\mkpaz\atlantafx-base\2.0.0\atlantafx-base-2.0.0.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-javafx\12.3.1\ikonli-javafx-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-core\12.3.1\ikonli-core-12.3.1.jar;C:\Users\USUARIO\.m2\repository\org\kordamp\ikonli\ikonli-fontawesome5-pack\12.3.1\ikonli-fontawesome5-pack-12.3.1.jar;C:\Users\USUARIO\.m2\repository\net\sf\jasperreports\jasperreports\6.20.0\jasperreports-6.20.0.jar;C:\Users\USUARIO\.m2\repository\commons-beanutils\commons-beanutils\1.9.4\commons-beanutils-1.9.4.jar;C:\Users\USUARIO\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\USUARIO\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\USUARIO\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-collections4\4.2\commons-collections4-4.2.jar;C:\Users\USUARIO\.m2\repository\com\lowagie\itext\2.1.7.js10\itext-2.1.7.js10.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcprov-jdk15on\1.70\bcprov-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\bouncycastle\bcutil-jdk15on\1.70\bcutil-jdk15on-1.70.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jcommon\1.0.23\jcommon-1.0.23.jar;C:\Users\USUARIO\.m2\repository\org\jfree\jfreechart\1.0.19\jfreechart-1.0.19.jar;C:\Users\USUARIO\.m2\repository\org\eclipse\jdt\ecj\3.21.0\ecj-3.21.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.19.0\jackson-core-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.19.0\jackson-databind-2.19.0.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-xml\2.19.0\jackson-dataformat-xml-2.19.0.jar;C:\Users\USUARIO\.m2\repository\org\codehaus\woodstox\stax2-api\4.2.2\stax2-api-4.2.2.jar;C:\Users\USUARIO\.m2\repository\com\fasterxml\woodstox\woodstox-core\7.1.0\woodstox-core-7.1.0.jar;C:\Users\USUARIO\.m2\repository\win\zqxu\jrviewer-fx\0.1.1\jrviewer-fx-0.1.1.jar;C:\Users\USUARIO\.m2\repository\jakarta\el\jakarta.el-api\4.0.0\jakarta.el-api-4.0.0.jar;C:\Users\USUARIO\.m2\repository\org\glassfish\jakarta.el\4.0.2\jakarta.el-4.0.2.jar;C:\Users\USUARIO\.m2\repository\com\miglayout\miglayout\3.7.4\miglayout-3.7.4.jar;C:\Users\USUARIO\.m2\repository\org\apache\groovy\groovy\4.0.6\groovy-4.0.6.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml\5.2.3\poi-ooxml-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi\5.2.3\poi-5.2.3.jar;C:\Users\USUARIO\.m2\repository\commons-codec\commons-codec\1.18.0\commons-codec-1.18.0.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-math3\3.6.1\commons-math3-3.6.1.jar;C:\Users\USUARIO\.m2\repository\com\zaxxer\SparseBitSet\1.2\SparseBitSet-1.2.jar;C:\Users\USUARIO\.m2\repository\org\apache\poi\poi-ooxml-lite\5.2.3\poi-ooxml-lite-5.2.3.jar;C:\Users\USUARIO\.m2\repository\org\apache\xmlbeans\xmlbeans\5.1.1\xmlbeans-5.1.1.jar;C:\Users\USUARIO\.m2\repository\org\apache\commons\commons-compress\1.21\commons-compress-1.21.jar;C:\Users\USUARIO\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\USUARIO\.m2\repository\com\github\virtuald\curvesapi\1.07\curvesapi-1.07.jar;C:\Users\USUARIO\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\USUARIO, user.language=es, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-23, file.separator=\, basedir=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, surefire.real.class.path=C:\Users\USUARIO\AppData\Local\Temp\surefire5675542472372103048\surefirebooter-20250608215128780_3.jar, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7-58, user.name=USUARIO, stdout.encoding=Cp1252, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, FILE_LOG_PATTERN=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, LOG_FILE=logs/restaurant.log, localRepository=C:\Users\USUARIO\.m2\repository, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\USUARIO\AppData\Local\Temp\, java.version=23.0.2, LOGBACK_ROLLINGPOLICY_CLEAN_HISTORY_ON_START=false, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\USUARIO\Documents\ProyectoRestaurantJava\ProyectoRestaurant, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=7772, sun.os.patch.level=, CONSOLE_LOG_CHARSET=windows-1252, LOGBACK_ROLLINGPOLICY_MAX_HISTORY=30, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@24dc150c, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-23\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;c:\Users\USUARIO\AppData\Local\Programs\cursor\resources\app\bin;C:\Users\USUARIO\AppData\Local\Programs\Python\Python313\Scripts\;C:\Users\USUARIO\AppData\Local\Programs\Python\Launcher\;C:\Users\USUARIO\AppData\Local\Microsoft\WindowsApps;C:\Users\USUARIO\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\USUARIO\AppData\Roaming\npm;C:\flutter\bin;C:\Users\USUARIO\AppData\Local\Programs\Python\Python313\;C:\ffpmg\bin;C:\Users\USUARIO\Downloads\apache-maven-3.9.9\bin;C:\Users\USUARIO\AppData\Local\GitHubDesktop\bin;C:\Users\USUARIO\AppData\Local\Microsoft\WinGet\Packages\Schniz.fnm_Microsoft.Winget.Source_8wekyb3d8bbwe;C:\Users\USUARIO\AppData\Local\Programs\cursor\resources\app\bin;., stderr.encoding=Cp1252, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=23.0.2+7-58, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), CONSOLE_LOG_PATTERN=%d{HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{36}) - %msg%n, java.class.version=67.0, LOGGED_APPLICATION_NAME=[ProyectoRestaurant] , LOGBACK_ROLLINGPOLICY_TOTAL_SIZE_CAP=104857600}
2025-06-08 21:51:36.941 [main] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-06-08 21:51:36.941 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:51:36.941 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:51:36.941 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:51:36.941 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:51:36.941 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:51:36.949 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:51:36.949 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:51:36.951 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:51:36.951 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:51:36.951 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:51:36.951 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:51:36.951 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:51:36.951 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:51:36.953 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:51:36.953 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:51:36.990 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:51:36.990 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:51:36.998 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:51:36.998 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:51:37.000 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:51:37.000 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:51:37.006 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:51:37.006 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:51:37.006 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:51:37.006 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:51:37.006 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:51:37.006 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:51:37.014 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:51:37.018 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:51:37.018 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:51:37.018 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:51:37.018 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:51:37.023 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:51:37.023 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:51:37.072 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-06-08 21:51:37.072 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-06-08 21:51:37.072 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-06-08 21:51:37.072 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-06-08 21:51:37.072 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@103478b8] under count; prior registration was null
2025-06-08 21:51:37.080 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2aa0feb2] under every; prior registration was null
2025-06-08 21:51:37.080 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@351c6341] under any; prior registration was null
2025-06-08 21:51:37.081 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-06-08 21:51:37.081 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-06-08 21:51:37.081 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-06-08 21:51:37.081 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-06-08 21:51:37.081 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-06-08 21:51:37.081 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-06-08 21:51:37.081 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-06-08 21:51:37.081 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-06-08 21:51:37.081 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-06-08 21:51:37.081 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-06-08 21:51:37.081 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-06-08 21:51:37.081 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-06-08 21:51:37.081 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-06-08 21:51:37.081 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-06-08 21:51:37.081 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-06-08 21:51:37.081 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-06-08 21:51:37.081 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-06-08 21:51:37.081 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3856d0cb] under sinh; prior registration was null
2025-06-08 21:51:37.087 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2125535d] under cosh; prior registration was null
2025-06-08 21:51:37.087 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@d190639] under tanh; prior registration was null
2025-06-08 21:51:37.087 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5f82209e] under pi; prior registration was null
2025-06-08 21:51:37.087 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@515c732d] under log; prior registration was null
2025-06-08 21:51:37.087 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-06-08 21:51:37.087 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-06-08 21:51:37.087 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-06-08 21:51:37.087 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-06-08 21:51:37.087 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-06-08 21:51:37.087 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-06-08 21:51:37.087 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-06-08 21:51:37.089 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-06-08 21:51:37.089 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-06-08 21:51:37.089 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-06-08 21:51:37.089 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-06-08 21:51:37.089 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-06-08 21:51:37.089 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@50ac1249] under position; prior registration was null
2025-06-08 21:51:37.091 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@36a1fd20] under overlay; prior registration was null
2025-06-08 21:51:37.093 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@505a8582] under trim; prior registration was null
2025-06-08 21:51:37.093 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@311a09b2] under cast; prior registration was null
2025-06-08 21:51:37.093 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4cacccbf] under collate; prior registration was null
2025-06-08 21:51:37.095 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@4dad2363] under extract; prior registration was null
2025-06-08 21:51:37.095 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-06-08 21:51:37.095 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-06-08 21:51:37.095 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@62cf86d6] under ifnull; prior registration was null
2025-06-08 21:51:37.095 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-06-08 21:51:37.095 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-06-08 21:51:37.095 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@5d5cd210] under pad; prior registration was null
2025-06-08 21:51:37.095 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@4e20a985] under str; prior registration was null
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@69d021c1] under format; prior registration was null
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@785ef70f] under timestampadd; prior registration was null
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@66682e8f] under timestampdiff; prior registration was null
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6ab1f85b] under current_date; prior registration was null
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@10e8c7a2] under current_time; prior registration was null
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5d8fd077] under current_timestamp; prior registration was null
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4544ab46] under local_date; prior registration was null
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2052f095] under local_time; prior registration was null
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@76d1f6ea] under local_datetime; prior registration was null
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@55fe9c2f] under offset_datetime; prior registration was null
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3580134d] under instant; prior registration was null
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@6fefc5ea] under sql; prior registration was null
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6159fb3c] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@68f79b7c] under left; prior registration was NamedSqmFunctionTemplate(left)
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37142579] under right; prior registration was NamedSqmFunctionTemplate(right)
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@264576e4] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(length)] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under least; prior registration was NamedSqmFunctionTemplate(least)
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under greatest; prior registration was NamedSqmFunctionTemplate(greatest)
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-06-08 21:51:37.097 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-06-08 21:51:37.105 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@41f23499] under trunc; prior registration was null
2025-06-08 21:51:37.105 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-06-08 21:51:37.105 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@515c732d
2025-06-08 21:51:37.105 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-06-08 21:51:37.105 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-06-08 21:51:37.105 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-06-08 21:51:37.105 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-06-08 21:51:37.105 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2025-06-08 21:51:37.105 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : chr -> char
2025-06-08 21:51:37.105 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@23933031] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-06-08 21:51:37.105 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4d0b7fd5] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2025-06-08 21:51:37.105 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1ce2029b] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2025-06-08 21:51:37.105 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(strftime)] under format; prior registration was org.hibernate.dialect.function.FormatFunction@69d021c1
2025-06-08 21:51:37.105 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-06-08 21:51:37.105 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-06-08 21:51:37.105 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-06-08 21:51:37.105 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-06-08 21:51:37.105 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-06-08 21:51:37.105 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-06-08 21:51:37.105 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@68360fb9] under listagg; prior registration was null
2025-06-08 21:51:37.105 [main] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg)
2025-06-08 21:51:37.105 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-06-08 21:51:37.105 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2025-06-08 21:51:37.105 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-06-08 21:51:37.105 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-06-08 21:51:37.105 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-06-08 21:51:37.105 [main] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg)
2025-06-08 21:51:37.112 [main] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type)
2025-06-08 21:51:37.112 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-06-08 21:51:37.112 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg)
2025-06-08 21:51:37.112 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-06-08 21:51:37.112 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-06-08 21:51:37.112 [main] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-06-08 21:51:37.112 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-06-08 21:51:37.112 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2025-06-08 21:51:37.112 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-06-08 21:51:37.112 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-06-08 21:51:37.112 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-06-08 21:51:37.112 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date
2025-06-08 21:51:37.112 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time
2025-06-08 21:51:37.112 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp
2025-06-08 21:51:37.112 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date
2025-06-08 21:51:37.112 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant
2025-06-08 21:51:37.112 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time
2025-06-08 21:51:37.112 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp
2025-06-08 21:51:37.112 [main] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-06-08 21:51:37.112 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-06-08 21:51:37.113 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-06-08 21:51:37.113 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2025-06-08 21:51:37.113 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-06-08 21:51:37.113 [main] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-06-08 21:51:37.113 [main] DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value
2025-06-08 21:51:37.113 [main] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg)
2025-06-08 21:51:37.113 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-06-08 21:51:37.113 [main] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-06-08 21:51:37.113 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-06-08 21:51:37.113 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant
2025-06-08 21:51:37.113 [main] DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-06-08 21:51:37.113 [main] DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(pattern, string[, start])
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string)
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding])
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg)
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg)
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1)
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number()
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding])
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg)
2025-06-08 21:51:37.114 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-06-08 21:51:37.117 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-06-08 21:51:37.117 [main] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg)
2025-06-08 21:51:37.117 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-06-08 21:51:37.117 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-06-08 21:51:37.117 [main] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-06-08 21:51:37.117 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-06-08 21:51:37.117 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-06-08 21:51:37.117 [main] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... )
2025-06-08 21:51:37.117 [main] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... )
2025-06-08 21:51:37.117 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string)
2025-06-08 21:51:37.122 [main] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048)
2025-06-08 21:51:37.211 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-08 21:51:37.213 [main] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-06-08 21:51:37.287 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.295 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.295 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.295 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.295 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Factura] is safe
2025-06-08 21:51:37.295 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:51:37.539 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Factura]: private accessor [cliente]
2025-06-08 21:51:37.548 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.548 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Factura#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.581 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] is safe
2025-06-08 21:51:37.581 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:51:37.613 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Empleado]: private accessor [apellido]
2025-06-08 21:51:37.613 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] is safe
2025-06-08 21:51:37.613 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:51:37.638 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Seccion]: private accessor [detalle]
2025-06-08 21:51:37.638 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] is safe
2025-06-08 21:51:37.638 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:51:37.654 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Cliente]: private accessor [apellido]
2025-06-08 21:51:37.662 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.662 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.662 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.662 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.662 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Menu] is safe
2025-06-08 21:51:37.662 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:51:37.670 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Menu]: private accessor [codPedido]
2025-06-08 21:51:37.670 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.670 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Menu#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.670 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.670 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.670 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.670 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.670 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.670 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.670 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] is safe
2025-06-08 21:51:37.670 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:51:37.693 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido]: private accessor [cantidad]
2025-06-08 21:51:37.693 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#factura` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.693 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#pedido` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.693 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.DetPedido#producto` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.695 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.695 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.695 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.695 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.695 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Producto] is safe
2025-06-08 21:51:37.695 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:51:37.713 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Producto]: private accessor [categoria]
2025-06-08 21:51:37.713 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#categoria` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.713 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Producto#seccion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.713 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] is safe
2025-06-08 21:51:37.713 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:51:37.723 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Categoria]: private accessor [estado]
2025-06-08 21:51:37.728 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] is safe
2025-06-08 21:51:37.728 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:51:37.736 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Mesa]: private accessor [capacidad]
2025-06-08 21:51:37.736 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.736 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.736 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.736 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.736 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.736 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.736 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] is safe
2025-06-08 21:51:37.736 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:51:37.753 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [pe.edu.upeu.proyecto_restaurant.modulo.Pedido]: private accessor [cantPedidos]
2025-06-08 21:51:37.753 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#cliente` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.753 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#empleado` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.753 [main] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `pe.edu.upeu.proyecto_restaurant.modulo.Pedido#mesa` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-08 21:51:37.786 [main] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks
2025-06-08 21:51:37.786 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente]
2025-06-08 21:51:37.790 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido]
2025-06-08 21:51:37.790 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Factura) `staticFetchableList` generator
2025-06-08 21:51:37.792 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Empleado) `staticFetchableList` generator
2025-06-08 21:51:37.792 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Seccion) `staticFetchableList` generator
2025-06-08 21:51:37.792 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Cliente) `staticFetchableList` generator
2025-06-08 21:51:37.792 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido]
2025-06-08 21:51:37.792 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto]
2025-06-08 21:51:37.792 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Menu) `staticFetchableList` generator
2025-06-08 21:51:37.792 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura]
2025-06-08 21:51:37.792 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido]
2025-06-08 21:51:37.792 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto]
2025-06-08 21:51:37.792 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.DetPedido) `staticFetchableList` generator
2025-06-08 21:51:37.792 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria]
2025-06-08 21:51:37.792 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion]
2025-06-08 21:51:37.792 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Producto) `staticFetchableList` generator
2025-06-08 21:51:37.792 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Categoria) `staticFetchableList` generator
2025-06-08 21:51:37.792 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Mesa) `staticFetchableList` generator
2025-06-08 21:51:37.792 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente]
2025-06-08 21:51:37.792 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado]
2025-06-08 21:51:37.792 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa]
2025-06-08 21:51:37.792 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(pe.edu.upeu.proyecto_restaurant.modulo.Pedido) `staticFetchableList` generator
2025-06-08 21:51:37.909 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2025-06-08 21:51:37.911 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Factura)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura] 
2025-06-08 21:51:37.927 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@445f6f73] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente] 
2025-06-08 21:51:37.927 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:51:37.931 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@15c3585] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido] 
2025-06-08 21:51:37.931 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:51:37.931 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5b86f4cb] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente] 
2025-06-08 21:51:37.931 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:51:37.931 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@468646ea] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado] 
2025-06-08 21:51:37.937 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:51:37.937 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4056cdb2] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa] 
2025-06-08 21:51:37.937 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:51:37.940 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.cantVisitas]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.email]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.nombre]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente.telefono]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.codigo]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.fechaEmision]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.igv]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.rol]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.telefono]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.subtotal]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Factura.total]

2025-06-08 21:51:37.940 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (f1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura) {
          primaryTableReference : factura as f1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.cliente) {
              primaryTableReference : cliente as c1_0
            }
            left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido) {
              primaryTableReference : pedido as p1_0
              TableGroupJoins {
                left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.cliente) {
                  primaryTableReference : cliente as c2_0
                }
                left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.empleado) {
                  primaryTableReference : empleado as e1_0
                }
                left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Factura.pedido.mesa) {
                  primaryTableReference : mesa as m1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:51:37.956 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Factura
2025-06-08 21:51:37.956 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Factura */ select id_factura from factura where id_factura=?
2025-06-08 21:51:37.956 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Factura */insert into factura (id_cliente,codigo,estado,fecha_emision,igv,id_pedido,subtotal,total) values (?,?,?,?,?,?,?,?)
2025-06-08 21:51:37.956 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Factura */update factura set id_cliente=?,codigo=?,estado=?,fecha_emision=?,igv=?,id_pedido=?,subtotal=?,total=? where id_factura=?
2025-06-08 21:51:37.956 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Factura */delete from factura where id_factura=?
2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Empleado)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Empleado] 
2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Empleado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.password]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.rol]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.telefono]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Empleado.usuario]

2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Empleado) {
          primaryTableReference : empleado as e1_0
        }
      }
    }

2025-06-08 21:51:37.956 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Empleado
2025-06-08 21:51:37.956 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Empleado */ select id_empleado from empleado where id_empleado=?
2025-06-08 21:51:37.956 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */insert into empleado (apellido,dni,estado,nombre,password,rol,telefono,usuario) values (?,?,?,?,?,?,?,?)
2025-06-08 21:51:37.956 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */update empleado set apellido=?,dni=?,estado=?,nombre=?,password=?,rol=?,telefono=?,usuario=? where id_empleado=?
2025-06-08 21:51:37.956 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Empleado */delete from empleado where id_empleado=?
2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Seccion)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Seccion] 
2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Seccion]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion.detalle]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Seccion.estado]

2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Seccion) {
          primaryTableReference : seccion as s1_0
        }
      }
    }

2025-06-08 21:51:37.956 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Seccion
2025-06-08 21:51:37.956 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Seccion */ select id_seccion from seccion where id_seccion=?
2025-06-08 21:51:37.956 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */insert into seccion (detalle,estado) values (?,?)
2025-06-08 21:51:37.956 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */update seccion set detalle=?,estado=? where id_seccion=?
2025-06-08 21:51:37.956 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Seccion */delete from seccion where id_seccion=?
2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Cliente)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Cliente] 
2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Cliente]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.apellido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.cantVisitas]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.dni]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.email]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.nombre]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Cliente.telefono]

2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Cliente) {
          primaryTableReference : cliente as c1_0
        }
      }
    }

2025-06-08 21:51:37.956 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Cliente
2025-06-08 21:51:37.956 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Cliente */ select id_cliente from cliente where id_cliente=?
2025-06-08 21:51:37.956 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */insert into cliente (apellido,cant_visitas,dni,email,estado,nombre,telefono) values (?,?,?,?,?,?,?)
2025-06-08 21:51:37.956 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */update cliente set apellido=?,cant_visitas=?,dni=?,email=?,estado=?,nombre=?,telefono=? where id_cliente=?
2025-06-08 21:51:37.956 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Cliente */delete from cliente where id_cliente=?
2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Menu)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu] 
2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@fa689db] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido] 
2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@75a6bd06] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente] 
2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6b170692] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado] 
2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4d4bac56] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa] 
2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m2_0
2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@76980c75] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto] 
2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p2_0
2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3696d12d] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria] 
2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@656672fb] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion] 
2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.codPedido]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.rol]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.telefono]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.total]
 |  \-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.descripcion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.precio]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion.detalle]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.stock]

2025-06-08 21:51:37.956 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu) {
          primaryTableReference : menu as m1_0
          TableGroupJoins {
            left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido) {
              primaryTableReference : pedido as p1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.cliente) {
                  primaryTableReference : cliente as c1_0
                }
                left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.empleado) {
                  primaryTableReference : empleado as e1_0
                }
                left  join LazyTableGroup (m2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.pedido.mesa) {
                  primaryTableReference : mesa as m2_0
                }
              }
            }
            left  join LazyTableGroup (p2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto) {
              primaryTableReference : producto as p2_0
              TableGroupJoins {
                left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.categoria) {
                  primaryTableReference : categoria as c2_0
                }
                left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Menu.producto.seccion) {
                  primaryTableReference : seccion as s1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:51:37.956 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Menu
2025-06-08 21:51:37.964 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Menu */ select id_menu from menu where id_menu=?
2025-06-08 21:51:37.964 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Menu */insert into menu (cod_pedido,id_pedido,id_producto) values (?,?,?)
2025-06-08 21:51:37.964 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Menu */update menu set cod_pedido=?,id_pedido=?,id_producto=? where id_menu=?
2025-06-08 21:51:37.964 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Menu */delete from menu where id_menu=?
2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : dp1_0
2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.DetPedido)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido] 
2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@43120a77] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura] 
2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@430db481] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente] 
2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@15aaf7b1] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido] 
2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1a22c1ba] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente] 
2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c2_0
2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4930213b] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado] 
2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@67372d20] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa] 
2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@25e24908] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido] 
2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p2_0
2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@14d513ca] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente] 
2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c3_0
2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@be9cc86] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado] 
2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e2_0
2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@68af8288] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa] 
2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m2_0
2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@8dc3019] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto] 
2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p3_0
2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@34ab398b] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria] 
2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c4_0
2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@71634e64] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion] 
2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.cantidad]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.estado]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente.telefono]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.codigo]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.fechaEmision]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.igv]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cantPedidos]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.apellido]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.cantVisitas]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.dni]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.email]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.estado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.nombre]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente.telefono]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.apellido]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.dni]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.estado]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.nombre]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.password]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.rol]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.telefono]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado.usuario]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.fechaHora]
 |  |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.capacidad]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.detalle]
 |  |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.estado]
 |  |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa.numero]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.total]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.subtotal]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.igv]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cantPedidos]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.cantVisitas]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.email]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.nombre]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente.telefono]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.apellido]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.dni]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.estado]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.nombre]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.password]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.rol]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.telefono]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado.usuario]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.fechaHora]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.capacidad]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.detalle]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa.numero]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.total]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.precioUnitario]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria.estado]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.descripcion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.precio]
 |  |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion]
 |  |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion.detalle]
 |  |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.stock]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.subtotal]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.total]

2025-06-08 21:51:37.964 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (dp1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido) {
          primaryTableReference : detalle_pedido as dp1_0
          TableGroupJoins {
            left  join LazyTableGroup (f1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura) {
              primaryTableReference : factura as f1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.cliente) {
                  primaryTableReference : cliente as c1_0
                }
                left  join LazyTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido) {
                  primaryTableReference : pedido as p1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (c2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.cliente) {
                      primaryTableReference : cliente as c2_0
                    }
                    left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.empleado) {
                      primaryTableReference : empleado as e1_0
                    }
                    left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.factura.pedido.mesa) {
                      primaryTableReference : mesa as m1_0
                    }
                  }
                }
              }
            }
             join LazyTableGroup (p2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido) {
              primaryTableReference : pedido as p2_0
              TableGroupJoins {
                left  join LazyTableGroup (c3 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.cliente) {
                  primaryTableReference : cliente as c3_0
                }
                left  join LazyTableGroup (e2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.empleado) {
                  primaryTableReference : empleado as e2_0
                }
                left  join LazyTableGroup (m2 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.pedido.mesa) {
                  primaryTableReference : mesa as m2_0
                }
              }
            }
             join LazyTableGroup (p3 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto) {
              primaryTableReference : producto as p3_0
              TableGroupJoins {
                left  join LazyTableGroup (c4 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.categoria) {
                  primaryTableReference : categoria as c4_0
                }
                left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.DetPedido.producto.seccion) {
                  primaryTableReference : seccion as s1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-08 21:51:37.972 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.DetPedido
2025-06-08 21:51:37.972 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */ select id_detalle_pedido from detalle_pedido where id_detalle_pedido=?
2025-06-08 21:51:37.972 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */insert into detalle_pedido (cantidad,estado,id_factura,igv,id_pedido,precio_unitario,id_producto,subtotal,total) values (?,?,?,?,?,?,?,?,?)
2025-06-08 21:51:37.972 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */update detalle_pedido set cantidad=?,estado=?,id_factura=?,igv=?,id_pedido=?,precio_unitario=?,id_producto=?,subtotal=?,total=? where id_detalle_pedido=?
2025-06-08 21:51:37.972 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.DetPedido */delete from detalle_pedido where id_detalle_pedido=?
2025-06-08 21:51:37.972 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:51:37.972 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Producto)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto] 
2025-06-08 21:51:37.972 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@c79915a] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria] 
2025-06-08 21:51:37.972 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:51:37.972 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6173863f] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion] 
2025-06-08 21:51:37.972 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-08 21:51:37.972 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.descripcion]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.nombre]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.precio]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion.detalle]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Producto.stock]

2025-06-08 21:51:37.972 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto) {
          primaryTableReference : producto as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto.categoria) {
              primaryTableReference : categoria as c1_0
            }
            left  join LazyTableGroup (s1 : pe.edu.upeu.proyecto_restaurant.modulo.Producto.seccion) {
              primaryTableReference : seccion as s1_0
            }
          }
        }
      }
    }

2025-06-08 21:51:37.972 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Producto
2025-06-08 21:51:37.972 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Producto */ select id_producto from producto where id_producto=?
2025-06-08 21:51:37.972 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Producto */insert into producto (id_categoria,descripcion,estado,nombre,precio,id_seccion,stock) values (?,?,?,?,?,?,?)
2025-06-08 21:51:37.972 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Producto */update producto set id_categoria=?,descripcion=?,estado=?,nombre=?,precio=?,id_seccion=?,stock=? where id_producto=?
2025-06-08 21:51:37.972 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Producto */delete from producto where id_producto=?
2025-06-08 21:51:37.972 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:51:37.972 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Categoria)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Categoria] 
2025-06-08 21:51:37.972 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Categoria]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Categoria.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Categoria.nombre]

2025-06-08 21:51:37.972 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Categoria) {
          primaryTableReference : categoria as c1_0
        }
      }
    }

2025-06-08 21:51:37.972 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Categoria
2025-06-08 21:51:37.972 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Categoria */ select id_categoria from categoria where id_categoria=?
2025-06-08 21:51:37.972 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */insert into categoria (estado,nombre) values (?,?)
2025-06-08 21:51:37.972 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */update categoria set estado=?,nombre=? where id_categoria=?
2025-06-08 21:51:37.972 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Categoria */delete from categoria where id_categoria=?
2025-06-08 21:51:37.972 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:51:37.972 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Mesa)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Mesa] 
2025-06-08 21:51:37.972 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Mesa]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.capacidad]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.detalle]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.estado]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Mesa.numero]

2025-06-08 21:51:37.972 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Mesa) {
          primaryTableReference : mesa as m1_0
        }
      }
    }

2025-06-08 21:51:37.972 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Mesa
2025-06-08 21:51:37.972 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Mesa */ select id_mesa from mesa where id_mesa=?
2025-06-08 21:51:37.972 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */insert into mesa (capacidad,detalle,estado,numero) values (?,?,?,?)
2025-06-08 21:51:37.972 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */update mesa set capacidad=?,detalle=?,estado=?,numero=? where id_mesa=?
2025-06-08 21:51:37.972 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Mesa */delete from mesa where id_mesa=?
2025-06-08 21:51:37.972 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-08 21:51:37.972 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(pe.edu.upeu.proyecto_restaurant.modulo.Pedido)] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido] 
2025-06-08 21:51:37.972 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@33845e3d] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente] 
2025-06-08 21:51:37.972 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : c1_0
2025-06-08 21:51:37.972 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7e615c6a] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado] 
2025-06-08 21:51:37.972 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2025-06-08 21:51:37.972 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3662c887] with identifierForTableGroup [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa] for NavigablePath [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa] 
2025-06-08 21:51:37.972 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : m1_0
2025-06-08 21:51:37.972 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cantPedidos]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.cantVisitas]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.email]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.nombre]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente.telefono]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.apellido]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.dni]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.estado]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.nombre]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.password]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.rol]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.telefono]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado.usuario]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.estado]
 |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.fechaHora]
 |  +-EntityFetchJoinedImpl [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.capacidad]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.detalle]
 |  |  +-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.estado]
 |  |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa.numero]
 |  \-BasicFetch [pe.edu.upeu.proyecto_restaurant.modulo.Pedido.total]

2025-06-08 21:51:37.972 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido) {
          primaryTableReference : pedido as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.cliente) {
              primaryTableReference : cliente as c1_0
            }
            left  join LazyTableGroup (e1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.empleado) {
              primaryTableReference : empleado as e1_0
            }
            left  join LazyTableGroup (m1 : pe.edu.upeu.proyecto_restaurant.modulo.Pedido.mesa) {
              primaryTableReference : mesa as m1_0
            }
          }
        }
      }
    }

2025-06-08 21:51:37.972 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: pe.edu.upeu.proyecto_restaurant.modulo.Pedido
2025-06-08 21:51:37.972 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: /* get version pe.edu.upeu.proyecto_restaurant.modulo.Pedido */ select id_pedido from pedido where id_pedido=?
2025-06-08 21:51:37.972 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): /* insert for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */insert into pedido (cant_pedidos,id_cliente,id_empleado,estado,fecha_hora,id_mesa,total) values (?,?,?,?,?,?,?)
2025-06-08 21:51:37.972 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): /* update for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */update pedido set cant_pedidos=?,id_cliente=?,id_empleado=?,estado=?,fecha_hora=?,id_mesa=?,total=? where id_pedido=?
2025-06-08 21:51:37.972 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): /* delete for pe.edu.upeu.proyecto_restaurant.modulo.Pedido */delete from pedido where id_pedido=?
2025-06-08 21:51:38.029 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-08 21:51:38.030 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@52b32b70] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@47224d5d]
2025-06-08 21:51:38.030 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries
2025-06-08 21:51:38.030 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries
2025-06-08 21:51:38.080 [main] DEBUG org.hibernate.SQL - 
    create table categoria (
        id_categoria integer,
        estado varchar(20),
        nombre varchar(100) not null,
        primary key (id_categoria)
    )
2025-06-08 21:51:38.104 [main] DEBUG org.hibernate.SQL - 
    create table cliente (
        id_cliente integer,
        apellido varchar(50) not null,
        cant_visitas integer,
        dni varchar(8) unique,
        email varchar(100),
        estado varchar(20),
        nombre varchar(50) not null,
        telefono varchar(15),
        primary key (id_cliente)
    )
2025-06-08 21:51:38.113 [main] DEBUG org.hibernate.SQL - 
    create table detalle_pedido (
        id_detalle_pedido integer,
        cantidad integer not null,
        estado varchar(20),
        igv float,
        precio_unitario float not null,
        subtotal float not null,
        total float,
        id_factura bigint,
        id_pedido bigint not null,
        id_producto bigint not null,
        primary key (id_detalle_pedido)
    )
2025-06-08 21:51:38.121 [main] DEBUG org.hibernate.SQL - 
    create table empleado (
        id_empleado integer,
        apellido varchar(100) not null,
        dni varchar(8) not null unique,
        estado varchar(20),
        nombre varchar(100) not null,
        password varchar(100) not null,
        rol varchar(20) not null,
        telefono varchar(9),
        usuario varchar(50) not null unique,
        primary key (id_empleado)
    )
2025-06-08 21:51:38.127 [main] DEBUG org.hibernate.SQL - 
    create table factura (
        id_factura integer,
        codigo varchar(20) unique,
        estado varchar(20),
        fecha_emision timestamp,
        igv float,
        subtotal float,
        total float,
        id_cliente bigint,
        id_pedido bigint unique,
        primary key (id_factura)
    )
2025-06-08 21:51:38.129 [main] DEBUG org.hibernate.SQL - 
    create table menu (
        id_menu integer,
        cod_pedido varchar(50),
        id_pedido bigint,
        id_producto bigint,
        primary key (id_menu)
    )
2025-06-08 21:51:38.137 [main] DEBUG org.hibernate.SQL - 
    create table mesa (
        id_mesa integer,
        capacidad integer not null,
        detalle varchar(200),
        estado varchar(20),
        numero integer not null unique,
        primary key (id_mesa)
    )
2025-06-08 21:51:38.137 [main] DEBUG org.hibernate.SQL - 
    create table pedido (
        id_pedido integer,
        cant_pedidos integer,
        estado varchar(20),
        fecha_hora timestamp,
        total float,
        id_cliente bigint,
        id_empleado bigint,
        id_mesa bigint,
        primary key (id_pedido)
    )
2025-06-08 21:51:38.146 [main] DEBUG org.hibernate.SQL - 
    create table producto (
        id_producto integer,
        descripcion varchar(200),
        estado varchar(20),
        nombre varchar(100) not null,
        precio float not null,
        stock integer,
        id_categoria bigint,
        id_seccion bigint,
        primary key (id_producto)
    )
2025-06-08 21:51:38.151 [main] DEBUG org.hibernate.SQL - 
    create table seccion (
        id_seccion integer,
        detalle varchar(200),
        estado varchar(20),
        primary key (id_seccion)
    )
2025-06-08 21:51:38.154 [main] DEBUG org.hibernate.SQL - 
    alter table cliente 
       drop constraint UKjlcg5nhnauli1hu4ojldsedaw
2025-06-08 21:51:38.161 [main] DEBUG org.hibernate.SQL - 
    alter table empleado 
       drop constraint UKanilfn0t89ht43r8n8lthr5b6
2025-06-08 21:51:38.161 [main] DEBUG org.hibernate.SQL - 
    alter table empleado 
       drop constraint UKoqf74jqhm1ebgyhxm1hpi47a1
2025-06-08 21:51:38.161 [main] DEBUG org.hibernate.SQL - 
    alter table factura 
       drop constraint UKryur2qj8kssrt1i8k19k80ay6
2025-06-08 21:51:38.161 [main] DEBUG org.hibernate.SQL - 
    alter table factura 
       drop constraint UK6p1mkrhrf2lbjw92gxveb20ti
2025-06-08 21:51:38.161 [main] DEBUG org.hibernate.SQL - 
    alter table mesa 
       drop constraint UKi077nx9cdra17v0vkcb53x52r
2025-06-08 21:51:38.162 [main] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7eb94590
2025-06-08 21:51:38.162 [main] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 49b15213-0c37-4056-af2c-3832ed8972a4 (<unnamed>)
2025-06-08 21:51:38.162 [main] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-06-08 21:51:38.162 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory
2025-06-08 21:51:38.162 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-08 21:51:38.465 [main] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2025-06-08 21:51:38.754 [main] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy112.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1462)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:155)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:111)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1709)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:194)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
2025-06-08 21:51:38.807 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-08 21:51:38.811 [main] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy112.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:147)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1462)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:155)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:111)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1709)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:194)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
2025-06-08 21:51:38.933 [main] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy112.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1462)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:155)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:111)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1709)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:194)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
2025-06-08 21:51:39.169 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-08 21:51:39.174 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-06-08 21:51:39.174 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-06-08 21:51:39.177 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-08 21:51:39.177 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-06-08 21:51:39.177 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-08 21:51:39.177 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-08 21:51:39.180 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-08 21:51:39.180 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-08 21:51:39.180 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-08 21:51:39.182 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-08 21:51:39.182 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-08 21:51:39.182 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-08 21:51:39.182 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-08 21:51:39.182 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-08 21:51:39.182 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-08 21:51:39.445 [main] INFO  p.e.u.p.ProyectoRestaurantApplicationTests - Started ProyectoRestaurantApplicationTests in 8.619 seconds (process running for 10.433)
2025-06-08 21:51:40.145 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-08 21:51:40.145 [SpringApplicationShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing
2025-06-08 21:51:40.145 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@20070735] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@47224d5d]
2025-06-08 21:51:40.145 [SpringApplicationShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2025-06-08 21:51:40.149 [SpringApplicationShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2025-06-08 21:51:40.149 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-08 21:51:40.153 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
